00:08:00 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:37:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(VegtableProduct))
                 ^
../src/Store.cpp:39:66: error: no matching function for call to ‘VegtableProduct::VegtableProduct(const Product&)’
   mAllProductArray.push_back(static_cast<VegtableProduct>(product));
                                                                  ^
../src/Store.cpp:39:66: note: candidates are:
In file included from ../src/Store.cpp:9:0:
../src/VegtableProduct.h:16:2: note: VegtableProduct::VegtableProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  VegtableProduct(const string& name, int id,  int shelf, char row, int weight,
  ^
../src/VegtableProduct.h:16:2: note:   candidate expects 9 arguments, 1 provided
../src/VegtableProduct.h:10:7: note: VegtableProduct::VegtableProduct(const VegtableProduct&)
 class VegtableProduct: public FarmProduct {
       ^
../src/VegtableProduct.h:10:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const VegtableProduct&’
../src/Store.cpp:41:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(OtherMilkProduct))
                 ^
../src/Store.cpp:43:67: error: no matching function for call to ‘OtherMilkProduct::OtherMilkProduct(const Product&)’
   mAllProductArray.push_back(static_cast<OtherMilkProduct>(product));
                                                                   ^
../src/Store.cpp:43:67: note: candidates are:
In file included from ../src/Store.cpp:11:0:
../src/OtherMilkProduct.h:18:2: note: OtherMilkProduct::OtherMilkProduct(int, int, char, int, ExposureValue, const string&, int, int, int, const string*)
  OtherMilkProduct(int id, int shelf, char row, int weight,
  ^
../src/OtherMilkProduct.h:18:2: note:   candidate expects 10 arguments, 1 provided
../src/OtherMilkProduct.h:11:7: note: OtherMilkProduct::OtherMilkProduct(const OtherMilkProduct&)
 class OtherMilkProduct: public MilkProduct {
       ^
../src/OtherMilkProduct.h:11:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const OtherMilkProduct&’
../src/Store.cpp:45:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(CheeseProduct))
                 ^
../src/Store.cpp:47:64: error: no matching function for call to ‘CheeseProduct::CheeseProduct(const Product&)’
   mAllProductArray.push_back(static_cast<CheeseProduct>(product));
                                                                ^
../src/Store.cpp:47:64: note: candidates are:
In file included from ../src/Store.cpp:10:0:
../src/CheeseProduct.h:17:2: note: CheeseProduct::CheeseProduct(int, int, char, int, ExposureValue, const string&, int, int, int)
  CheeseProduct(int id, int shelf, char row, int weight,
  ^
../src/CheeseProduct.h:17:2: note:   candidate expects 9 arguments, 1 provided
../src/CheeseProduct.h:11:7: note: CheeseProduct::CheeseProduct(const CheeseProduct&)
 class CheeseProduct: public MilkProduct
       ^
../src/CheeseProduct.h:11:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const CheeseProduct&’
../src/Store.cpp:49:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(PackageProduct))
                 ^
../src/Store.cpp:51:65: error: no matching function for call to ‘PackageProduct::PackageProduct(const Product&)’
   mAllProductArray.push_back(static_cast<PackageProduct>(product));
                                                                 ^
../src/Store.cpp:51:65: note: candidates are:
In file included from ../src/Store.cpp:12:0:
../src/PackageProduct.h:16:2: note: PackageProduct::PackageProduct(int, int, char, int, ExposureValue, int, const string*, int)
  PackageProduct(int id, int shelf, char row, int weight, ExposureValue exposure,
  ^
../src/PackageProduct.h:16:2: note:   candidate expects 8 arguments, 1 provided
../src/PackageProduct.h:7:7: note: PackageProduct::PackageProduct(const PackageProduct&)
 class PackageProduct: public Product
       ^
../src/PackageProduct.h:7:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const PackageProduct&’
../src/Store.cpp: In member function ‘int Store::calculateStoreValue() const’:
../src/Store.cpp:62:18: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0;i < mAllProductArray.size(); ++i)
                  ^
../src/Store.cpp: In member function ‘void Store::printStoreDetails() const’:
../src/Store.cpp:73:18: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0;i < mAllProductArray.size(); ++i)
                  ^
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:64:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
src/subdir.mk:45: recipe for target 'src/Store.o' failed
    _Tp __x_copy = __x;
        ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: error: non-static const member ‘const int Product::mId’, can’t use default assignment operator
 class Product {
       ^
../src/Product.h:17:7: error: non-static const member ‘const int Product::mShelf’, can’t use default assignment operator
../src/Product.h:17:7: error: non-static const member ‘const char Product::mRow’, can’t use default assignment operator
../src/Product.h:17:7: error: non-static const member ‘const ProductType Product::mType’, can’t use default assignment operator
../src/Product.h:17:7: error: non-static const member ‘const ExposureValue Product::mExposure’, can’t use default assignment operator
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc:343:16: note: synthesized method ‘Product& Product::operator=(const Product&)’ first required here 
    *__position = __x_copy;
                ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:64:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
make: *** [src/Store.o] Error 1
00:09:30 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:37:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(VegtableProduct))
                 ^
../src/Store.cpp:39:66: error: no matching function for call to ‘VegtableProduct::VegtableProduct(const Product&)’
   mAllProductArray.push_back(static_cast<VegtableProduct>(product));
                                                                  ^
../src/Store.cpp:39:66: note: candidates are:
In file included from ../src/Store.cpp:9:0:
../src/VegtableProduct.h:16:2: note: VegtableProduct::VegtableProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  VegtableProduct(const string& name, int id,  int shelf, char row, int weight,
  ^
../src/VegtableProduct.h:16:2: note:   candidate expects 9 arguments, 1 provided
../src/VegtableProduct.h:10:7: note: VegtableProduct::VegtableProduct(const VegtableProduct&)
 class VegtableProduct: public FarmProduct {
       ^
../src/VegtableProduct.h:10:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const VegtableProduct&’
../src/Store.cpp:41:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(OtherMilkProduct))
                 ^
../src/Store.cpp:43:67: error: no matching function for call to ‘OtherMilkProduct::OtherMilkProduct(const Product&)’
   mAllProductArray.push_back(static_cast<OtherMilkProduct>(product));
                                                                   ^
../src/Store.cpp:43:67: note: candidates are:
In file included from ../src/Store.cpp:11:0:
../src/OtherMilkProduct.h:18:2: note: OtherMilkProduct::OtherMilkProduct(int, int, char, int, ExposureValue, const string&, int, int, int, const string*)
  OtherMilkProduct(int id, int shelf, char row, int weight,
  ^
../src/OtherMilkProduct.h:18:2: note:   candidate expects 10 arguments, 1 provided
../src/OtherMilkProduct.h:11:7: note: OtherMilkProduct::OtherMilkProduct(const OtherMilkProduct&)
 class OtherMilkProduct: public MilkProduct {
       ^
../src/OtherMilkProduct.h:11:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const OtherMilkProduct&’
../src/Store.cpp:45:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(CheeseProduct))
                 ^
../src/Store.cpp:47:64: error: no matching function for call to ‘CheeseProduct::CheeseProduct(const Product&)’
   mAllProductArray.push_back(static_cast<CheeseProduct>(product));
                                                                ^
../src/Store.cpp:47:64: note: candidates are:
In file included from ../src/Store.cpp:10:0:
../src/CheeseProduct.h:17:2: note: CheeseProduct::CheeseProduct(int, int, char, int, ExposureValue, const string&, int, int, int)
  CheeseProduct(int id, int shelf, char row, int weight,
  ^
../src/CheeseProduct.h:17:2: note:   candidate expects 9 arguments, 1 provided
../src/CheeseProduct.h:11:7: note: CheeseProduct::CheeseProduct(const CheeseProduct&)
 class CheeseProduct: public MilkProduct
       ^
../src/CheeseProduct.h:11:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const CheeseProduct&’
../src/Store.cpp:49:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(PackageProduct))
                 ^
../src/Store.cpp:51:65: error: no matching function for call to ‘PackageProduct::PackageProduct(const Product&)’
   mAllProductArray.push_back(static_cast<PackageProduct>(product));
                                                                 ^
../src/Store.cpp:51:65: note: candidates are:
In file included from ../src/Store.cpp:12:0:
../src/PackageProduct.h:16:2: note: PackageProduct::PackageProduct(int, int, char, int, ExposureValue, int, const string*, int)
  PackageProduct(int id, int shelf, char row, int weight, ExposureValue exposure,
  ^
../src/PackageProduct.h:16:2: note:   candidate expects 8 arguments, 1 provided
../src/PackageProduct.h:7:7: note: PackageProduct::PackageProduct(const PackageProduct&)
 class PackageProduct: public Product
       ^
../src/PackageProduct.h:7:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const PackageProduct&’
../src/Store.cpp: In member function ‘int Store::calculateStoreValue() const’:
../src/Store.cpp:62:18: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0;i < mAllProductArray.size(); ++i)
                  ^
../src/Store.cpp: In member function ‘void Store::printStoreDetails() const’:
../src/Store.cpp:73:18: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
src/subdir.mk:45: recipe for target 'src/Store.o' failed
  for(int i = 0;i < mAllProductArray.size(); ++i)
                  ^
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:64:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: error: non-static const member ‘const int Product::mId’, can’t use default assignment operator
 class Product {
       ^
../src/Product.h:17:7: error: non-static const member ‘const int Product::mShelf’, can’t use default assignment operator
../src/Product.h:17:7: error: non-static const member ‘const char Product::mRow’, can’t use default assignment operator
../src/Product.h:17:7: error: non-static const member ‘const ProductType Product::mType’, can’t use default assignment operator
../src/Product.h:17:7: error: non-static const member ‘const ExposureValue Product::mExposure’, can’t use default assignment operator
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc:343:16: note: synthesized method ‘Product& Product::operator=(const Product&)’ first required here 
    *__position = __x_copy;
                ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:64:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
make: *** [src/Store.o] Error 1
00:09:34 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/CheeseProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/CheeseProduct.d" -MT"src/CheeseProduct.d" -o "src/CheeseProduct.o" "../src/CheeseProduct.cpp"
Finished building: ../src/CheeseProduct.cpp
 
Building file: ../src/FarmProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/FarmProduct.d" -MT"src/FarmProduct.d" -o "src/FarmProduct.o" "../src/FarmProduct.cpp"
Finished building: ../src/FarmProduct.cpp
 
Building file: ../src/FruitProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/FruitProduct.d" -MT"src/FruitProduct.d" -o "src/FruitProduct.o" "../src/FruitProduct.cpp"
Finished building: ../src/FruitProduct.cpp
 
Building file: ../src/MilkProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/MilkProduct.d" -MT"src/MilkProduct.d" -o "src/MilkProduct.o" "../src/MilkProduct.cpp"
Finished building: ../src/MilkProduct.cpp
 
Building file: ../src/OtherMilkProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/OtherMilkProduct.d" -MT"src/OtherMilkProduct.d" -o "src/OtherMilkProduct.o" "../src/OtherMilkProduct.cpp"
Finished building: ../src/OtherMilkProduct.cpp
 
Building file: ../src/PackageProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/PackageProduct.d" -MT"src/PackageProduct.d" -o "src/PackageProduct.o" "../src/PackageProduct.cpp"
Finished building: ../src/PackageProduct.cpp
 
Building file: ../src/Product.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Product.d" -MT"src/Product.d" -o "src/Product.o" "../src/Product.cpp"
Finished building: ../src/Product.cpp
 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:37:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(VegtableProduct))
                 ^
../src/Store.cpp:39:66: error: no matching function for call to ‘VegtableProduct::VegtableProduct(const Product&)’
   mAllProductArray.push_back(static_cast<VegtableProduct>(product));
                                                                  ^
../src/Store.cpp:39:66: note: candidates are:
In file included from ../src/Store.cpp:9:0:
../src/VegtableProduct.h:16:2: note: VegtableProduct::VegtableProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  VegtableProduct(const string& name, int id,  int shelf, char row, int weight,
  ^
../src/VegtableProduct.h:16:2: note:   candidate expects 9 arguments, 1 provided
../src/VegtableProduct.h:10:7: note: VegtableProduct::VegtableProduct(const VegtableProduct&)
 class VegtableProduct: public FarmProduct {
       ^
../src/VegtableProduct.h:10:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const VegtableProduct&’
../src/Store.cpp:41:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(OtherMilkProduct))
                 ^
../src/Store.cpp:43:67: error: no matching function for call to ‘OtherMilkProduct::OtherMilkProduct(const Product&)’
   mAllProductArray.push_back(static_cast<OtherMilkProduct>(product));
                                                                   ^
../src/Store.cpp:43:67: note: candidates are:
In file included from ../src/Store.cpp:11:0:
../src/OtherMilkProduct.h:18:2: note: OtherMilkProduct::OtherMilkProduct(int, int, char, int, ExposureValue, const string&, int, int, int, const string*)
  OtherMilkProduct(int id, int shelf, char row, int weight,
  ^
../src/OtherMilkProduct.h:18:2: note:   candidate expects 10 arguments, 1 provided
../src/OtherMilkProduct.h:11:7: note: OtherMilkProduct::OtherMilkProduct(const OtherMilkProduct&)
 class OtherMilkProduct: public MilkProduct {
       ^
../src/OtherMilkProduct.h:11:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const OtherMilkProduct&’
../src/Store.cpp:45:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(CheeseProduct))
                 ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
../src/Store.cpp:47:64: error: no matching function for call to ‘CheeseProduct::CheeseProduct(const Product&)’
   mAllProductArray.push_back(static_cast<CheeseProduct>(product));
                                                                ^
../src/Store.cpp:47:64: note: candidates are:
In file included from ../src/Store.cpp:10:0:
../src/CheeseProduct.h:17:2: note: CheeseProduct::CheeseProduct(int, int, char, int, ExposureValue, const string&, int, int, int)
  CheeseProduct(int id, int shelf, char row, int weight,
  ^
../src/CheeseProduct.h:17:2: note:   candidate expects 9 arguments, 1 provided
../src/CheeseProduct.h:11:7: note: CheeseProduct::CheeseProduct(const CheeseProduct&)
 class CheeseProduct: public MilkProduct
       ^
../src/CheeseProduct.h:11:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const CheeseProduct&’
../src/Store.cpp:49:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(PackageProduct))
                 ^
../src/Store.cpp:51:65: error: no matching function for call to ‘PackageProduct::PackageProduct(const Product&)’
   mAllProductArray.push_back(static_cast<PackageProduct>(product));
                                                                 ^
../src/Store.cpp:51:65: note: candidates are:
In file included from ../src/Store.cpp:12:0:
../src/PackageProduct.h:16:2: note: PackageProduct::PackageProduct(int, int, char, int, ExposureValue, int, const string*, int)
  PackageProduct(int id, int shelf, char row, int weight, ExposureValue exposure,
  ^
../src/PackageProduct.h:16:2: note:   candidate expects 8 arguments, 1 provided
../src/PackageProduct.h:7:7: note: PackageProduct::PackageProduct(const PackageProduct&)
 class PackageProduct: public Product
       ^
../src/PackageProduct.h:7:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const PackageProduct&’
../src/Store.cpp: In member function ‘int Store::calculateStoreValue() const’:
../src/Store.cpp:62:18: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0;i < mAllProductArray.size(); ++i)
                  ^
../src/Store.cpp: In member function ‘void Store::printStoreDetails() const’:
../src/Store.cpp:73:18: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0;i < mAllProductArray.size(); ++i)
                  ^
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:64:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:64:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
make: *** [src/Store.o] Error 1
00:12:02 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/FruitProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/FruitProduct.d" -MT"src/FruitProduct.d" -o "src/FruitProduct.o" "../src/FruitProduct.cpp"
Finished building: ../src/FruitProduct.cpp
 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:63: error: no matching function for call to ‘FruitProduct::FruitProduct(const Product&)’
   mAllProductArray.push_back(static_cast<FruitProduct>(product));
                                                               ^
../src/Store.cpp:35:63: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct &fruitproduct);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:37:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(VegtableProduct))
                 ^
../src/Store.cpp:39:66: error: no matching function for call to ‘VegtableProduct::VegtableProduct(const Product&)’
   mAllProductArray.push_back(static_cast<VegtableProduct>(product));
                                                                  ^
../src/Store.cpp:39:66: note: candidates are:
In file included from ../src/Store.cpp:9:0:
../src/VegtableProduct.h:16:2: note: VegtableProduct::VegtableProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  VegtableProduct(const string& name, int id,  int shelf, char row, int weight,
  ^
../src/VegtableProduct.h:16:2: note:   candidate expects 9 arguments, 1 provided
../src/VegtableProduct.h:10:7: note: VegtableProduct::VegtableProduct(const VegtableProduct&)
 class VegtableProduct: public FarmProduct {
       ^
../src/VegtableProduct.h:10:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const VegtableProduct&’
../src/Store.cpp:41:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(OtherMilkProduct))
                 ^
../src/Store.cpp:43:67: error: no matching function for call to ‘OtherMilkProduct::OtherMilkProduct(const Product&)’
   mAllProductArray.push_back(static_cast<OtherMilkProduct>(product));
                                                                   ^
../src/Store.cpp:43:67: note: candidates are:
In file included from ../src/Store.cpp:11:0:
../src/OtherMilkProduct.h:18:2: note: OtherMilkProduct::OtherMilkProduct(int, int, char, int, ExposureValue, const string&, int, int, int, const string*)
  OtherMilkProduct(int id, int shelf, char row, int weight,
  ^
../src/OtherMilkProduct.h:18:2: note:   candidate expects 10 arguments, 1 provided
../src/OtherMilkProduct.h:11:7: note: OtherMilkProduct::OtherMilkProduct(const OtherMilkProduct&)
 class OtherMilkProduct: public MilkProduct {
       ^
../src/OtherMilkProduct.h:11:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const OtherMilkProduct&’
../src/Store.cpp:45:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(CheeseProduct))
                 ^
../src/Store.cpp:47:64: error: no matching function for call to ‘CheeseProduct::CheeseProduct(const Product&)’
src/subdir.mk:45: recipe for target 'src/Store.o' failed
   mAllProductArray.push_back(static_cast<CheeseProduct>(product));
                                                                ^
../src/Store.cpp:47:64: note: candidates are:
In file included from ../src/Store.cpp:10:0:
../src/CheeseProduct.h:17:2: note: CheeseProduct::CheeseProduct(int, int, char, int, ExposureValue, const string&, int, int, int)
  CheeseProduct(int id, int shelf, char row, int weight,
  ^
../src/CheeseProduct.h:17:2: note:   candidate expects 9 arguments, 1 provided
../src/CheeseProduct.h:11:7: note: CheeseProduct::CheeseProduct(const CheeseProduct&)
 class CheeseProduct: public MilkProduct
       ^
../src/CheeseProduct.h:11:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const CheeseProduct&’
../src/Store.cpp:49:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(PackageProduct))
                 ^
../src/Store.cpp:51:65: error: no matching function for call to ‘PackageProduct::PackageProduct(const Product&)’
   mAllProductArray.push_back(static_cast<PackageProduct>(product));
                                                                 ^
../src/Store.cpp:51:65: note: candidates are:
In file included from ../src/Store.cpp:12:0:
../src/PackageProduct.h:16:2: note: PackageProduct::PackageProduct(int, int, char, int, ExposureValue, int, const string*, int)
  PackageProduct(int id, int shelf, char row, int weight, ExposureValue exposure,
  ^
../src/PackageProduct.h:16:2: note:   candidate expects 8 arguments, 1 provided
../src/PackageProduct.h:7:7: note: PackageProduct::PackageProduct(const PackageProduct&)
 class PackageProduct: public Product
       ^
../src/PackageProduct.h:7:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const PackageProduct&’
../src/Store.cpp: In member function ‘int Store::calculateStoreValue() const’:
../src/Store.cpp:62:18: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0;i < mAllProductArray.size(); ++i)
                  ^
../src/Store.cpp: In member function ‘void Store::printStoreDetails() const’:
../src/Store.cpp:73:18: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0;i < mAllProductArray.size(); ++i)
                  ^
make: *** [src/Store.o] Error 1
00:50:35 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/CheeseProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/CheeseProduct.d" -MT"src/CheeseProduct.d" -o "src/CheeseProduct.o" "../src/CheeseProduct.cpp"
Finished building: ../src/CheeseProduct.cpp
 
Building file: ../src/MilkProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/MilkProduct.d" -MT"src/MilkProduct.d" -o "src/MilkProduct.o" "../src/MilkProduct.cpp"
../src/MilkProduct.cpp: In copy constructor ‘MilkProduct::MilkProduct(const MilkProduct&)’:
../src/MilkProduct.cpp:39:56: error: no matching function for call to ‘Product::Product()’
 MilkProduct::MilkProduct(const MilkProduct& milkproduct) {
                                                        ^
../src/MilkProduct.cpp:39:56: note: candidates are:
src/subdir.mk:45: recipe for target 'src/MilkProduct.o' failed
In file included from ../src/MilkProduct.cpp:7:0:
../src/Product.h:29:2: note: Product::Product(const Product&)
  Product(const Product &product);
  ^
../src/Product.h:29:2: note:   candidate expects 1 argument, 0 provided
../src/Product.h:28:2: note: Product::Product(int, int, char, int, ProductType, ExposureValue)
  Product(int id, int shelf, char row, int weight, ProductType type, ExposureValue exposure);
  ^
../src/Product.h:28:2: note:   candidate expects 6 arguments, 0 provided
../src/MilkProduct.cpp:39:1: error: uninitialized const member in ‘const enum MilkType’ [-fpermissive]
 MilkProduct::MilkProduct(const MilkProduct& milkproduct) {
 ^
In file included from ../src/MilkProduct.cpp:8:0:
../src/MilkProduct.h:16:17: note: ‘const MilkType MilkProduct::mMilkType’ should be initialized
  const MilkType mMilkType;
                 ^
../src/MilkProduct.cpp:39:1: error: uninitialized const member in ‘const int’ [-fpermissive]
 MilkProduct::MilkProduct(const MilkProduct& milkproduct) {
 ^
In file included from ../src/MilkProduct.cpp:8:0:
../src/MilkProduct.h:18:12: note: ‘const int MilkProduct::mColorCount’ should be initialized
  const int mColorCount;
            ^
../src/MilkProduct.cpp:39:1: error: uninitialized const member in ‘const int’ [-fpermissive]
 MilkProduct::MilkProduct(const MilkProduct& milkproduct) {
 ^
In file included from ../src/MilkProduct.cpp:8:0:
../src/MilkProduct.h:19:12: note: ‘const int MilkProduct::mFat’ should be initialized
  const int mFat;
            ^
make: *** [src/MilkProduct.o] Error 1
00:51:28 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/MilkProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/MilkProduct.d" -MT"src/MilkProduct.d" -o "src/MilkProduct.o" "../src/MilkProduct.cpp"
Finished building: ../src/MilkProduct.cpp
 
Building file: ../src/OtherMilkProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/OtherMilkProduct.d" -MT"src/OtherMilkProduct.d" -o "src/OtherMilkProduct.o" "../src/OtherMilkProduct.cpp"
Finished building: ../src/OtherMilkProduct.cpp
 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:63: error: no matching function for call to ‘FruitProduct::FruitProduct(const Product&)’
   mAllProductArray.push_back(static_cast<FruitProduct>(product));
                                                               ^
../src/Store.cpp:35:63: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct &fruitproduct);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:37:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(VegtableProduct))
                 ^
../src/Store.cpp:39:66: error: no matching function for call to ‘VegtableProduct::VegtableProduct(const Product&)’
   mAllProductArray.push_back(static_cast<VegtableProduct>(product));
                                                                  ^
../src/Store.cpp:39:66: note: candidates are:
In file included from ../src/Store.cpp:9:0:
../src/VegtableProduct.h:18:2: note: VegtableProduct::VegtableProduct(const VegtableProduct&)
src/subdir.mk:45: recipe for target 'src/Store.o' failed
  VegtableProduct(const VegtableProduct &vegtableproduct);
  ^
../src/VegtableProduct.h:18:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const VegtableProduct&’
../src/VegtableProduct.h:16:2: note: VegtableProduct::VegtableProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  VegtableProduct(const string& name, int id,  int shelf, char row, int weight,
  ^
../src/VegtableProduct.h:16:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:41:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(OtherMilkProduct))
                 ^
../src/Store.cpp:43:67: error: no matching function for call to ‘OtherMilkProduct::OtherMilkProduct(const Product&)’
   mAllProductArray.push_back(static_cast<OtherMilkProduct>(product));
                                                                   ^
../src/Store.cpp:43:67: note: candidates are:
In file included from ../src/Store.cpp:11:0:
../src/OtherMilkProduct.h:18:2: note: OtherMilkProduct::OtherMilkProduct(int, int, char, int, ExposureValue, const string&, int, int, int, const string*)
  OtherMilkProduct(int id, int shelf, char row, int weight,
  ^
../src/OtherMilkProduct.h:18:2: note:   candidate expects 10 arguments, 1 provided
../src/OtherMilkProduct.h:11:7: note: OtherMilkProduct::OtherMilkProduct(const OtherMilkProduct&)
 class OtherMilkProduct: public MilkProduct {
       ^
../src/OtherMilkProduct.h:11:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const OtherMilkProduct&’
../src/Store.cpp:45:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(CheeseProduct))
                 ^
../src/Store.cpp:47:64: error: no matching function for call to ‘CheeseProduct::CheeseProduct(const Product&)’
   mAllProductArray.push_back(static_cast<CheeseProduct>(product));
                                                                ^
../src/Store.cpp:47:64: note: candidates are:
In file included from ../src/Store.cpp:10:0:
../src/CheeseProduct.h:17:2: note: CheeseProduct::CheeseProduct(int, int, char, int, ExposureValue, const string&, int, int, int)
  CheeseProduct(int id, int shelf, char row, int weight,
  ^
../src/CheeseProduct.h:17:2: note:   candidate expects 9 arguments, 1 provided
../src/CheeseProduct.h:11:7: note: CheeseProduct::CheeseProduct(const CheeseProduct&)
 class CheeseProduct: public MilkProduct
       ^
../src/CheeseProduct.h:11:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const CheeseProduct&’
../src/Store.cpp:49:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(PackageProduct))
                 ^
../src/Store.cpp:51:65: error: no matching function for call to ‘PackageProduct::PackageProduct(const Product&)’
   mAllProductArray.push_back(static_cast<PackageProduct>(product));
                                                                 ^
../src/Store.cpp:51:65: note: candidates are:
In file included from ../src/Store.cpp:12:0:
../src/PackageProduct.h:16:2: note: PackageProduct::PackageProduct(int, int, char, int, ExposureValue, int, const string*, int)
  PackageProduct(int id, int shelf, char row, int weight, ExposureValue exposure,
  ^
../src/PackageProduct.h:16:2: note:   candidate expects 8 arguments, 1 provided
../src/PackageProduct.h:7:7: note: PackageProduct::PackageProduct(const PackageProduct&)
 class PackageProduct: public Product
       ^
../src/PackageProduct.h:7:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const PackageProduct&’
../src/Store.cpp: In member function ‘int Store::calculateStoreValue() const’:
../src/Store.cpp:62:18: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0;i < mAllProductArray.size(); ++i)
                  ^
../src/Store.cpp: In member function ‘void Store::printStoreDetails() const’:
../src/Store.cpp:73:18: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0;i < mAllProductArray.size(); ++i)
                  ^
make: *** [src/Store.o] Error 1
01:01:35 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/CheeseProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/CheeseProduct.d" -MT"src/CheeseProduct.d" -o "src/CheeseProduct.o" "../src/CheeseProduct.cpp"
Finished building: ../src/CheeseProduct.cpp
 
Building file: ../src/OtherMilkProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/OtherMilkProduct.d" -MT"src/OtherMilkProduct.d" -o "src/OtherMilkProduct.o" "../src/OtherMilkProduct.cpp"
Finished building: ../src/OtherMilkProduct.cpp
 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:63: error: no matching function for call to ‘FruitProduct::FruitProduct(const Product&)’
   mAllProductArray.push_back(static_cast<FruitProduct>(product));
                                                               ^
../src/Store.cpp:35:63: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct &fruitproduct);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
src/subdir.mk:45: recipe for target 'src/Store.o' failed
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:37:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(VegtableProduct))
                 ^
../src/Store.cpp:39:66: error: no matching function for call to ‘VegtableProduct::VegtableProduct(const Product&)’
   mAllProductArray.push_back(static_cast<VegtableProduct>(product));
                                                                  ^
../src/Store.cpp:39:66: note: candidates are:
In file included from ../src/Store.cpp:9:0:
../src/VegtableProduct.h:18:2: note: VegtableProduct::VegtableProduct(const VegtableProduct&)
  VegtableProduct(const VegtableProduct &vegtableproduct);
  ^
../src/VegtableProduct.h:18:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const VegtableProduct&’
../src/VegtableProduct.h:16:2: note: VegtableProduct::VegtableProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  VegtableProduct(const string& name, int id,  int shelf, char row, int weight,
  ^
../src/VegtableProduct.h:16:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:41:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(OtherMilkProduct))
                 ^
../src/Store.cpp:43:67: error: no matching function for call to ‘OtherMilkProduct::OtherMilkProduct(const Product&)’
   mAllProductArray.push_back(static_cast<OtherMilkProduct>(product));
                                                                   ^
../src/Store.cpp:43:67: note: candidates are:
In file included from ../src/Store.cpp:11:0:
../src/OtherMilkProduct.h:21:2: note: OtherMilkProduct::OtherMilkProduct(const OtherMilkProduct&)
  OtherMilkProduct(const OtherMilkProduct &othermilkproduct);
  ^
../src/OtherMilkProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const OtherMilkProduct&’
../src/OtherMilkProduct.h:18:2: note: OtherMilkProduct::OtherMilkProduct(int, int, char, int, ExposureValue, const string&, int, int, int, const string*)
  OtherMilkProduct(int id, int shelf, char row, int weight,
  ^
../src/OtherMilkProduct.h:18:2: note:   candidate expects 10 arguments, 1 provided
../src/Store.cpp:45:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(CheeseProduct))
                 ^
../src/Store.cpp:47:64: error: no matching function for call to ‘CheeseProduct::CheeseProduct(const Product&)’
   mAllProductArray.push_back(static_cast<CheeseProduct>(product));
                                                                ^
../src/Store.cpp:47:64: note: candidates are:
In file included from ../src/Store.cpp:10:0:
../src/CheeseProduct.h:20:2: note: CheeseProduct::CheeseProduct(const CheeseProduct&)
  CheeseProduct(const CheeseProduct &cheeseproduct);
  ^
../src/CheeseProduct.h:20:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const CheeseProduct&’
../src/CheeseProduct.h:17:2: note: CheeseProduct::CheeseProduct(int, int, char, int, ExposureValue, const string&, int, int, int)
  CheeseProduct(int id, int shelf, char row, int weight,
  ^
../src/CheeseProduct.h:17:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:49:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(PackageProduct))
                 ^
../src/Store.cpp:51:65: error: no matching function for call to ‘PackageProduct::PackageProduct(const Product&)’
   mAllProductArray.push_back(static_cast<PackageProduct>(product));
                                                                 ^
../src/Store.cpp:51:65: note: candidates are:
In file included from ../src/Store.cpp:12:0:
../src/PackageProduct.h:16:2: note: PackageProduct::PackageProduct(int, int, char, int, ExposureValue, int, const string*, int)
  PackageProduct(int id, int shelf, char row, int weight, ExposureValue exposure,
  ^
../src/PackageProduct.h:16:2: note:   candidate expects 8 arguments, 1 provided
../src/PackageProduct.h:7:7: note: PackageProduct::PackageProduct(const PackageProduct&)
 class PackageProduct: public Product
       ^
../src/PackageProduct.h:7:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const PackageProduct&’
../src/Store.cpp: In member function ‘int Store::calculateStoreValue() const’:
../src/Store.cpp:62:18: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0;i < mAllProductArray.size(); ++i)
                  ^
../src/Store.cpp: In member function ‘void Store::printStoreDetails() const’:
../src/Store.cpp:73:18: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0;i < mAllProductArray.size(); ++i)
                  ^
make: *** [src/Store.o] Error 1
01:03:15 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:56: error: no match for ‘operator*’ (operand type is ‘const Product’)
   mAllProductArray.push_back(static_cast<FruitProduct>(*product));
                                                        ^
../src/Store.cpp:37:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(VegtableProduct))
                 ^
../src/Store.cpp:39:66: error: no matching function for call to ‘VegtableProduct::VegtableProduct(const Product&)’
   mAllProductArray.push_back(static_cast<VegtableProduct>(product));
                                                                  ^
../src/Store.cpp:39:66: note: candidates are:
In file included from ../src/Store.cpp:9:0:
../src/VegtableProduct.h:18:2: note: VegtableProduct::VegtableProduct(const VegtableProduct&)
  VegtableProduct(const VegtableProduct &vegtableproduct);
  ^
../src/VegtableProduct.h:18:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const VegtableProduct&’
../src/VegtableProduct.h:16:2: note: VegtableProduct::VegtableProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  VegtableProduct(const string& name, int id,  int shelf, char row, int weight,
src/subdir.mk:45: recipe for target 'src/Store.o' failed
  ^
../src/VegtableProduct.h:16:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:41:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(OtherMilkProduct))
                 ^
../src/Store.cpp:43:67: error: no matching function for call to ‘OtherMilkProduct::OtherMilkProduct(const Product&)’
   mAllProductArray.push_back(static_cast<OtherMilkProduct>(product));
                                                                   ^
../src/Store.cpp:43:67: note: candidates are:
In file included from ../src/Store.cpp:11:0:
../src/OtherMilkProduct.h:21:2: note: OtherMilkProduct::OtherMilkProduct(const OtherMilkProduct&)
  OtherMilkProduct(const OtherMilkProduct &othermilkproduct);
  ^
../src/OtherMilkProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const OtherMilkProduct&’
../src/OtherMilkProduct.h:18:2: note: OtherMilkProduct::OtherMilkProduct(int, int, char, int, ExposureValue, const string&, int, int, int, const string*)
  OtherMilkProduct(int id, int shelf, char row, int weight,
  ^
../src/OtherMilkProduct.h:18:2: note:   candidate expects 10 arguments, 1 provided
../src/Store.cpp:45:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(CheeseProduct))
                 ^
../src/Store.cpp:47:64: error: no matching function for call to ‘CheeseProduct::CheeseProduct(const Product&)’
   mAllProductArray.push_back(static_cast<CheeseProduct>(product));
                                                                ^
../src/Store.cpp:47:64: note: candidates are:
In file included from ../src/Store.cpp:10:0:
../src/CheeseProduct.h:20:2: note: CheeseProduct::CheeseProduct(const CheeseProduct&)
  CheeseProduct(const CheeseProduct &cheeseproduct);
  ^
../src/CheeseProduct.h:20:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const CheeseProduct&’
../src/CheeseProduct.h:17:2: note: CheeseProduct::CheeseProduct(int, int, char, int, ExposureValue, const string&, int, int, int)
  CheeseProduct(int id, int shelf, char row, int weight,
  ^
../src/CheeseProduct.h:17:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:49:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(PackageProduct))
                 ^
../src/Store.cpp:51:65: error: no matching function for call to ‘PackageProduct::PackageProduct(const Product&)’
   mAllProductArray.push_back(static_cast<PackageProduct>(product));
                                                                 ^
../src/Store.cpp:51:65: note: candidates are:
In file included from ../src/Store.cpp:12:0:
../src/PackageProduct.h:16:2: note: PackageProduct::PackageProduct(int, int, char, int, ExposureValue, int, const string*, int)
  PackageProduct(int id, int shelf, char row, int weight, ExposureValue exposure,
  ^
../src/PackageProduct.h:16:2: note:   candidate expects 8 arguments, 1 provided
../src/PackageProduct.h:7:7: note: PackageProduct::PackageProduct(const PackageProduct&)
 class PackageProduct: public Product
       ^
../src/PackageProduct.h:7:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const PackageProduct&’
../src/Store.cpp: In member function ‘int Store::calculateStoreValue() const’:
../src/Store.cpp:62:18: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0;i < mAllProductArray.size(); ++i)
                  ^
../src/Store.cpp: In member function ‘void Store::printStoreDetails() const’:
../src/Store.cpp:73:18: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0;i < mAllProductArray.size(); ++i)
                  ^
make: *** [src/Store.o] Error 1
01:03:25 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:63: error: no matching function for call to ‘FruitProduct::FruitProduct(const Product&)’
   mAllProductArray.push_back(static_cast<FruitProduct>(product));
                                                               ^
../src/Store.cpp:35:63: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct &fruitproduct);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:37:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(VegtableProduct))
                 ^
../src/Store.cpp:39:66: error: no matching function for call to ‘VegtableProduct::VegtableProduct(const Product&)’
   mAllProductArray.push_back(static_cast<VegtableProduct>(product));
                                                                  ^
../src/Store.cpp:39:66: note: candidates are:
In file included from ../src/Store.cpp:9:0:
../src/VegtableProduct.h:18:2: note: VegtableProduct::VegtableProduct(const VegtableProduct&)
  VegtableProduct(const VegtableProduct &vegtableproduct);
  ^
../src/VegtableProduct.h:18:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const VegtableProduct&’
../src/VegtableProduct.h:16:2: note: VegtableProduct::VegtableProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  VegtableProduct(const string& name, int id,  int shelf, char row, int weight,
  ^
../src/VegtableProduct.h:16:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:41:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(OtherMilkProduct))
                 ^
../src/Store.cpp:43:67: error: no matching function for call to ‘OtherMilkProduct::OtherMilkProduct(const Product&)’
   mAllProductArray.push_back(static_cast<OtherMilkProduct>(product));
                                                                   ^
../src/Store.cpp:43:67: note: candidates are:
In file included from ../src/Store.cpp:11:0:
../src/OtherMilkProduct.h:21:2: note: OtherMilkProduct::OtherMilkProduct(const OtherMilkProduct&)
  OtherMilkProduct(const OtherMilkProduct &othermilkproduct);
  ^
../src/OtherMilkProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const OtherMilkProduct&’
../src/OtherMilkProduct.h:18:2: note: OtherMilkProduct::OtherMilkProduct(int, int, char, int, ExposureValue, const string&, int, int, int, const string*)
  OtherMilkProduct(int id, int shelf, char row, int weight,
  ^
../src/OtherMilkProduct.h:18:2: note:   candidate expects 10 arguments, 1 provided
../src/Store.cpp:45:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(CheeseProduct))
                 ^
../src/Store.cpp:47:64: error: no matching function for call to ‘CheeseProduct::CheeseProduct(const Product&)’
   mAllProductArray.push_back(static_cast<CheeseProduct>(product));
                                                                ^
../src/Store.cpp:47:64: note: candidates are:
In file included from ../src/Store.cpp:10:0:
../src/CheeseProduct.h:20:2: note: CheeseProduct::CheeseProduct(const CheeseProduct&)
  CheeseProduct(const CheeseProduct &cheeseproduct);
  ^
../src/CheeseProduct.h:20:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const CheeseProduct&’
../src/CheeseProduct.h:17:2: note: CheeseProduct::CheeseProduct(int, int, char, int, ExposureValue, const string&, int, int, int)
  CheeseProduct(int id, int shelf, char row, int weight,
  ^
../src/CheeseProduct.h:17:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:49:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(PackageProduct))
                 ^
../src/Store.cpp:51:65: error: no matching function for call to ‘PackageProduct::PackageProduct(const Product&)’
   mAllProductArray.push_back(static_cast<PackageProduct>(product));
                                                                 ^
../src/Store.cpp:51:65: note: candidates are:
In file included from ../src/Store.cpp:12:0:
../src/PackageProduct.h:16:2: note: PackageProduct::PackageProduct(int, int, char, int, ExposureValue, int, const string*, int)
  PackageProduct(int id, int shelf, char row, int weight, ExposureValue exposure,
  ^
../src/PackageProduct.h:16:2: note:   candidate expects 8 arguments, 1 provided
../src/PackageProduct.h:7:7: note: PackageProduct::PackageProduct(const PackageProduct&)
 class PackageProduct: public Product
       ^
../src/PackageProduct.h:7:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const PackageProduct&’
../src/Store.cpp: In member function ‘int Store::calculateStoreValue() const’:
../src/Store.cpp:62:18: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0;i < mAllProductArray.size(); ++i)
                  ^
../src/Store.cpp: In member function ‘void Store::printStoreDetails() const’:
../src/Store.cpp:73:18: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0;i < mAllProductArray.size(); ++i)
                  ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:04:31 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:63: error: no matching function for call to ‘FruitProduct::FruitProduct(const Product&)’
   mAllProductArray.push_back(static_cast<FruitProduct>(product));
                                                               ^
../src/Store.cpp:35:63: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct &fruitproduct);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:37:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(VegtableProduct))
                 ^
../src/Store.cpp:39:66: error: no matching function for call to ‘VegtableProduct::VegtableProduct(const Product&)’
   mAllProductArray.push_back(static_cast<VegtableProduct>(product));
                                                                  ^
../src/Store.cpp:39:66: note: candidates are:
In file included from ../src/Store.cpp:9:0:
../src/VegtableProduct.h:18:2: note: VegtableProduct::VegtableProduct(const VegtableProduct&)
  VegtableProduct(const VegtableProduct &vegtableproduct);
  ^
../src/VegtableProduct.h:18:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const VegtableProduct&’
../src/VegtableProduct.h:16:2: note: VegtableProduct::VegtableProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  VegtableProduct(const string& name, int id,  int shelf, char row, int weight,
  ^
../src/VegtableProduct.h:16:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:41:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
src/subdir.mk:45: recipe for target 'src/Store.o' failed
  else if(typeid(*product) == typeid(OtherMilkProduct))
                 ^
../src/Store.cpp:43:67: error: no matching function for call to ‘OtherMilkProduct::OtherMilkProduct(const Product&)’
   mAllProductArray.push_back(static_cast<OtherMilkProduct>(product));
                                                                   ^
../src/Store.cpp:43:67: note: candidates are:
In file included from ../src/Store.cpp:11:0:
../src/OtherMilkProduct.h:21:2: note: OtherMilkProduct::OtherMilkProduct(const OtherMilkProduct&)
  OtherMilkProduct(const OtherMilkProduct &othermilkproduct);
  ^
../src/OtherMilkProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const OtherMilkProduct&’
../src/OtherMilkProduct.h:18:2: note: OtherMilkProduct::OtherMilkProduct(int, int, char, int, ExposureValue, const string&, int, int, int, const string*)
  OtherMilkProduct(int id, int shelf, char row, int weight,
  ^
../src/OtherMilkProduct.h:18:2: note:   candidate expects 10 arguments, 1 provided
../src/Store.cpp:45:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(CheeseProduct))
                 ^
../src/Store.cpp:47:64: error: no matching function for call to ‘CheeseProduct::CheeseProduct(const Product&)’
   mAllProductArray.push_back(static_cast<CheeseProduct>(product));
                                                                ^
../src/Store.cpp:47:64: note: candidates are:
In file included from ../src/Store.cpp:10:0:
../src/CheeseProduct.h:20:2: note: CheeseProduct::CheeseProduct(const CheeseProduct&)
  CheeseProduct(const CheeseProduct &cheeseproduct);
  ^
../src/CheeseProduct.h:20:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const CheeseProduct&’
../src/CheeseProduct.h:17:2: note: CheeseProduct::CheeseProduct(int, int, char, int, ExposureValue, const string&, int, int, int)
  CheeseProduct(int id, int shelf, char row, int weight,
  ^
../src/CheeseProduct.h:17:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:49:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(PackageProduct))
                 ^
../src/Store.cpp:51:65: error: no matching function for call to ‘PackageProduct::PackageProduct(const Product&)’
   mAllProductArray.push_back(static_cast<PackageProduct>(product));
                                                                 ^
../src/Store.cpp:51:65: note: candidates are:
In file included from ../src/Store.cpp:12:0:
../src/PackageProduct.h:16:2: note: PackageProduct::PackageProduct(int, int, char, int, ExposureValue, int, const string*, int)
  PackageProduct(int id, int shelf, char row, int weight, ExposureValue exposure,
  ^
../src/PackageProduct.h:16:2: note:   candidate expects 8 arguments, 1 provided
../src/PackageProduct.h:7:7: note: PackageProduct::PackageProduct(const PackageProduct&)
 class PackageProduct: public Product
       ^
../src/PackageProduct.h:7:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const PackageProduct&’
../src/Store.cpp: In member function ‘void Store::printStoreDetails() const’:
../src/Store.cpp:74:18: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0;i < mAllProductArray.size(); ++i)
                  ^
make: *** [src/Store.o] Error 1
01:04:58 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:63: error: no matching function for call to ‘FruitProduct::FruitProduct(const Product&)’
   mAllProductArray.push_back(static_cast<FruitProduct>(product));
                                                               ^
../src/Store.cpp:35:63: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct &fruitproduct);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:37:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(VegtableProduct))
                 ^
../src/Store.cpp:39:66: error: no matching function for call to ‘VegtableProduct::VegtableProduct(const Product&)’
   mAllProductArray.push_back(static_cast<VegtableProduct>(product));
                                                                  ^
../src/Store.cpp:39:66: note: candidates are:
In file included from ../src/Store.cpp:9:0:
../src/VegtableProduct.h:18:2: note: VegtableProduct::VegtableProduct(const VegtableProduct&)
  VegtableProduct(const VegtableProduct &vegtableproduct);
  ^
../src/VegtableProduct.h:18:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const VegtableProduct&’
../src/VegtableProduct.h:16:2: note: VegtableProduct::VegtableProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  VegtableProduct(const string& name, int id,  int shelf, char row, int weight,
  ^
../src/VegtableProduct.h:16:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:41:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(OtherMilkProduct))
                 ^
../src/Store.cpp:43:67: error: no matching function for call to ‘OtherMilkProduct::OtherMilkProduct(const Product&)’
   mAllProductArray.push_back(static_cast<OtherMilkProduct>(product));
                                                                   ^
../src/Store.cpp:43:67: note: candidates are:
In file included from ../src/Store.cpp:11:0:
../src/OtherMilkProduct.h:21:2: note: OtherMilkProduct::OtherMilkProduct(const OtherMilkProduct&)
  OtherMilkProduct(const OtherMilkProduct &othermilkproduct);
  ^
../src/OtherMilkProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const OtherMilkProduct&’
../src/OtherMilkProduct.h:18:2: note: OtherMilkProduct::OtherMilkProduct(int, int, char, int, ExposureValue, const string&, int, int, int, const string*)
src/subdir.mk:45: recipe for target 'src/Store.o' failed
  OtherMilkProduct(int id, int shelf, char row, int weight,
  ^
../src/OtherMilkProduct.h:18:2: note:   candidate expects 10 arguments, 1 provided
../src/Store.cpp:45:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(CheeseProduct))
                 ^
../src/Store.cpp:47:64: error: no matching function for call to ‘CheeseProduct::CheeseProduct(const Product&)’
   mAllProductArray.push_back(static_cast<CheeseProduct>(product));
                                                                ^
../src/Store.cpp:47:64: note: candidates are:
In file included from ../src/Store.cpp:10:0:
../src/CheeseProduct.h:20:2: note: CheeseProduct::CheeseProduct(const CheeseProduct&)
  CheeseProduct(const CheeseProduct &cheeseproduct);
  ^
../src/CheeseProduct.h:20:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const CheeseProduct&’
../src/CheeseProduct.h:17:2: note: CheeseProduct::CheeseProduct(int, int, char, int, ExposureValue, const string&, int, int, int)
  CheeseProduct(int id, int shelf, char row, int weight,
  ^
../src/CheeseProduct.h:17:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:49:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(PackageProduct))
                 ^
../src/Store.cpp:51:65: error: no matching function for call to ‘PackageProduct::PackageProduct(const Product&)’
   mAllProductArray.push_back(static_cast<PackageProduct>(product));
                                                                 ^
../src/Store.cpp:51:65: note: candidates are:
In file included from ../src/Store.cpp:12:0:
../src/PackageProduct.h:16:2: note: PackageProduct::PackageProduct(int, int, char, int, ExposureValue, int, const string*, int)
  PackageProduct(int id, int shelf, char row, int weight, ExposureValue exposure,
  ^
../src/PackageProduct.h:16:2: note:   candidate expects 8 arguments, 1 provided
../src/PackageProduct.h:7:7: note: PackageProduct::PackageProduct(const PackageProduct&)
 class PackageProduct: public Product
       ^
../src/PackageProduct.h:7:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const PackageProduct&’
make: *** [src/Store.o] Error 1
01:05:37 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:64: error: invalid static_cast from type ‘const Product’ to type ‘FruitProduct*’
   mAllProductArray.push_back(static_cast<FruitProduct*>(product));
                                                                ^
../src/Store.cpp:37:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(VegtableProduct))
                 ^
../src/Store.cpp:39:66: error: no matching function for call to ‘VegtableProduct::VegtableProduct(const Product&)’
   mAllProductArray.push_back(static_cast<VegtableProduct>(product));
                                                                  ^
../src/Store.cpp:39:66: note: candidates are:
In file included from ../src/Store.cpp:9:0:
../src/VegtableProduct.h:18:2: note: VegtableProduct::VegtableProduct(const VegtableProduct&)
  VegtableProduct(const VegtableProduct &vegtableproduct);
  ^
../src/VegtableProduct.h:18:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const VegtableProduct&’
../src/VegtableProduct.h:16:2: note: VegtableProduct::VegtableProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  VegtableProduct(const string& name, int id,  int shelf, char row, int weight,
  ^
../src/VegtableProduct.h:16:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:41:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(OtherMilkProduct))
                 ^
../src/Store.cpp:43:67: error: no matching function for call to ‘OtherMilkProduct::OtherMilkProduct(const Product&)’
   mAllProductArray.push_back(static_cast<OtherMilkProduct>(product));
                                                                   ^
../src/Store.cpp:43:67: note: candidates are:
In file included from ../src/Store.cpp:11:0:
../src/OtherMilkProduct.h:21:2: note: OtherMilkProduct::OtherMilkProduct(const OtherMilkProduct&)
  OtherMilkProduct(const OtherMilkProduct &othermilkproduct);
  ^
../src/OtherMilkProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const OtherMilkProduct&’
../src/OtherMilkProduct.h:18:2: note: OtherMilkProduct::OtherMilkProduct(int, int, char, int, ExposureValue, const string&, int, int, int, const string*)
  OtherMilkProduct(int id, int shelf, char row, int weight,
  ^
../src/OtherMilkProduct.h:18:2: note:   candidate expects 10 arguments, 1 provided
../src/Store.cpp:45:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(CheeseProduct))
                 ^
../src/Store.cpp:47:64: error: no matching function for call to ‘CheeseProduct::CheeseProduct(const Product&)’
   mAllProductArray.push_back(static_cast<CheeseProduct>(product));
                                                                ^
../src/Store.cpp:47:64: note: candidates are:
In file included from ../src/Store.cpp:10:0:
../src/CheeseProduct.h:20:2: note: CheeseProduct::CheeseProduct(const CheeseProduct&)
src/subdir.mk:45: recipe for target 'src/Store.o' failed
  CheeseProduct(const CheeseProduct &cheeseproduct);
  ^
../src/CheeseProduct.h:20:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const CheeseProduct&’
../src/CheeseProduct.h:17:2: note: CheeseProduct::CheeseProduct(int, int, char, int, ExposureValue, const string&, int, int, int)
  CheeseProduct(int id, int shelf, char row, int weight,
  ^
../src/CheeseProduct.h:17:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:49:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(PackageProduct))
                 ^
../src/Store.cpp:51:65: error: no matching function for call to ‘PackageProduct::PackageProduct(const Product&)’
   mAllProductArray.push_back(static_cast<PackageProduct>(product));
                                                                 ^
../src/Store.cpp:51:65: note: candidates are:
In file included from ../src/Store.cpp:12:0:
../src/PackageProduct.h:16:2: note: PackageProduct::PackageProduct(int, int, char, int, ExposureValue, int, const string*, int)
  PackageProduct(int id, int shelf, char row, int weight, ExposureValue exposure,
  ^
../src/PackageProduct.h:16:2: note:   candidate expects 8 arguments, 1 provided
../src/PackageProduct.h:7:7: note: PackageProduct::PackageProduct(const PackageProduct&)
 class PackageProduct: public Product
       ^
../src/PackageProduct.h:7:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const PackageProduct&’
make: *** [src/Store.o] Error 1
01:05:56 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:65: error: expected primary-expression before ‘)’ token
   mAllProductArray.push_back(static_cast<FruitProduct*>(product*));
                                                                 ^
../src/Store.cpp:37:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(VegtableProduct))
                 ^
../src/Store.cpp:39:66: error: no matching function for call to ‘VegtableProduct::VegtableProduct(const Product&)’
   mAllProductArray.push_back(static_cast<VegtableProduct>(product));
                                                                  ^
../src/Store.cpp:39:66: note: candidates are:
In file included from ../src/Store.cpp:9:0:
../src/VegtableProduct.h:18:2: note: VegtableProduct::VegtableProduct(const VegtableProduct&)
  VegtableProduct(const VegtableProduct &vegtableproduct);
  ^
../src/VegtableProduct.h:18:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const VegtableProduct&’
../src/VegtableProduct.h:16:2: note: VegtableProduct::VegtableProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  VegtableProduct(const string& name, int id,  int shelf, char row, int weight,
  ^
../src/VegtableProduct.h:16:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:41:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(OtherMilkProduct))
                 ^
../src/Store.cpp:43:67: error: no matching function for call to ‘OtherMilkProduct::OtherMilkProduct(const Product&)’
   mAllProductArray.push_back(static_cast<OtherMilkProduct>(product));
                                                                   ^
../src/Store.cpp:43:67: note: candidates are:
In file included from ../src/Store.cpp:11:0:
../src/OtherMilkProduct.h:21:2: note: OtherMilkProduct::OtherMilkProduct(const OtherMilkProduct&)
  OtherMilkProduct(const OtherMilkProduct &othermilkproduct);
  ^
../src/OtherMilkProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const OtherMilkProduct&’
../src/OtherMilkProduct.h:18:2: note: OtherMilkProduct::OtherMilkProduct(int, int, char, int, ExposureValue, const string&, int, int, int, const string*)
  OtherMilkProduct(int id, int shelf, char row, int weight,
  ^
../src/OtherMilkProduct.h:18:2: note:   candidate expects 10 arguments, 1 provided
../src/Store.cpp:45:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
src/subdir.mk:45: recipe for target 'src/Store.o' failed
  else if(typeid(*product) == typeid(CheeseProduct))
                 ^
../src/Store.cpp:47:64: error: no matching function for call to ‘CheeseProduct::CheeseProduct(const Product&)’
   mAllProductArray.push_back(static_cast<CheeseProduct>(product));
                                                                ^
../src/Store.cpp:47:64: note: candidates are:
In file included from ../src/Store.cpp:10:0:
../src/CheeseProduct.h:20:2: note: CheeseProduct::CheeseProduct(const CheeseProduct&)
  CheeseProduct(const CheeseProduct &cheeseproduct);
  ^
../src/CheeseProduct.h:20:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const CheeseProduct&’
../src/CheeseProduct.h:17:2: note: CheeseProduct::CheeseProduct(int, int, char, int, ExposureValue, const string&, int, int, int)
  CheeseProduct(int id, int shelf, char row, int weight,
  ^
../src/CheeseProduct.h:17:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:49:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(PackageProduct))
                 ^
../src/Store.cpp:51:65: error: no matching function for call to ‘PackageProduct::PackageProduct(const Product&)’
   mAllProductArray.push_back(static_cast<PackageProduct>(product));
                                                                 ^
../src/Store.cpp:51:65: note: candidates are:
In file included from ../src/Store.cpp:12:0:
../src/PackageProduct.h:16:2: note: PackageProduct::PackageProduct(int, int, char, int, ExposureValue, int, const string*, int)
  PackageProduct(int id, int shelf, char row, int weight, ExposureValue exposure,
  ^
../src/PackageProduct.h:16:2: note:   candidate expects 8 arguments, 1 provided
../src/PackageProduct.h:7:7: note: PackageProduct::PackageProduct(const PackageProduct&)
 class PackageProduct: public Product
       ^
../src/PackageProduct.h:7:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const PackageProduct&’
make: *** [src/Store.o] Error 1
01:06:22 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:64: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct’ (target is not pointer or reference)
   mAllProductArray.push_back(dynamic_cast<FruitProduct>(product));
                                                                ^
../src/Store.cpp:37:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(VegtableProduct))
                 ^
../src/Store.cpp:39:67: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class VegtableProduct’ (target is not pointer or reference)
   mAllProductArray.push_back(dynamic_cast<VegtableProduct>(product));
                                                                   ^
../src/Store.cpp:41:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(OtherMilkProduct))
                 ^
../src/Store.cpp:43:67: error: no matching function for call to ‘OtherMilkProduct::OtherMilkProduct(const Product&)’
   mAllProductArray.push_back(static_cast<OtherMilkProduct>(product));
                                                                   ^
../src/Store.cpp:43:67: note: candidates are:
In file included from ../src/Store.cpp:11:0:
../src/OtherMilkProduct.h:21:2: note: OtherMilkProduct::OtherMilkProduct(const OtherMilkProduct&)
  OtherMilkProduct(const OtherMilkProduct &othermilkproduct);
  ^
../src/OtherMilkProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const OtherMilkProduct&’
../src/OtherMilkProduct.h:18:2: note: OtherMilkProduct::OtherMilkProduct(int, int, char, int, ExposureValue, const string&, int, int, int, const string*)
  OtherMilkProduct(int id, int shelf, char row, int weight,
  ^
../src/OtherMilkProduct.h:18:2: note:   candidate expects 10 arguments, 1 provided
../src/Store.cpp:45:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(CheeseProduct))
                 ^
../src/Store.cpp:47:64: error: no matching function for call to ‘CheeseProduct::CheeseProduct(const Product&)’
   mAllProductArray.push_back(static_cast<CheeseProduct>(product));
                                                                ^
../src/Store.cpp:47:64: note: candidates are:
In file included from ../src/Store.cpp:10:0:
../src/CheeseProduct.h:20:2: note: CheeseProduct::CheeseProduct(const CheeseProduct&)
  CheeseProduct(const CheeseProduct &cheeseproduct);
  ^
../src/CheeseProduct.h:20:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const CheeseProduct&’
../src/CheeseProduct.h:17:2: note: CheeseProduct::CheeseProduct(int, int, char, int, ExposureValue, const string&, int, int, int)
  CheeseProduct(int id, int shelf, char row, int weight,
  ^
../src/CheeseProduct.h:17:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:49:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(PackageProduct))
                 ^
../src/Store.cpp:51:65: error: no matching function for call to ‘PackageProduct::PackageProduct(const Product&)’
   mAllProductArray.push_back(static_cast<PackageProduct>(product));
                                                                 ^
../src/Store.cpp:51:65: note: candidates are:
In file included from ../src/Store.cpp:12:0:
../src/PackageProduct.h:16:2: note: PackageProduct::PackageProduct(int, int, char, int, ExposureValue, int, const string*, int)
  PackageProduct(int id, int shelf, char row, int weight, ExposureValue exposure,
  ^
../src/PackageProduct.h:16:2: note:   candidate expects 8 arguments, 1 provided
../src/PackageProduct.h:7:7: note: PackageProduct::PackageProduct(const PackageProduct&)
 class PackageProduct: public Product
       ^
../src/PackageProduct.h:7:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const PackageProduct&’
make: *** [src/Store.o] Error 1
src/subdir.mk:45: recipe for target 'src/Store.o' failed
01:12:27 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:57: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct’ (target is not pointer or reference)
   FruitProduct temp = dynamic_cast<FruitProduct>(product);
                                                         ^
../src/Store.cpp:38:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(VegtableProduct))
                 ^
../src/Store.cpp:42:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(OtherMilkProduct))
                 ^
../src/Store.cpp:46:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(CheeseProduct))
                 ^
../src/Store.cpp:50:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(PackageProduct))
                 ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:13:00 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:56: error: no matching function for call to ‘FruitProduct::FruitProduct(const Product&)’
   FruitProduct temp = static_cast<FruitProduct>(product);
                                                        ^
../src/Store.cpp:35:56: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct &fruitproduct);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:38:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(VegtableProduct))
                 ^
../src/Store.cpp:42:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(OtherMilkProduct))
                 ^
../src/Store.cpp:46:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(CheeseProduct))
                 ^
../src/Store.cpp:50:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(PackageProduct))
                 ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:13:18 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:57: error: expected primary-expression before ‘)’ token
   FruitProduct temp = static_cast<FruitProduct>(product&);
                                                         ^
../src/Store.cpp:38:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(VegtableProduct))
                 ^
../src/Store.cpp:42:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(OtherMilkProduct))
                 ^
../src/Store.cpp:46:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(CheeseProduct))
                 ^
../src/Store.cpp:50:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(PackageProduct))
                 ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:13:43 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:58: error: expected primary-expression before ‘)’ token
   FruitProduct temp = dynamic_cast<FruitProduct>(product&);
                                                          ^
../src/Store.cpp:38:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(VegtableProduct))
                 ^
../src/Store.cpp:42:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(OtherMilkProduct))
                 ^
../src/Store.cpp:46:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(CheeseProduct))
                 ^
../src/Store.cpp:50:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(PackageProduct))
                 ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:14:16 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:64: error: expected primary-expression before ‘)’ token
   mAllProductArray.push_back(static_cast<FruitProduct>(product&));
                                                                ^
../src/Store.cpp:37:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(VegtableProduct))
                 ^
../src/Store.cpp:41:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(OtherMilkProduct))
                 ^
../src/Store.cpp:45:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(CheeseProduct))
                 ^
../src/Store.cpp:49:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(PackageProduct))
                 ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:14:25 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:64: error: no matching function for call to ‘FruitProduct::FruitProduct(const Product*)’
   mAllProductArray.push_back(static_cast<FruitProduct>(&product));
                                                                ^
../src/Store.cpp:35:64: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct &fruitproduct);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product*’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:37:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(VegtableProduct))
                 ^
../src/Store.cpp:41:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(OtherMilkProduct))
                 ^
../src/Store.cpp:45:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(CheeseProduct))
                 ^
../src/Store.cpp:49:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(PackageProduct))
                 ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:14:43 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:56: error: no match for ‘operator*’ (operand type is ‘const Product’)
   mAllProductArray.push_back(static_cast<FruitProduct>(*product));
                                                        ^
../src/Store.cpp:37:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(VegtableProduct))
                 ^
../src/Store.cpp:41:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(OtherMilkProduct))
                 ^
../src/Store.cpp:45:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(CheeseProduct))
                 ^
../src/Store.cpp:49:17: error: no match for ‘operator*’ (operand type is ‘const Product’)
  else if(typeid(*product) == typeid(PackageProduct))
                 ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:15:40 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:63: error: no matching function for call to ‘FruitProduct::FruitProduct(const Product&)’
   mAllProductArray.push_back(static_cast<FruitProduct>(product));
                                                               ^
../src/Store.cpp:35:63: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct &fruitproduct);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:16:20 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:63: error: no matching function for call to ‘FruitProduct::FruitProduct(const Product&)’
   mAllProductArray.push_back(static_cast<FruitProduct>(product));
                                                               ^
../src/Store.cpp:35:63: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct &fruitproduct);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:16:46 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:64: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct’ (target is not pointer or reference)
   mAllProductArray.push_back(dynamic_cast<FruitProduct>(product));
                                                                ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:19:15 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:65: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct&’ (conversion casts away constness)
   mAllProductArray.push_back(dynamic_cast<FruitProduct&>(product));
                                                                 ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:20:49 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:58: error: no match for ‘operator*’ (operand type is ‘const Product’)
   mAllProductArray.push_back(dynamic_cast<FruitProduct>(**product));
                                                          ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:20:52 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:57: error: no match for ‘operator*’ (operand type is ‘const Product’)
   mAllProductArray.push_back(dynamic_cast<FruitProduct>(*product));
                                                         ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:20:56 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:65: error: cannot dynamic_cast ‘& product’ (of type ‘const class Product*’) to type ‘class FruitProduct’ (target is not pointer or reference)
   mAllProductArray.push_back(dynamic_cast<FruitProduct>(&product));
                                                                 ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:22:54 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:28: error: no matching function for call to ‘FruitProduct::FruitProduct(const Product&)’
   FruitProduct temp(product);
                            ^
../src/Store.cpp:35:28: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct &fruitproduct);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:36:34:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:36:34:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:23:51 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:59: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct*’ (source is not a pointer)
   FruitProduct* temp = dynamic_cast<FruitProduct*>(product);
                                                           ^
../src/Store.cpp:36:34: error: no matching function for call to ‘std::vector<Product>::push_back(FruitProduct*&)’
   mAllProductArray.push_back(temp);
                                  ^
../src/Store.cpp:36:34: note: candidate is:
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]
       push_back(const value_type& __x)
       ^
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note:   no known conversion for argument 1 from ‘FruitProduct*’ to ‘const value_type& {aka const Product&}’
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:24:08 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp:31:45: error: cannot declare parameter ‘product’ to be of abstract type ‘Product’
 void Store::addProductToStore(const Product product) {
                                             ^
../src/Store.cpp:31:6: error: prototype for ‘void Store::addProductToStore(Product)’ does not match any in class ‘Store’
 void Store::addProductToStore(const Product product) {
      ^
In file included from ../src/Store.cpp:7:0:
../src/Store.h:23:7: error: candidate is: void Store::addProductToStore(const Product&)
  void addProductToStore(const Product& product);
src/subdir.mk:45: recipe for target 'src/Store.o' failed
       ^
make: *** [src/Store.o] Error 1
01:24:41 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
In file included from ../src/Store.cpp:7:0:
../src/Store.h:23:39: error: cannot declare parameter ‘product’ to be of abstract type ‘Product’
  void addProductToStore(const Product product);
                                       ^
../src/Store.cpp: In constructor ‘Store::Store(const string&, int, int, const Product*)’:
../src/Store.cpp:27:39: error: cannot allocate an object of abstract type ‘Product’
   addProductToStore(allProductArray[i]);
                                       ^
../src/Store.cpp: At global scope:
../src/Store.cpp:31:45: error: cannot declare parameter ‘product’ to be of abstract type ‘Product’
 void Store::addProductToStore(const Product product) {
                                             ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(Product)’:
../src/Store.cpp:35:59: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct*’ (source is not a pointer)
   FruitProduct* temp = dynamic_cast<FruitProduct*>(product);
                                                           ^
../src/Store.cpp:36:34: error: no matching function for call to ‘std::vector<Product>::push_back(FruitProduct*&)’
   mAllProductArray.push_back(temp);
                                  ^
../src/Store.cpp:36:34: note: candidate is:
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]
       push_back(const value_type& __x)
       ^
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note:   no known conversion for argument 1 from ‘FruitProduct*’ to ‘const value_type& {aka const Product&}’
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:25:02 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In constructor ‘Store::Store(const string&, int, int, const Product*)’:
../src/Store.cpp:27:39: error: no matching function for call to ‘Store::addProductToStore(const Product&)’
   addProductToStore(allProductArray[i]);
                                       ^
../src/Store.cpp:27:39: note: candidate is:
In file included from ../src/Store.cpp:7:0:
../src/Store.h:23:7: note: void Store::addProductToStore(const Product*)
  void addProductToStore(const Product* product);
       ^
../src/Store.h:23:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const Product*’
../src/Store.cpp: At global scope:
../src/Store.cpp:31:45: error: cannot declare parameter ‘product’ to be of abstract type ‘Product’
 void Store::addProductToStore(const Product product) {
                                             ^
../src/Store.cpp:31:6: error: prototype for ‘void Store::addProductToStore(Product)’ does not match any in class ‘Store’
 void Store::addProductToStore(const Product product) {
      ^
In file included from ../src/Store.cpp:7:0:
../src/Store.h:23:7: error: candidate is: void Store::addProductToStore(const Product*)
  void addProductToStore(const Product* product);
       ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:25:19 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In constructor ‘Store::Store(const string&, int, int, const Product*)’:
../src/Store.cpp:27:39: error: no matching function for call to ‘Store::addProductToStore(const Product&)’
   addProductToStore(allProductArray[i]);
                                       ^
../src/Store.cpp:27:39: note: candidate is:
In file included from ../src/Store.cpp:7:0:
../src/Store.h:23:7: note: void Store::addProductToStore(const Product*)
  void addProductToStore(const Product* product);
       ^
../src/Store.h:23:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const Product*’
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product*)’:
../src/Store.cpp:35:59: error: cannot dynamic_cast ‘product’ (of type ‘const class Product*’) to type ‘class FruitProduct*’ (conversion casts away constness)
   FruitProduct* temp = dynamic_cast<FruitProduct*>(product);
                                                           ^
../src/Store.cpp:36:34: error: no matching function for call to ‘std::vector<Product>::push_back(FruitProduct*&)’
   mAllProductArray.push_back(temp);
                                  ^
../src/Store.cpp:36:34: note: candidate is:
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]
       push_back(const value_type& __x)
       ^
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note:   no known conversion for argument 1 from ‘FruitProduct*’ to ‘const value_type& {aka const Product&}’
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:25:35 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In constructor ‘Store::Store(const string&, int, int, const Product*)’:
../src/Store.cpp:27:39: error: no matching function for call to ‘Store::addProductToStore(const Product&)’
   addProductToStore(allProductArray[i]);
                                       ^
../src/Store.cpp:27:39: note: candidate is:
In file included from ../src/Store.cpp:7:0:
../src/Store.h:23:7: note: void Store::addProductToStore(const Product*)
  void addProductToStore(const Product* product);
       ^
../src/Store.h:23:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const Product*’
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product*)’:
../src/Store.cpp:35:60: error: cannot dynamic_cast ‘& product’ (of type ‘const class Product**’) to type ‘class FruitProduct*’ (source is not a pointer to class)
   FruitProduct* temp = dynamic_cast<FruitProduct*>(&product);
                                                            ^
../src/Store.cpp:36:34: error: no matching function for call to ‘std::vector<Product>::push_back(FruitProduct*&)’
   mAllProductArray.push_back(temp);
                                  ^
../src/Store.cpp:36:34: note: candidate is:
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]
       push_back(const value_type& __x)
       ^
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note:   no known conversion for argument 1 from ‘FruitProduct*’ to ‘const value_type& {aka const Product&}’
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:25:41 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In constructor ‘Store::Store(const string&, int, int, const Product*)’:
../src/Store.cpp:27:39: error: no matching function for call to ‘Store::addProductToStore(const Product&)’
   addProductToStore(allProductArray[i]);
                                       ^
../src/Store.cpp:27:39: note: candidate is:
In file included from ../src/Store.cpp:7:0:
../src/Store.h:23:7: note: void Store::addProductToStore(const Product*)
  void addProductToStore(const Product* product);
       ^
../src/Store.h:23:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const Product*’
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product*)’:
../src/Store.cpp:35:60: error: cannot dynamic_cast ‘* product’ (of type ‘const class Product’) to type ‘class FruitProduct*’ (source is not a pointer)
   FruitProduct* temp = dynamic_cast<FruitProduct*>(*product);
                                                            ^
../src/Store.cpp:36:34: error: no matching function for call to ‘std::vector<Product>::push_back(FruitProduct*&)’
   mAllProductArray.push_back(temp);
                                  ^
../src/Store.cpp:36:34: note: candidate is:
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]
       push_back(const value_type& __x)
       ^
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note:   no known conversion for argument 1 from ‘FruitProduct*’ to ‘const value_type& {aka const Product&}’
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:25:57 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:59: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct*’ (source is not a pointer)
   FruitProduct* temp = dynamic_cast<FruitProduct*>(product);
                                                           ^
../src/Store.cpp:36:34: error: no matching function for call to ‘std::vector<Product>::push_back(FruitProduct*&)’
   mAllProductArray.push_back(temp);
                                  ^
../src/Store.cpp:36:34: note: candidate is:
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]
       push_back(const value_type& __x)
       ^
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note:   no known conversion for argument 1 from ‘FruitProduct*’ to ‘const value_type& {aka const Product&}’
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:26:18 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:57: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct’ (target is not pointer or reference)
   FruitProduct temp = dynamic_cast<FruitProduct>(product);
                                                         ^
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:36:34:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:36:34:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:26:30 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:37: error: expected type-specifier before ‘&’ token
   FruitProduct& temp = dynamic_cast<&FruitProduct>(product);
                                     ^
../src/Store.cpp:35:37: error: expected ‘>’ before ‘&’ token
../src/Store.cpp:35:37: error: expected ‘(’ before ‘&’ token
../src/Store.cpp:35:50: error: expected primary-expression before ‘>’ token
   FruitProduct& temp = dynamic_cast<&FruitProduct>(product);
                                                  ^
../src/Store.cpp:35:60: error: expected ‘)’ before ‘;’ token
   FruitProduct& temp = dynamic_cast<&FruitProduct>(product);
                                                            ^
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:36:34:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:36:34:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:26:38 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:59: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct&’ (conversion casts away constness)
   FruitProduct& temp = dynamic_cast<FruitProduct&>(product);
                                                           ^
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:36:34:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:36:34:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:31:38 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:52: error: no match for ‘operator*’ (operand type is ‘const Product’)
   FruitProduct& temp = dynamic_cast<FruitProduct&>(*product);
                                                    ^
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:36:34:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:36:34:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:31:54 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:59: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct*’ (source is not a pointer)
   FruitProduct* temp = dynamic_cast<FruitProduct*>(product);
                                                           ^
../src/Store.cpp:36:34: error: no matching function for call to ‘std::vector<Product>::push_back(FruitProduct*&)’
   mAllProductArray.push_back(temp);
                                  ^
../src/Store.cpp:36:34: note: candidate is:
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]
       push_back(const value_type& __x)
       ^
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note:   no known conversion for argument 1 from ‘FruitProduct*’ to ‘const value_type& {aka const Product&}’
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:34:53 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:56: error: no matching function for call to ‘FruitProduct::FruitProduct(const Product&)’
   FruitProduct temp = static_cast<FruitProduct>(product);
                                                        ^
../src/Store.cpp:35:56: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct &fruitproduct);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:36:34:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:36:34:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:35:22 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/FruitProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/FruitProduct.d" -MT"src/FruitProduct.d" -o "src/FruitProduct.o" "../src/FruitProduct.cpp"
Finished building: ../src/FruitProduct.cpp
 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:56: error: no matching function for call to ‘FruitProduct::FruitProduct(const Product&)’
   FruitProduct temp = static_cast<FruitProduct>(product);
                                                        ^
../src/Store.cpp:35:56: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct& fruitproduct);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:36:34:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
src/subdir.mk:45: recipe for target 'src/Store.o' failed
../src/Store.cpp:36:34:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
make: *** [src/Store.o] Error 1
01:35:35 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/FruitProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/FruitProduct.d" -MT"src/FruitProduct.d" -o "src/FruitProduct.o" "../src/FruitProduct.cpp"
Finished building: ../src/FruitProduct.cpp
 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:56: error: no matching function for call to ‘FruitProduct::FruitProduct(const Product&)’
   FruitProduct temp = static_cast<FruitProduct>(product);
                                                        ^
../src/Store.cpp:35:56: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct&);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:36:34:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:36:34:   required from here
src/subdir.mk:45: recipe for target 'src/Store.o' failed
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
make: *** [src/Store.o] Error 1
01:35:54 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:56: error: no matching function for call to ‘FruitProduct::FruitProduct(const Product&)’
   FruitProduct temp = static_cast<FruitProduct>(product);
                                                        ^
../src/Store.cpp:35:56: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct&);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:36:34:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:36:34:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:38:49 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:62: error: no matching function for call to ‘FruitProduct::FruitProduct(const Product&)’
   const FruitProduct temp = static_cast<FruitProduct>(product);
                                                              ^
../src/Store.cpp:35:62: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct&);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:36:34:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
src/subdir.mk:45: recipe for target 'src/Store.o' failed
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:36:34:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
make: *** [src/Store.o] Error 1
01:39:15 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:63: error: no matching function for call to ‘FruitProduct::FruitProduct(const Product&)’
   mAllProductArray.push_back(static_cast<FruitProduct>(product));
                                                               ^
../src/Store.cpp:35:63: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct&);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:39:36 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘class __gnu_cxx::new_allocator<const Product>’:
/usr/include/c++/4.9/bits/allocator.h:92:11:   required from ‘class std::allocator<const Product>’
/usr/include/c++/4.9/ext/alloc_traits.h:172:53:   required from ‘struct __gnu_cxx::__alloc_traits<std::allocator<const Product> >’
/usr/include/c++/4.9/bits/stl_vector.h:75:28:   required from ‘struct std::_Vector_base<const Product, std::allocator<const Product> >’
/usr/include/c++/4.9/bits/stl_vector.h:214:11:   required from ‘class std::vector<const Product>’
../src/Store.h:18:24:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:93:7: error: ‘const _Tp* __gnu_cxx::new_allocator<_Tp>::address(__gnu_cxx::new_allocator<_Tp>::const_reference) const [with _Tp = const Product; __gnu_cxx::new_allocator<_Tp>::const_pointer = const Product*; __gnu_cxx::new_allocator<_Tp>::const_reference = const Product&]’ cannot be overloaded
       address(const_reference __x) const _GLIBCXX_NOEXCEPT
       ^
/usr/include/c++/4.9/ext/new_allocator.h:89:7: error: with ‘_Tp* __gnu_cxx::new_allocator<_Tp>::address(__gnu_cxx::new_allocator<_Tp>::reference) const [with _Tp = const Product; __gnu_cxx::new_allocator<_Tp>::pointer = const Product*; __gnu_cxx::new_allocator<_Tp>::reference = const Product&]’
       address(reference __x) const _GLIBCXX_NOEXCEPT
       ^
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<const Product>’:
../src/Store.h:18:24:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:63: error: no matching function for call to ‘FruitProduct::FruitProduct(const Product&)’
   mAllProductArray.push_back(static_cast<FruitProduct>(product));
                                                               ^
../src/Store.cpp:35:63: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct&);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
src/subdir.mk:45: recipe for target 'src/Store.o' failed
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = const Product; __gnu_cxx::new_allocator<_Tp>::pointer = const Product*; __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]’:
/usr/include/c++/4.9/ext/alloc_traits.h:185:7:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::deallocate(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, __gnu_cxx::__alloc_traits<_Alloc>::size_type) [with _Alloc = std::allocator<const Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = const Product*; __gnu_cxx::__alloc_traits<_Alloc>::size_type = long unsigned int]’
/usr/include/c++/4.9/bits/stl_vector.h:178:37:   required from ‘void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = const Product; _Alloc = std::allocator<const Product>; std::_Vector_base<_Tp, _Alloc>::pointer = const Product*; std::size_t = long unsigned int]’
/usr/include/c++/4.9/bits/stl_vector.h:161:33:   required from ‘std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = const Product; _Alloc = std::allocator<const Product>]’
/usr/include/c++/4.9/bits/stl_vector.h:425:33:   required from ‘std::vector<_Tp, _Alloc>::~vector() [with _Tp = const Product; _Alloc = std::allocator<const Product>]’
../src/Store.cpp:17:15:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:110:30: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
       { ::operator delete(__p); }
                              ^
In file included from /usr/include/c++/4.9/ext/new_allocator.h:33:0,
                 from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/new:132:6: note: initializing argument 1 of ‘void operator delete(void*)’
 void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
      ^
make: *** [src/Store.o] Error 1
01:39:46 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘class __gnu_cxx::new_allocator<const Product>’:
/usr/include/c++/4.9/bits/allocator.h:92:11:   required from ‘class std::allocator<const Product>’
/usr/include/c++/4.9/ext/alloc_traits.h:172:53:   required from ‘struct __gnu_cxx::__alloc_traits<std::allocator<const Product> >’
/usr/include/c++/4.9/bits/stl_vector.h:75:28:   required from ‘struct std::_Vector_base<const Product, std::allocator<const Product> >’
/usr/include/c++/4.9/bits/stl_vector.h:214:11:   required from ‘class std::vector<const Product>’
../src/Store.h:18:24:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:93:7: error: ‘const _Tp* __gnu_cxx::new_allocator<_Tp>::address(__gnu_cxx::new_allocator<_Tp>::const_reference) const [with _Tp = const Product; __gnu_cxx::new_allocator<_Tp>::const_pointer = const Product*; __gnu_cxx::new_allocator<_Tp>::const_reference = const Product&]’ cannot be overloaded
       address(const_reference __x) const _GLIBCXX_NOEXCEPT
       ^
/usr/include/c++/4.9/ext/new_allocator.h:89:7: error: with ‘_Tp* __gnu_cxx::new_allocator<_Tp>::address(__gnu_cxx::new_allocator<_Tp>::reference) const [with _Tp = const Product; __gnu_cxx::new_allocator<_Tp>::pointer = const Product*; __gnu_cxx::new_allocator<_Tp>::reference = const Product&]’
       address(reference __x) const _GLIBCXX_NOEXCEPT
       ^
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<const Product>’:
../src/Store.h:18:24:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:63: error: no matching function for call to ‘FruitProduct::FruitProduct(const Product&)’
   mAllProductArray.push_back(static_cast<FruitProduct>(product));
                                                               ^
../src/Store.cpp:35:63: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct&);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
src/subdir.mk:45: recipe for target 'src/Store.o' failed
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = const Product; __gnu_cxx::new_allocator<_Tp>::pointer = const Product*; __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]’:
/usr/include/c++/4.9/ext/alloc_traits.h:185:7:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::deallocate(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, __gnu_cxx::__alloc_traits<_Alloc>::size_type) [with _Alloc = std::allocator<const Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = const Product*; __gnu_cxx::__alloc_traits<_Alloc>::size_type = long unsigned int]’
/usr/include/c++/4.9/bits/stl_vector.h:178:37:   required from ‘void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = const Product; _Alloc = std::allocator<const Product>; std::_Vector_base<_Tp, _Alloc>::pointer = const Product*; std::size_t = long unsigned int]’
/usr/include/c++/4.9/bits/stl_vector.h:161:33:   required from ‘std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = const Product; _Alloc = std::allocator<const Product>]’
/usr/include/c++/4.9/bits/stl_vector.h:425:33:   required from ‘std::vector<_Tp, _Alloc>::~vector() [with _Tp = const Product; _Alloc = std::allocator<const Product>]’
../src/Store.cpp:17:15:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:110:30: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
       { ::operator delete(__p); }
                              ^
In file included from /usr/include/c++/4.9/ext/new_allocator.h:33:0,
                 from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/new:132:6: note: initializing argument 1 of ‘void operator delete(void*)’
 void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
      ^
make: *** [src/Store.o] Error 1
01:39:59 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘class __gnu_cxx::new_allocator<const Product>’:
/usr/include/c++/4.9/bits/allocator.h:92:11:   required from ‘class std::allocator<const Product>’
/usr/include/c++/4.9/ext/alloc_traits.h:172:53:   required from ‘struct __gnu_cxx::__alloc_traits<std::allocator<const Product> >’
/usr/include/c++/4.9/bits/stl_vector.h:75:28:   required from ‘struct std::_Vector_base<const Product, std::allocator<const Product> >’
/usr/include/c++/4.9/bits/stl_vector.h:214:11:   required from ‘class std::vector<const Product>’
../src/Store.h:18:24:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:93:7: error: ‘const _Tp* __gnu_cxx::new_allocator<_Tp>::address(__gnu_cxx::new_allocator<_Tp>::const_reference) const [with _Tp = const Product; __gnu_cxx::new_allocator<_Tp>::const_pointer = const Product*; __gnu_cxx::new_allocator<_Tp>::const_reference = const Product&]’ cannot be overloaded
       address(const_reference __x) const _GLIBCXX_NOEXCEPT
       ^
/usr/include/c++/4.9/ext/new_allocator.h:89:7: error: with ‘_Tp* __gnu_cxx::new_allocator<_Tp>::address(__gnu_cxx::new_allocator<_Tp>::reference) const [with _Tp = const Product; __gnu_cxx::new_allocator<_Tp>::pointer = const Product*; __gnu_cxx::new_allocator<_Tp>::reference = const Product&]’
       address(reference __x) const _GLIBCXX_NOEXCEPT
       ^
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<const Product>’:
../src/Store.h:18:24:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp:31:6: error: prototype for ‘void Store::addProductToStore(Product&)’ does not match any in class ‘Store’
 void Store::addProductToStore(Product& product) {
      ^
In file included from ../src/Store.cpp:7:0:
../src/Store.h:23:7: error: candidate is: void Store::addProductToStore(const Product&)
  void addProductToStore(const Product& product);
       ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = const Product; __gnu_cxx::new_allocator<_Tp>::pointer = const Product*; __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]’:
/usr/include/c++/4.9/ext/alloc_traits.h:185:7:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::deallocate(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, __gnu_cxx::__alloc_traits<_Alloc>::size_type) [with _Alloc = std::allocator<const Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = const Product*; __gnu_cxx::__alloc_traits<_Alloc>::size_type = long unsigned int]’
/usr/include/c++/4.9/bits/stl_vector.h:178:37:   required from ‘void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = const Product; _Alloc = std::allocator<const Product>; std::_Vector_base<_Tp, _Alloc>::pointer = const Product*; std::size_t = long unsigned int]’
/usr/include/c++/4.9/bits/stl_vector.h:161:33:   required from ‘std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = const Product; _Alloc = std::allocator<const Product>]’
/usr/include/c++/4.9/bits/stl_vector.h:425:33:   required from ‘std::vector<_Tp, _Alloc>::~vector() [with _Tp = const Product; _Alloc = std::allocator<const Product>]’
../src/Store.cpp:17:15:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:110:30: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
       { ::operator delete(__p); }
                              ^
In file included from /usr/include/c++/4.9/ext/new_allocator.h:33:0,
                 from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/new:132:6: note: initializing argument 1 of ‘void operator delete(void*)’
 void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
      ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:40:12 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘class __gnu_cxx::new_allocator<const Product>’:
/usr/include/c++/4.9/bits/allocator.h:92:11:   required from ‘class std::allocator<const Product>’
/usr/include/c++/4.9/ext/alloc_traits.h:172:53:   required from ‘struct __gnu_cxx::__alloc_traits<std::allocator<const Product> >’
/usr/include/c++/4.9/bits/stl_vector.h:75:28:   required from ‘struct std::_Vector_base<const Product, std::allocator<const Product> >’
/usr/include/c++/4.9/bits/stl_vector.h:214:11:   required from ‘class std::vector<const Product>’
../src/Store.h:18:24:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:93:7: error: ‘const _Tp* __gnu_cxx::new_allocator<_Tp>::address(__gnu_cxx::new_allocator<_Tp>::const_reference) const [with _Tp = const Product; __gnu_cxx::new_allocator<_Tp>::const_pointer = const Product*; __gnu_cxx::new_allocator<_Tp>::const_reference = const Product&]’ cannot be overloaded
       address(const_reference __x) const _GLIBCXX_NOEXCEPT
       ^
/usr/include/c++/4.9/ext/new_allocator.h:89:7: error: with ‘_Tp* __gnu_cxx::new_allocator<_Tp>::address(__gnu_cxx::new_allocator<_Tp>::reference) const [with _Tp = const Product; __gnu_cxx::new_allocator<_Tp>::pointer = const Product*; __gnu_cxx::new_allocator<_Tp>::reference = const Product&]’
       address(reference __x) const _GLIBCXX_NOEXCEPT
       ^
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<const Product>’:
../src/Store.h:18:24:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In constructor ‘Store::Store(const string&, int, int, const Product*)’:
../src/Store.cpp:27:39: error: no matching function for call to ‘Store::addProductToStore(const Product&)’
   addProductToStore(allProductArray[i]);
                                       ^
../src/Store.cpp:27:39: note: candidate is:
In file included from ../src/Store.cpp:7:0:
../src/Store.h:23:7: note: void Store::addProductToStore(Product&)
  void addProductToStore(Product& product);
       ^
../src/Store.h:23:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘Product&’
../src/Store.cpp: In member function ‘void Store::addProductToStore(Product&)’:
../src/Store.cpp:35:63: error: no matching function for call to ‘FruitProduct::FruitProduct(Product&)’
   mAllProductArray.push_back(static_cast<FruitProduct>(product));
                                                               ^
../src/Store.cpp:35:63: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct&);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = const Product; __gnu_cxx::new_allocator<_Tp>::pointer = const Product*; __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]’:
/usr/include/c++/4.9/ext/alloc_traits.h:185:7:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::deallocate(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, __gnu_cxx::__alloc_traits<_Alloc>::size_type) [with _Alloc = std::allocator<const Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = const Product*; __gnu_cxx::__alloc_traits<_Alloc>::size_type = long unsigned int]’
/usr/include/c++/4.9/bits/stl_vector.h:178:37:   required from ‘void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = const Product; _Alloc = std::allocator<const Product>; std::_Vector_base<_Tp, _Alloc>::pointer = const Product*; std::size_t = long unsigned int]’
/usr/include/c++/4.9/bits/stl_vector.h:161:33:   required from ‘std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = const Product; _Alloc = std::allocator<const Product>]’
/usr/include/c++/4.9/bits/stl_vector.h:425:33:   required from ‘std::vector<_Tp, _Alloc>::~vector() [with _Tp = const Product; _Alloc = std::allocator<const Product>]’
../src/Store.cpp:17:15:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:110:30: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]
       { ::operator delete(__p); }
                              ^
In file included from /usr/include/c++/4.9/ext/new_allocator.h:33:0,
                 from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/new:132:6: note: initializing argument 1 of ‘void operator delete(void*)’
 void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
      ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:40:36 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In constructor ‘Store::Store(const string&, int, int, const Product*)’:
../src/Store.cpp:27:39: error: no matching function for call to ‘Store::addProductToStore(const Product&)’
   addProductToStore(allProductArray[i]);
                                       ^
../src/Store.cpp:27:39: note: candidate is:
In file included from ../src/Store.cpp:7:0:
../src/Store.h:23:7: note: void Store::addProductToStore(Product&)
  void addProductToStore(Product& product);
       ^
../src/Store.h:23:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘Product&’
../src/Store.cpp: In member function ‘void Store::addProductToStore(Product&)’:
../src/Store.cpp:35:63: error: no matching function for call to ‘FruitProduct::FruitProduct(Product&)’
   mAllProductArray.push_back(static_cast<FruitProduct>(product));
                                                               ^
../src/Store.cpp:35:63: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct&);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:41:02 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp:20:1: error: prototype for ‘Store::Store(const string&, int, int, Product*)’ does not match any in class ‘Store’
 Store::Store(const string& storeName, int factor, int productsAmount, Product* allProductArray):
 ^
In file included from ../src/Store.cpp:7:0:
../src/Store.h:13:7: error: candidates are: Store::Store(const Store&)
 class Store
       ^
../src/Store.h:21:2: error:                 Store::Store(const string&, int, int, const Product*)
  Store(const string& storeName, int factor, int productsAmount, const Product* allProductArray);
  ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(Product&)’:
../src/Store.cpp:35:63: error: no matching function for call to ‘FruitProduct::FruitProduct(Product&)’
   mAllProductArray.push_back(static_cast<FruitProduct>(product));
                                                               ^
../src/Store.cpp:35:63: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct&);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:41:13 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(Product&)’:
../src/Store.cpp:35:63: error: no matching function for call to ‘FruitProduct::FruitProduct(Product&)’
   mAllProductArray.push_back(static_cast<FruitProduct>(product));
                                                               ^
../src/Store.cpp:35:63: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct&);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:45:11 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:63: error: no matching function for call to ‘FruitProduct::FruitProduct(const Product&)’
   mAllProductArray.push_back(static_cast<FruitProduct>(product));
                                                               ^
../src/Store.cpp:35:63: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct&);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
make: *** [src/Store.o] Error 1
src/subdir.mk:45: recipe for target 'src/Store.o' failed
01:45:39 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:64: error: expected ‘)’ before ‘const’
   mAllProductArray.push_back(static_cast<FruitProduct>(product const &));
                                                                ^
../src/Store.cpp:35:64: error: no matching function for call to ‘FruitProduct::FruitProduct(const Product&)’
../src/Store.cpp:35:64: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct&);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:45:49 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:63: error: no matching function for call to ‘FruitProduct::FruitProduct(const Product&)’
   mAllProductArray.push_back(static_cast<FruitProduct>(product));
                                                               ^
../src/Store.cpp:35:63: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct&);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:45:59 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:56: error: expected primary-expression before ‘const’
   mAllProductArray.push_back(static_cast<FruitProduct>(const product&));
                                                        ^
../src/Store.cpp:35:56: error: expected ‘)’ before ‘const’
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:46:13 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:63: error: no matching function for call to ‘FruitProduct::FruitProduct(const Product&)’
   mAllProductArray.push_back(static_cast<FruitProduct>(product));
                                                               ^
../src/Store.cpp:35:63: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct&);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:46:17 **** Clean-only build of configuration Debug for project Task4New ****
make clean 
rm -rf  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o  ./src/CheeseProduct.d ./src/FarmProduct.d ./src/FruitProduct.d ./src/MilkProduct.d ./src/OtherMilkProduct.d ./src/PackageProduct.d ./src/Product.d ./src/Store.d ./src/Task4New.d ./src/VegtableProduct.d  Task4New
 
01:46:21 **** Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/CheeseProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/CheeseProduct.d" -MT"src/CheeseProduct.d" -o "src/CheeseProduct.o" "../src/CheeseProduct.cpp"
Finished building: ../src/CheeseProduct.cpp
 
Building file: ../src/FarmProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/FarmProduct.d" -MT"src/FarmProduct.d" -o "src/FarmProduct.o" "../src/FarmProduct.cpp"
Finished building: ../src/FarmProduct.cpp
 
Building file: ../src/FruitProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/FruitProduct.d" -MT"src/FruitProduct.d" -o "src/FruitProduct.o" "../src/FruitProduct.cpp"
Finished building: ../src/FruitProduct.cpp
 
Building file: ../src/MilkProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/MilkProduct.d" -MT"src/MilkProduct.d" -o "src/MilkProduct.o" "../src/MilkProduct.cpp"
Finished building: ../src/MilkProduct.cpp
 
Building file: ../src/OtherMilkProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/OtherMilkProduct.d" -MT"src/OtherMilkProduct.d" -o "src/OtherMilkProduct.o" "../src/OtherMilkProduct.cpp"
Finished building: ../src/OtherMilkProduct.cpp
 
Building file: ../src/PackageProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/PackageProduct.d" -MT"src/PackageProduct.d" -o "src/PackageProduct.o" "../src/PackageProduct.cpp"
Finished building: ../src/PackageProduct.cpp
 
Building file: ../src/Product.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Product.d" -MT"src/Product.d" -o "src/Product.o" "../src/Product.cpp"
Finished building: ../src/Product.cpp
 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:63: error: no matching function for call to ‘FruitProduct::FruitProduct(const Product&)’
   mAllProductArray.push_back(static_cast<FruitProduct>(product));
                                                               ^
../src/Store.cpp:35:63: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct&);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘const Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:47:26 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:64: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct’ (target is not pointer or reference)
   mAllProductArray.push_back(dynamic_cast<FruitProduct>(product));
                                                                ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:50:12 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:56: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct&’ (conversion casts away constness)
   FruitProduct& f = dynamic_cast<FruitProduct&>(product);
                                                        ^
../src/Store.cpp:36:64: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct’ (target is not pointer or reference)
   mAllProductArray.push_back(dynamic_cast<FruitProduct>(product));
                                                                ^
../src/Store.cpp:35:17: warning: unused variable ‘f’ [-Wunused-variable]
   FruitProduct& f = dynamic_cast<FruitProduct&>(product);
                 ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:50:40 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:62: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct&’ (conversion casts away constness)
   const FruitProduct& f = dynamic_cast<FruitProduct&>(product);
                                                              ^
../src/Store.cpp:36:64: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct’ (target is not pointer or reference)
   mAllProductArray.push_back(dynamic_cast<FruitProduct>(product));
                                                                ^
../src/Store.cpp:35:23: warning: unused variable ‘f’ [-Wunused-variable]
   const FruitProduct& f = dynamic_cast<FruitProduct&>(product);
                       ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:52:11 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:3: error: invalid abstract return type ‘Product’
   Product p();
   ^
../src/Store.cpp:36:62: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct&’ (conversion casts away constness)
   const FruitProduct& f = dynamic_cast<FruitProduct&>(product);
                                                              ^
../src/Store.cpp:37:64: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct’ (target is not pointer or reference)
   mAllProductArray.push_back(dynamic_cast<FruitProduct>(product));
                                                                ^
../src/Store.cpp:36:23: warning: unused variable ‘f’ [-Wunused-variable]
   const FruitProduct& f = dynamic_cast<FruitProduct&>(product);
                       ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:52:20 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:11: error: cannot declare variable ‘p’ to be of abstract type ‘Product’
   Product p(product);
           ^
../src/Store.cpp:36:62: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct&’ (conversion casts away constness)
   const FruitProduct& f = dynamic_cast<FruitProduct&>(product);
                                                              ^
../src/Store.cpp:37:64: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct’ (target is not pointer or reference)
   mAllProductArray.push_back(dynamic_cast<FruitProduct>(product));
                                                                ^
../src/Store.cpp:36:23: warning: unused variable ‘f’ [-Wunused-variable]
   const FruitProduct& f = dynamic_cast<FruitProduct&>(product);
                       ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:53:03 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:15: error: cannot allocate an object of abstract type ‘Product’
   Product p = product;
               ^
../src/Store.cpp:35:11: error: cannot declare variable ‘p’ to be of abstract type ‘Product’
   Product p = product;
           ^
../src/Store.cpp:36:62: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct&’ (conversion casts away constness)
   const FruitProduct& f = dynamic_cast<FruitProduct&>(product);
                                                              ^
../src/Store.cpp:37:64: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct’ (target is not pointer or reference)
   mAllProductArray.push_back(dynamic_cast<FruitProduct>(product));
                                                                ^
../src/Store.cpp:36:23: warning: unused variable ‘f’ [-Wunused-variable]
   const FruitProduct& f = dynamic_cast<FruitProduct&>(product);
                       ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:53:12 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:16: error: invalid initialization of reference of type ‘Product&’ from expression of type ‘const Product’
   Product& p = product;
                ^
../src/Store.cpp:36:62: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct&’ (conversion casts away constness)
   const FruitProduct& f = dynamic_cast<FruitProduct&>(product);
                                                              ^
../src/Store.cpp:37:64: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct’ (target is not pointer or reference)
   mAllProductArray.push_back(dynamic_cast<FruitProduct>(product));
                                                                ^
../src/Store.cpp:35:12: warning: unused variable ‘p’ [-Wunused-variable]
   Product& p = product;
            ^
../src/Store.cpp:36:23: warning: unused variable ‘f’ [-Wunused-variable]
   const FruitProduct& f = dynamic_cast<FruitProduct&>(product);
                       ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:53:23 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:21: error: cannot allocate an object of abstract type ‘Product’
   const Product p = product;
                     ^
../src/Store.cpp:35:17: error: cannot declare variable ‘p’ to be of abstract type ‘Product’
   const Product p = product;
                 ^
../src/Store.cpp:36:62: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct&’ (conversion casts away constness)
   const FruitProduct& f = dynamic_cast<FruitProduct&>(product);
                                                              ^
../src/Store.cpp:37:64: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct’ (target is not pointer or reference)
   mAllProductArray.push_back(dynamic_cast<FruitProduct>(product));
                                                                ^
../src/Store.cpp:36:23: warning: unused variable ‘f’ [-Wunused-variable]
   const FruitProduct& f = dynamic_cast<FruitProduct&>(product);
                       ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:56:33 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:76: error: invalid use of const_cast with type ‘Product’, which is not a pointer, reference, nor a pointer-to-data-member type
   FruitProduct& f = dynamic_cast<FruitProduct&>(const_cast<Product>(product));
                                                                            ^
../src/Store.cpp:36:64: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct’ (target is not pointer or reference)
   mAllProductArray.push_back(dynamic_cast<FruitProduct>(product));
                                                                ^
../src/Store.cpp:35:17: warning: unused variable ‘f’ [-Wunused-variable]
   FruitProduct& f = dynamic_cast<FruitProduct&>(const_cast<Product>(product));
                 ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:56:47 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:36:64: error: cannot dynamic_cast ‘product’ (of type ‘const class Product’) to type ‘class FruitProduct’ (target is not pointer or reference)
   mAllProductArray.push_back(dynamic_cast<FruitProduct>(product));
                                                                ^
../src/Store.cpp:35:17: warning: unused variable ‘f’ [-Wunused-variable]
   FruitProduct& f = dynamic_cast<FruitProduct&>(const_cast<Product&>(product));
                 ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:57:08 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:88: error: expected ‘)’ before ‘;’ token
   mAllProductArray.push_back(dynamic_cast<FruitProduct&>(const_cast<Product&>(product));
                                                                                        ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:57:17 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:86: error: cannot dynamic_cast ‘(Product&)(& product)’ (of type ‘class Product’) to type ‘class FruitProduct’ (target is not pointer or reference)
   mAllProductArray.push_back(dynamic_cast<FruitProduct>(const_cast<Product&>(product));
                                                                                      ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:57:21 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:88: error: expected ‘)’ before ‘;’ token
   mAllProductArray.push_back(dynamic_cast<FruitProduct&>(const_cast<Product&>(product));
                                                                                        ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:57:35 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:88:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:88:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
src/subdir.mk:45: recipe for target 'src/Store.o' failed
       { ::new((void *)__p) _Tp(__val); }
         ^
make: *** [src/Store.o] Error 1
01:58:48 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:88:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:88:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
01:59:54 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:88:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:88:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
02:00:14 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:88:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:88:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
02:01:21 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:88:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:88:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
02:01:40 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:88:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:88:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
02:04:37 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:88:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:88:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
make: *** [src/Store.o] Error 1
src/subdir.mk:45: recipe for target 'src/Store.o' failed
02:04:42 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:88:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:88:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
make: *** [src/Store.o] Error 1
src/subdir.mk:45: recipe for target 'src/Store.o' failed
02:05:41 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:88:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:88:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
02:06:28 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/CheeseProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/CheeseProduct.d" -MT"src/CheeseProduct.d" -o "src/CheeseProduct.o" "../src/CheeseProduct.cpp"
Finished building: ../src/CheeseProduct.cpp
 
Building file: ../src/FarmProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/FarmProduct.d" -MT"src/FarmProduct.d" -o "src/FarmProduct.o" "../src/FarmProduct.cpp"
Finished building: ../src/FarmProduct.cpp
 
Building file: ../src/FruitProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/FruitProduct.d" -MT"src/FruitProduct.d" -o "src/FruitProduct.o" "../src/FruitProduct.cpp"
Finished building: ../src/FruitProduct.cpp
 
Building file: ../src/MilkProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/MilkProduct.d" -MT"src/MilkProduct.d" -o "src/MilkProduct.o" "../src/MilkProduct.cpp"
Finished building: ../src/MilkProduct.cpp
 
Building file: ../src/OtherMilkProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/OtherMilkProduct.d" -MT"src/OtherMilkProduct.d" -o "src/OtherMilkProduct.o" "../src/OtherMilkProduct.cpp"
Finished building: ../src/OtherMilkProduct.cpp
 
Building file: ../src/PackageProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/PackageProduct.d" -MT"src/PackageProduct.d" -o "src/PackageProduct.o" "../src/PackageProduct.cpp"
Finished building: ../src/PackageProduct.cpp
 
Building file: ../src/Product.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Product.d" -MT"src/Product.d" -o "src/Product.o" "../src/Product.cpp"
Finished building: ../src/Product.cpp
 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:88:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:88:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
02:06:41 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/CheeseProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/CheeseProduct.d" -MT"src/CheeseProduct.d" -o "src/CheeseProduct.o" "../src/CheeseProduct.cpp"
Finished building: ../src/CheeseProduct.cpp
 
Building file: ../src/FarmProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/FarmProduct.d" -MT"src/FarmProduct.d" -o "src/FarmProduct.o" "../src/FarmProduct.cpp"
Finished building: ../src/FarmProduct.cpp
 
Building file: ../src/FruitProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/FruitProduct.d" -MT"src/FruitProduct.d" -o "src/FruitProduct.o" "../src/FruitProduct.cpp"
Finished building: ../src/FruitProduct.cpp
 
Building file: ../src/MilkProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/MilkProduct.d" -MT"src/MilkProduct.d" -o "src/MilkProduct.o" "../src/MilkProduct.cpp"
Finished building: ../src/MilkProduct.cpp
 
Building file: ../src/OtherMilkProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/OtherMilkProduct.d" -MT"src/OtherMilkProduct.d" -o "src/OtherMilkProduct.o" "../src/OtherMilkProduct.cpp"
Finished building: ../src/OtherMilkProduct.cpp
 
Building file: ../src/PackageProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/PackageProduct.d" -MT"src/PackageProduct.d" -o "src/PackageProduct.o" "../src/PackageProduct.cpp"
Finished building: ../src/PackageProduct.cpp
 
Building file: ../src/Product.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Product.d" -MT"src/Product.d" -o "src/Product.o" "../src/Product.cpp"
Finished building: ../src/Product.cpp
 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:88:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:88:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
make: *** [src/Store.o] Error 1
src/subdir.mk:45: recipe for target 'src/Store.o' failed
02:11:23 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:87:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:87:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
02:11:54 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product>’:
../src/Store.h:18:18:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:713:7: error: invalid abstract parameter type ‘Product’
       resize(size_type __new_size, value_type __x = value_type())
       ^
In file included from ../src/Store.h:8:0,
                 from ../src/Store.cpp:7:
../src/Product.h:17:7: note:   because the following virtual functions are pure within ‘Product’:
 class Product {
       ^
../src/Product.h:31:14: note: 	virtual int Product::calculatePrice() const
  virtual int calculatePrice() const = 0;
              ^
In file included from /usr/include/c++/4.9/vector:69:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/vector.tcc: In instantiation of ‘void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Product*, std::vector<Product> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Product*]’:
/usr/include/c++/4.9/bits/stl_vector.h:925:28:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:87:   required from here
/usr/include/c++/4.9/bits/vector.tcc:337:19: error: cannot allocate an object of abstract type ‘Product’
    _Tp __x_copy = __x;
                   ^
/usr/include/c++/4.9/bits/vector.tcc:337:8: error: cannot declare variable ‘__x_copy’ to be of abstract type ‘Product’
    _Tp __x_copy = __x;
        ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = Product; __gnu_cxx::new_allocator<_Tp>::pointer = Product*]’:
/usr/include/c++/4.9/ext/alloc_traits.h:189:9:   required from ‘static void __gnu_cxx::__alloc_traits<_Alloc>::construct(_Alloc&, __gnu_cxx::__alloc_traits<_Alloc>::pointer, const _Tp&) [with _Tp = Product; _Alloc = std::allocator<Product>; __gnu_cxx::__alloc_traits<_Alloc>::pointer = Product*]’
/usr/include/c++/4.9/bits/stl_vector.h:918:34:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product; _Alloc = std::allocator<Product>; std::vector<_Tp, _Alloc>::value_type = Product]’
../src/Store.cpp:35:87:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:130:9: error: invalid new-expression of abstract class type ‘Product’
       { ::new((void *)__p) _Tp(__val); }
         ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
02:17:51 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘class __gnu_cxx::new_allocator<Product&>’:
/usr/include/c++/4.9/bits/allocator.h:92:11:   required from ‘class std::allocator<Product&>’
/usr/include/c++/4.9/ext/alloc_traits.h:172:53:   required from ‘struct __gnu_cxx::__alloc_traits<std::allocator<Product&> >’
/usr/include/c++/4.9/bits/stl_vector.h:75:28:   required from ‘struct std::_Vector_base<Product&, std::allocator<Product&> >’
/usr/include/c++/4.9/bits/stl_vector.h:214:11:   required from ‘class std::vector<Product&>’
../src/Store.h:18:19:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:63:26: error: forming pointer to reference type ‘Product&’
       typedef _Tp*       pointer;
                          ^
/usr/include/c++/4.9/ext/new_allocator.h:64:26: error: forming pointer to reference type ‘Product&’
       typedef const _Tp* const_pointer;
                          ^
In file included from /usr/include/c++/4.9/string:41:0,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/allocator.h: In instantiation of ‘class std::allocator<Product&>’:
/usr/include/c++/4.9/ext/alloc_traits.h:172:53:   required from ‘struct __gnu_cxx::__alloc_traits<std::allocator<Product&> >’
/usr/include/c++/4.9/bits/stl_vector.h:75:28:   required from ‘struct std::_Vector_base<Product&, std::allocator<Product&> >’
/usr/include/c++/4.9/bits/stl_vector.h:214:11:   required from ‘class std::vector<Product&>’
../src/Store.h:18:19:   required from here
/usr/include/c++/4.9/bits/allocator.h:97:26: error: forming pointer to reference type ‘Product&’
src/subdir.mk:45: recipe for target 'src/Store.o' failed
       typedef _Tp*       pointer;
                          ^
/usr/include/c++/4.9/bits/allocator.h:98:26: error: forming pointer to reference type ‘Product&’
       typedef const _Tp* const_pointer;
                          ^
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product&>’:
../src/Store.h:18:19:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:241:20: error: no members matching ‘std::vector<Product&>::_Base {aka std::_Vector_base<Product&, std::allocator<Product&> >}::_M_allocate’ in ‘std::vector<Product&>::_Base {aka struct std::_Vector_base<Product&, std::allocator<Product&> >}’
       using _Base::_M_allocate;
                    ^
/usr/include/c++/4.9/bits/stl_vector.h:242:20: error: no members matching ‘std::vector<Product&>::_Base {aka std::_Vector_base<Product&, std::allocator<Product&> >}::_M_deallocate’ in ‘std::vector<Product&>::_Base {aka struct std::_Vector_base<Product&, std::allocator<Product&> >}’
       using _Base::_M_deallocate;
                    ^
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘std::vector<_Tp, _Alloc>::~vector() [with _Tp = Product&; _Alloc = std::allocator<Product&>]’:
../src/Store.cpp:17:15:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:425:30: error: ‘struct std::_Vector_base<Product&, std::allocator<Product&> >::_Vector_impl’ has no member named ‘_M_start’
         _M_get_Tp_allocator()); }
                              ^
/usr/include/c++/4.9/bits/stl_vector.h:425:30: error: ‘struct std::_Vector_base<Product&, std::allocator<Product&> >::_Vector_impl’ has no member named ‘_M_finish’
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product&; _Alloc = std::allocator<Product&>; std::vector<_Tp, _Alloc>::value_type = Product&]’:
../src/Store.cpp:35:87:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:915:30: error: ‘struct std::_Vector_base<Product&, std::allocator<Product&> >::_Vector_impl’ has no member named ‘_M_end_of_storage’
  if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
                              ^
/usr/include/c++/4.9/bits/stl_vector.h:915:30: error: ‘struct std::_Vector_base<Product&, std::allocator<Product&> >::_Vector_impl’ has no member named ‘_M_finish’
/usr/include/c++/4.9/bits/stl_vector.h:918:34: error: ‘construct’ is not a member of ‘std::vector<Product&>::_Alloc_traits {aka __gnu_cxx::__alloc_traits<std::allocator<Product&> >}’
                               __x);
                                  ^
/usr/include/c++/4.9/bits/stl_vector.h:918:34: error: ‘struct std::_Vector_base<Product&, std::allocator<Product&> >::_Vector_impl’ has no member named ‘_M_finish’
/usr/include/c++/4.9/bits/stl_vector.h:919:6: error: ‘struct std::_Vector_base<Product&, std::allocator<Product&> >::_Vector_impl’ has no member named ‘_M_finish’
      ++this->_M_impl._M_finish;
      ^
/usr/include/c++/4.9/bits/stl_vector.h:925:22: error: ‘end’ was not declared in this scope
    _M_insert_aux(end(), __x);
                      ^
/usr/include/c++/4.9/bits/stl_vector.h:925:28: error: ‘_M_insert_aux’ was not declared in this scope
    _M_insert_aux(end(), __x);
                            ^
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = Product&; _Alloc = std::allocator<Product&>; std::vector<_Tp, _Alloc>::size_type = long unsigned int]’:
../src/Store.cpp:62:47:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:655:50: error: ‘const struct std::_Vector_base<Product&, std::allocator<Product&> >::_Vector_impl’ has no member named ‘_M_start’
       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
                                                  ^
/usr/include/c++/4.9/bits/stl_vector.h:655:50: error: ‘const struct std::_Vector_base<Product&, std::allocator<Product&> >::_Vector_impl’ has no member named ‘_M_finish’
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = Product&; _Alloc = std::allocator<Product&>; std::vector<_Tp, _Alloc>::const_reference = Product&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]’:
../src/Store.cpp:64:32:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:795:41: error: ‘const struct std::_Vector_base<Product&, std::allocator<Product&> >::_Vector_impl’ has no member named ‘_M_start’
       { return *(this->_M_impl._M_start + __n); }
                                         ^
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = Product&; _Alloc = std::allocator<Product&>]’:
/usr/include/c++/4.9/bits/stl_vector.h:425:33:   required from ‘std::vector<_Tp, _Alloc>::~vector() [with _Tp = Product&; _Alloc = std::allocator<Product&>]’
../src/Store.cpp:17:15:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:161:33: error: ‘struct std::_Vector_base<Product&, std::allocator<Product&> >::_Vector_impl’ has no member named ‘_M_start’
         - this->_M_impl._M_start); }
                                 ^
/usr/include/c++/4.9/bits/stl_vector.h:161:9: error: ‘struct std::_Vector_base<Product&, std::allocator<Product&> >::_Vector_impl’ has no member named ‘_M_start’
         - this->_M_impl._M_start); }
         ^
/usr/include/c++/4.9/bits/stl_vector.h:161:9: error: ‘struct std::_Vector_base<Product&, std::allocator<Product&> >::_Vector_impl’ has no member named ‘_M_end_of_storage’
/usr/include/c++/4.9/bits/stl_vector.h:161:33: error: ‘_M_deallocate’ was not declared in this scope
         - this->_M_impl._M_start); }
                                 ^
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = Product&; _Alloc = std::allocator<Product&>]’:
/usr/include/c++/4.9/bits/stl_vector.h:125:17:   required from ‘std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = Product&; _Alloc = std::allocator<Product&>]’
/usr/include/c++/4.9/bits/stl_vector.h:257:15:   required from ‘std::vector<_Tp, _Alloc>::vector() [with _Tp = Product&; _Alloc = std::allocator<Product&>]’
../src/Store.cpp:23:25:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:87:68: error: using invalid field ‘std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_M_start’
  : _Tp_alloc_type(), _M_start(0), _M_finish(0), _M_end_of_storage(0)
                                                                    ^
/usr/include/c++/4.9/bits/stl_vector.h:87:68: error: using invalid field ‘std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_M_finish’
/usr/include/c++/4.9/bits/stl_vector.h:87:68: error: using invalid field ‘std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_M_end_of_storage’
make: *** [src/Store.o] Error 1
02:18:37 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:87: error: no matching function for call to ‘std::vector<Product*>::push_back(FruitProduct&)’
   mAllProductArray.push_back(static_cast<FruitProduct&>(const_cast<Product&>(product)));
                                                                                       ^
../src/Store.cpp:35:87: note: candidate is:
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product*; _Alloc = std::allocator<Product*>; std::vector<_Tp, _Alloc>::value_type = Product*]
       push_back(const value_type& __x)
       ^
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note:   no known conversion for argument 1 from ‘FruitProduct’ to ‘Product* const&’
../src/Store.cpp:39:90: error: no matching function for call to ‘std::vector<Product*>::push_back(VegtableProduct&)’
   mAllProductArray.push_back(static_cast<VegtableProduct&>(const_cast<Product&>(product)));
                                                                                          ^
../src/Store.cpp:39:90: note: candidate is:
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product*; _Alloc = std::allocator<Product*>; std::vector<_Tp, _Alloc>::value_type = Product*]
       push_back(const value_type& __x)
       ^
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note:   no known conversion for argument 1 from ‘VegtableProduct’ to ‘Product* const&’
../src/Store.cpp:43:91: error: no matching function for call to ‘std::vector<Product*>::push_back(OtherMilkProduct&)’
   mAllProductArray.push_back(static_cast<OtherMilkProduct&>(const_cast<Product&>(product)));
                                                                                           ^
../src/Store.cpp:43:91: note: candidate is:
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product*; _Alloc = std::allocator<Product*>; std::vector<_Tp, _Alloc>::value_type = Product*]
       push_back(const value_type& __x)
       ^
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note:   no known conversion for argument 1 from ‘OtherMilkProduct’ to ‘Product* const&’
../src/Store.cpp:47:88: error: no matching function for call to ‘std::vector<Product*>::push_back(CheeseProduct&)’
   mAllProductArray.push_back(static_cast<CheeseProduct&>(const_cast<Product&>(product)));
                                                                                        ^
../src/Store.cpp:47:88: note: candidate is:
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product*; _Alloc = std::allocator<Product*>; std::vector<_Tp, _Alloc>::value_type = Product*]
       push_back(const value_type& __x)
       ^
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note:   no known conversion for argument 1 from ‘CheeseProduct’ to ‘Product* const&’
src/subdir.mk:45: recipe for target 'src/Store.o' failed
../src/Store.cpp:51:89: error: no matching function for call to ‘std::vector<Product*>::push_back(PackageProduct&)’
   mAllProductArray.push_back(static_cast<PackageProduct&>(const_cast<Product&>(product)));
                                                                                         ^
../src/Store.cpp:51:89: note: candidate is:
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product*; _Alloc = std::allocator<Product*>; std::vector<_Tp, _Alloc>::value_type = Product*]
       push_back(const value_type& __x)
       ^
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note:   no known conversion for argument 1 from ‘PackageProduct’ to ‘Product* const&’
../src/Store.cpp: In member function ‘int Store::calculateStoreValue() const’:
../src/Store.cpp:64:34: error: request for member ‘calculatePrice’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   summery += mAllProductArray[i].calculatePrice();
                                  ^
../src/Store.cpp: In member function ‘void Store::printStoreDetails() const’:
../src/Store.cpp:75:23: error: request for member ‘print’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   mAllProductArray[i].print();
                       ^
make: *** [src/Store.o] Error 1
02:18:52 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:85: error: no matching function for call to ‘FruitProduct::FruitProduct(Product&)’
   mAllProductArray.push_back(static_cast<FruitProduct>(const_cast<Product&>(product)));
                                                                                     ^
../src/Store.cpp:35:85: note: candidates are:
In file included from ../src/Store.cpp:8:0:
../src/FruitProduct.h:21:2: note: FruitProduct::FruitProduct(const FruitProduct&)
  FruitProduct(const FruitProduct&);
  ^
../src/FruitProduct.h:21:2: note:   no known conversion for argument 1 from ‘Product’ to ‘const FruitProduct&’
../src/FruitProduct.h:18:2: note: FruitProduct::FruitProduct(const string&, int, int, char, int, ExposureValue, int, int, int)
  FruitProduct(const string& name, int id, int shelf, char row, int weight,
  ^
../src/FruitProduct.h:18:2: note:   candidate expects 9 arguments, 1 provided
../src/Store.cpp:39:90: error: no matching function for call to ‘std::vector<Product*>::push_back(VegtableProduct&)’
   mAllProductArray.push_back(static_cast<VegtableProduct&>(const_cast<Product&>(product)));
                                                                                          ^
../src/Store.cpp:39:90: note: candidate is:
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product*; _Alloc = std::allocator<Product*>; std::vector<_Tp, _Alloc>::value_type = Product*]
src/subdir.mk:45: recipe for target 'src/Store.o' failed
       push_back(const value_type& __x)
       ^
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note:   no known conversion for argument 1 from ‘VegtableProduct’ to ‘Product* const&’
../src/Store.cpp:43:91: error: no matching function for call to ‘std::vector<Product*>::push_back(OtherMilkProduct&)’
   mAllProductArray.push_back(static_cast<OtherMilkProduct&>(const_cast<Product&>(product)));
                                                                                           ^
../src/Store.cpp:43:91: note: candidate is:
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product*; _Alloc = std::allocator<Product*>; std::vector<_Tp, _Alloc>::value_type = Product*]
       push_back(const value_type& __x)
       ^
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note:   no known conversion for argument 1 from ‘OtherMilkProduct’ to ‘Product* const&’
../src/Store.cpp:47:88: error: no matching function for call to ‘std::vector<Product*>::push_back(CheeseProduct&)’
   mAllProductArray.push_back(static_cast<CheeseProduct&>(const_cast<Product&>(product)));
                                                                                        ^
../src/Store.cpp:47:88: note: candidate is:
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product*; _Alloc = std::allocator<Product*>; std::vector<_Tp, _Alloc>::value_type = Product*]
       push_back(const value_type& __x)
       ^
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note:   no known conversion for argument 1 from ‘CheeseProduct’ to ‘Product* const&’
../src/Store.cpp:51:89: error: no matching function for call to ‘std::vector<Product*>::push_back(PackageProduct&)’
   mAllProductArray.push_back(static_cast<PackageProduct&>(const_cast<Product&>(product)));
                                                                                         ^
../src/Store.cpp:51:89: note: candidate is:
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product*; _Alloc = std::allocator<Product*>; std::vector<_Tp, _Alloc>::value_type = Product*]
       push_back(const value_type& __x)
       ^
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note:   no known conversion for argument 1 from ‘PackageProduct’ to ‘Product* const&’
../src/Store.cpp: In member function ‘int Store::calculateStoreValue() const’:
../src/Store.cpp:64:34: error: request for member ‘calculatePrice’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   summery += mAllProductArray[i].calculatePrice();
                                  ^
../src/Store.cpp: In member function ‘void Store::printStoreDetails() const’:
../src/Store.cpp:75:23: error: request for member ‘print’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   mAllProductArray[i].print();
                       ^
make: *** [src/Store.o] Error 1
02:19:16 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
In file included from /usr/include/x86_64-linux-gnu/c++/4.9/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.9/bits/allocator.h:46,
                 from /usr/include/c++/4.9/string:41,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/ext/new_allocator.h: In instantiation of ‘class __gnu_cxx::new_allocator<Product&>’:
/usr/include/c++/4.9/bits/allocator.h:92:11:   required from ‘class std::allocator<Product&>’
/usr/include/c++/4.9/ext/alloc_traits.h:172:53:   required from ‘struct __gnu_cxx::__alloc_traits<std::allocator<Product&> >’
/usr/include/c++/4.9/bits/stl_vector.h:75:28:   required from ‘struct std::_Vector_base<Product&, std::allocator<Product&> >’
/usr/include/c++/4.9/bits/stl_vector.h:214:11:   required from ‘class std::vector<Product&>’
../src/Store.h:18:19:   required from here
/usr/include/c++/4.9/ext/new_allocator.h:63:26: error: forming pointer to reference type ‘Product&’
       typedef _Tp*       pointer;
                          ^
/usr/include/c++/4.9/ext/new_allocator.h:64:26: error: forming pointer to reference type ‘Product&’
       typedef const _Tp* const_pointer;
                          ^
In file included from /usr/include/c++/4.9/string:41:0,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Store.h:8,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/allocator.h: In instantiation of ‘class std::allocator<Product&>’:
/usr/include/c++/4.9/ext/alloc_traits.h:172:53:   required from ‘struct __gnu_cxx::__alloc_traits<std::allocator<Product&> >’
/usr/include/c++/4.9/bits/stl_vector.h:75:28:   required from ‘struct std::_Vector_base<Product&, std::allocator<Product&> >’
/usr/include/c++/4.9/bits/stl_vector.h:214:11:   required from ‘class std::vector<Product&>’
../src/Store.h:18:19:   required from here
/usr/include/c++/4.9/bits/allocator.h:97:26: error: forming pointer to reference type ‘Product&’
       typedef _Tp*       pointer;
                          ^
/usr/include/c++/4.9/bits/allocator.h:98:26: error: forming pointer to reference type ‘Product&’
       typedef const _Tp* const_pointer;
                          ^
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘class std::vector<Product&>’:
../src/Store.h:18:19:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:241:20: error: no members matching ‘std::vector<Product&>::_Base {aka std::_Vector_base<Product&, std::allocator<Product&> >}::_M_allocate’ in ‘std::vector<Product&>::_Base {aka struct std::_Vector_base<Product&, std::allocator<Product&> >}’
       using _Base::_M_allocate;
                    ^
/usr/include/c++/4.9/bits/stl_vector.h:242:20: error: no members matching ‘std::vector<Product&>::_Base {aka std::_Vector_base<Product&, std::allocator<Product&> >}::_M_deallocate’ in ‘std::vector<Product&>::_Base {aka struct std::_Vector_base<Product&, std::allocator<Product&> >}’
       using _Base::_M_deallocate;
                    ^
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘std::vector<_Tp, _Alloc>::~vector() [with _Tp = Product&; _Alloc = std::allocator<Product&>]’:
../src/Store.cpp:17:15:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:425:30: error: ‘struct std::_Vector_base<Product&, std::allocator<Product&> >::_Vector_impl’ has no member named ‘_M_start’
         _M_get_Tp_allocator()); }
                              ^
/usr/include/c++/4.9/bits/stl_vector.h:425:30: error: ‘struct std::_Vector_base<Product&, std::allocator<Product&> >::_Vector_impl’ has no member named ‘_M_finish’
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product&; _Alloc = std::allocator<Product&>; std::vector<_Tp, _Alloc>::value_type = Product&]’:
../src/Store.cpp:35:87:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:915:30: error: ‘struct std::_Vector_base<Product&, std::allocator<Product&> >::_Vector_impl’ has no member named ‘_M_end_of_storage’
  if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
src/subdir.mk:45: recipe for target 'src/Store.o' failed
                              ^
/usr/include/c++/4.9/bits/stl_vector.h:915:30: error: ‘struct std::_Vector_base<Product&, std::allocator<Product&> >::_Vector_impl’ has no member named ‘_M_finish’
/usr/include/c++/4.9/bits/stl_vector.h:918:34: error: ‘construct’ is not a member of ‘std::vector<Product&>::_Alloc_traits {aka __gnu_cxx::__alloc_traits<std::allocator<Product&> >}’
                               __x);
                                  ^
/usr/include/c++/4.9/bits/stl_vector.h:918:34: error: ‘struct std::_Vector_base<Product&, std::allocator<Product&> >::_Vector_impl’ has no member named ‘_M_finish’
/usr/include/c++/4.9/bits/stl_vector.h:919:6: error: ‘struct std::_Vector_base<Product&, std::allocator<Product&> >::_Vector_impl’ has no member named ‘_M_finish’
      ++this->_M_impl._M_finish;
      ^
/usr/include/c++/4.9/bits/stl_vector.h:925:22: error: ‘end’ was not declared in this scope
    _M_insert_aux(end(), __x);
                      ^
/usr/include/c++/4.9/bits/stl_vector.h:925:28: error: ‘_M_insert_aux’ was not declared in this scope
    _M_insert_aux(end(), __x);
                            ^
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = Product&; _Alloc = std::allocator<Product&>; std::vector<_Tp, _Alloc>::size_type = long unsigned int]’:
../src/Store.cpp:62:47:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:655:50: error: ‘const struct std::_Vector_base<Product&, std::allocator<Product&> >::_Vector_impl’ has no member named ‘_M_start’
       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
                                                  ^
/usr/include/c++/4.9/bits/stl_vector.h:655:50: error: ‘const struct std::_Vector_base<Product&, std::allocator<Product&> >::_Vector_impl’ has no member named ‘_M_finish’
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = Product&; _Alloc = std::allocator<Product&>; std::vector<_Tp, _Alloc>::const_reference = Product&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]’:
../src/Store.cpp:64:32:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:795:41: error: ‘const struct std::_Vector_base<Product&, std::allocator<Product&> >::_Vector_impl’ has no member named ‘_M_start’
       { return *(this->_M_impl._M_start + __n); }
                                         ^
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = Product&; _Alloc = std::allocator<Product&>]’:
/usr/include/c++/4.9/bits/stl_vector.h:425:33:   required from ‘std::vector<_Tp, _Alloc>::~vector() [with _Tp = Product&; _Alloc = std::allocator<Product&>]’
../src/Store.cpp:17:15:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:161:33: error: ‘struct std::_Vector_base<Product&, std::allocator<Product&> >::_Vector_impl’ has no member named ‘_M_start’
         - this->_M_impl._M_start); }
                                 ^
/usr/include/c++/4.9/bits/stl_vector.h:161:9: error: ‘struct std::_Vector_base<Product&, std::allocator<Product&> >::_Vector_impl’ has no member named ‘_M_start’
         - this->_M_impl._M_start); }
         ^
/usr/include/c++/4.9/bits/stl_vector.h:161:9: error: ‘struct std::_Vector_base<Product&, std::allocator<Product&> >::_Vector_impl’ has no member named ‘_M_end_of_storage’
/usr/include/c++/4.9/bits/stl_vector.h:161:33: error: ‘_M_deallocate’ was not declared in this scope
         - this->_M_impl._M_start); }
                                 ^
/usr/include/c++/4.9/bits/stl_vector.h: In instantiation of ‘std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = Product&; _Alloc = std::allocator<Product&>]’:
/usr/include/c++/4.9/bits/stl_vector.h:125:17:   required from ‘std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = Product&; _Alloc = std::allocator<Product&>]’
/usr/include/c++/4.9/bits/stl_vector.h:257:15:   required from ‘std::vector<_Tp, _Alloc>::vector() [with _Tp = Product&; _Alloc = std::allocator<Product&>]’
../src/Store.cpp:23:25:   required from here
/usr/include/c++/4.9/bits/stl_vector.h:87:68: error: using invalid field ‘std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_M_start’
  : _Tp_alloc_type(), _M_start(0), _M_finish(0), _M_end_of_storage(0)
                                                                    ^
/usr/include/c++/4.9/bits/stl_vector.h:87:68: error: using invalid field ‘std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_M_finish’
/usr/include/c++/4.9/bits/stl_vector.h:87:68: error: using invalid field ‘std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_M_end_of_storage’
make: *** [src/Store.o] Error 1
02:20:14 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product&)’:
../src/Store.cpp:35:85: error: invalid const_cast from type ‘const Product’ to type ‘Product*’
   mAllProductArray.push_back(static_cast<FruitProduct*>(const_cast<Product*>(product)));
                                                                                     ^
../src/Store.cpp:39:90: error: no matching function for call to ‘std::vector<Product*>::push_back(VegtableProduct&)’
   mAllProductArray.push_back(static_cast<VegtableProduct&>(const_cast<Product&>(product)));
                                                                                          ^
../src/Store.cpp:39:90: note: candidate is:
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product*; _Alloc = std::allocator<Product*>; std::vector<_Tp, _Alloc>::value_type = Product*]
       push_back(const value_type& __x)
       ^
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note:   no known conversion for argument 1 from ‘VegtableProduct’ to ‘Product* const&’
../src/Store.cpp:43:91: error: no matching function for call to ‘std::vector<Product*>::push_back(OtherMilkProduct&)’
   mAllProductArray.push_back(static_cast<OtherMilkProduct&>(const_cast<Product&>(product)));
                                                                                           ^
../src/Store.cpp:43:91: note: candidate is:
src/subdir.mk:45: recipe for target 'src/Store.o' failed
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product*; _Alloc = std::allocator<Product*>; std::vector<_Tp, _Alloc>::value_type = Product*]
       push_back(const value_type& __x)
       ^
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note:   no known conversion for argument 1 from ‘OtherMilkProduct’ to ‘Product* const&’
../src/Store.cpp:47:88: error: no matching function for call to ‘std::vector<Product*>::push_back(CheeseProduct&)’
   mAllProductArray.push_back(static_cast<CheeseProduct&>(const_cast<Product&>(product)));
                                                                                        ^
../src/Store.cpp:47:88: note: candidate is:
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product*; _Alloc = std::allocator<Product*>; std::vector<_Tp, _Alloc>::value_type = Product*]
       push_back(const value_type& __x)
       ^
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note:   no known conversion for argument 1 from ‘CheeseProduct’ to ‘Product* const&’
../src/Store.cpp:51:89: error: no matching function for call to ‘std::vector<Product*>::push_back(PackageProduct&)’
   mAllProductArray.push_back(static_cast<PackageProduct&>(const_cast<Product&>(product)));
                                                                                         ^
../src/Store.cpp:51:89: note: candidate is:
In file included from /usr/include/c++/4.9/vector:64:0,
                 from ../src/Store.h:10,
                 from ../src/Store.cpp:7:
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Product*; _Alloc = std::allocator<Product*>; std::vector<_Tp, _Alloc>::value_type = Product*]
       push_back(const value_type& __x)
       ^
/usr/include/c++/4.9/bits/stl_vector.h:913:7: note:   no known conversion for argument 1 from ‘PackageProduct’ to ‘Product* const&’
../src/Store.cpp: In member function ‘int Store::calculateStoreValue() const’:
../src/Store.cpp:64:34: error: request for member ‘calculatePrice’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   summery += mAllProductArray[i].calculatePrice();
                                  ^
../src/Store.cpp: In member function ‘void Store::printStoreDetails() const’:
../src/Store.cpp:75:23: error: request for member ‘print’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   mAllProductArray[i].print();
                       ^
make: *** [src/Store.o] Error 1
02:20:33 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
../src/Store.cpp:31:6: error: prototype for ‘void Store::addProductToStore(const Product*)’ does not match any in class ‘Store’
 void Store::addProductToStore(const Product* product) {
      ^
In file included from ../src/Store.cpp:7:0:
../src/Store.h:23:7: error: candidate is: void Store::addProductToStore(const Product&)
  void addProductToStore(const Product& product);
       ^
../src/Store.cpp: In member function ‘int Store::calculateStoreValue() const’:
../src/Store.cpp:64:34: error: request for member ‘calculatePrice’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   summery += mAllProductArray[i].calculatePrice();
                                  ^
../src/Store.cpp: In member function ‘void Store::printStoreDetails() const’:
../src/Store.cpp:75:23: error: request for member ‘print’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   mAllProductArray[i].print();
                       ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
02:20:44 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
../src/Store.cpp: In constructor ‘Store::Store(const string&, int, int, const Product*)’:
../src/Store.cpp:27:21: error: no match for ‘operator*’ (operand type is ‘const Product’)
   addProductToStore(*allProductArray[i]);
                     ^
../src/Store.cpp: At global scope:
../src/Store.cpp:31:6: error: prototype for ‘void Store::addProductToStore(const Product*)’ does not match any in class ‘Store’
 void Store::addProductToStore(const Product* product) {
      ^
In file included from ../src/Store.cpp:7:0:
../src/Store.h:23:7: error: candidate is: void Store::addProductToStore(const Product&)
  void addProductToStore(const Product& product);
       ^
../src/Store.cpp: In member function ‘int Store::calculateStoreValue() const’:
../src/Store.cpp:64:34: error: request for member ‘calculatePrice’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   summery += mAllProductArray[i].calculatePrice();
                                  ^
../src/Store.cpp: In member function ‘void Store::printStoreDetails() const’:
../src/Store.cpp:75:23: error: request for member ‘print’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   mAllProductArray[i].print();
                       ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
02:21:02 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
../src/Store.cpp: In constructor ‘Store::Store(const string&, int, int, const Product*)’:
../src/Store.cpp:27:21: error: no match for ‘operator*’ (operand type is ‘const Product’)
   addProductToStore(*allProductArray[i]);
                     ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product*)’:
../src/Store.cpp:39:88: error: invalid const_cast from type ‘const Product**’ to type ‘Product*’
   mAllProductArray.push_back(static_cast<VegtableProduct&>(const_cast<Product&>(product)));
                                                                                        ^
../src/Store.cpp:43:89: error: invalid const_cast from type ‘const Product**’ to type ‘Product*’
   mAllProductArray.push_back(static_cast<OtherMilkProduct&>(const_cast<Product&>(product)));
                                                                                         ^
../src/Store.cpp:47:86: error: invalid const_cast from type ‘const Product**’ to type ‘Product*’
   mAllProductArray.push_back(static_cast<CheeseProduct&>(const_cast<Product&>(product)));
                                                                                      ^
../src/Store.cpp:51:87: error: invalid const_cast from type ‘const Product**’ to type ‘Product*’
   mAllProductArray.push_back(static_cast<PackageProduct&>(const_cast<Product&>(product)));
                                                                                       ^
../src/Store.cpp: In member function ‘int Store::calculateStoreValue() const’:
../src/Store.cpp:64:34: error: request for member ‘calculatePrice’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   summery += mAllProductArray[i].calculatePrice();
                                  ^
../src/Store.cpp: In member function ‘void Store::printStoreDetails() const’:
../src/Store.cpp:75:23: error: request for member ‘print’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   mAllProductArray[i].print();
                       ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
02:21:23 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
../src/Store.cpp: In constructor ‘Store::Store(const string&, int, int, const Product*)’:
../src/Store.cpp:27:21: error: expected primary-expression before ‘const’
   addProductToStore(const *allProductArray[i]);
                     ^
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product*)’:
../src/Store.cpp:39:88: error: invalid const_cast from type ‘const Product**’ to type ‘Product*’
   mAllProductArray.push_back(static_cast<VegtableProduct&>(const_cast<Product&>(product)));
                                                                                        ^
../src/Store.cpp:43:89: error: invalid const_cast from type ‘const Product**’ to type ‘Product*’
   mAllProductArray.push_back(static_cast<OtherMilkProduct&>(const_cast<Product&>(product)));
                                                                                         ^
../src/Store.cpp:47:86: error: invalid const_cast from type ‘const Product**’ to type ‘Product*’
   mAllProductArray.push_back(static_cast<CheeseProduct&>(const_cast<Product&>(product)));
                                                                                      ^
../src/Store.cpp:51:87: error: invalid const_cast from type ‘const Product**’ to type ‘Product*’
   mAllProductArray.push_back(static_cast<PackageProduct&>(const_cast<Product&>(product)));
                                                                                       ^
../src/Store.cpp: In member function ‘int Store::calculateStoreValue() const’:
../src/Store.cpp:64:34: error: request for member ‘calculatePrice’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   summery += mAllProductArray[i].calculatePrice();
                                  ^
../src/Store.cpp: In member function ‘void Store::printStoreDetails() const’:
../src/Store.cpp:75:23: error: request for member ‘print’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   mAllProductArray[i].print();
                       ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
02:21:28 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
../src/Store.cpp: In constructor ‘Store::Store(const string&, int, int, const Product*)’:
../src/Store.cpp:27:39: error: no matching function for call to ‘Store::addProductToStore(const Product&)’
   addProductToStore(allProductArray[i]);
                                       ^
../src/Store.cpp:27:39: note: candidate is:
In file included from ../src/Store.cpp:7:0:
../src/Store.h:23:7: note: void Store::addProductToStore(const Product*)
  void addProductToStore(const Product* product);
       ^
../src/Store.h:23:7: note:   no known conversion for argument 1 from ‘const Product’ to ‘const Product*’
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product*)’:
../src/Store.cpp:39:88: error: invalid const_cast from type ‘const Product**’ to type ‘Product*’
   mAllProductArray.push_back(static_cast<VegtableProduct&>(const_cast<Product&>(product)));
                                                                                        ^
../src/Store.cpp:43:89: error: invalid const_cast from type ‘const Product**’ to type ‘Product*’
   mAllProductArray.push_back(static_cast<OtherMilkProduct&>(const_cast<Product&>(product)));
                                                                                         ^
../src/Store.cpp:47:86: error: invalid const_cast from type ‘const Product**’ to type ‘Product*’
   mAllProductArray.push_back(static_cast<CheeseProduct&>(const_cast<Product&>(product)));
                                                                                      ^
../src/Store.cpp:51:87: error: invalid const_cast from type ‘const Product**’ to type ‘Product*’
   mAllProductArray.push_back(static_cast<PackageProduct&>(const_cast<Product&>(product)));
                                                                                       ^
../src/Store.cpp: In member function ‘int Store::calculateStoreValue() const’:
../src/Store.cpp:64:34: error: request for member ‘calculatePrice’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   summery += mAllProductArray[i].calculatePrice();
                                  ^
../src/Store.cpp: In member function ‘void Store::printStoreDetails() const’:
../src/Store.cpp:75:23: error: request for member ‘print’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   mAllProductArray[i].print();
                       ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
02:21:49 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product*)’:
../src/Store.cpp:39:88: error: invalid const_cast from type ‘const Product**’ to type ‘Product*’
   mAllProductArray.push_back(static_cast<VegtableProduct&>(const_cast<Product&>(product)));
                                                                                        ^
../src/Store.cpp:43:89: error: invalid const_cast from type ‘const Product**’ to type ‘Product*’
   mAllProductArray.push_back(static_cast<OtherMilkProduct&>(const_cast<Product&>(product)));
                                                                                         ^
../src/Store.cpp:47:86: error: invalid const_cast from type ‘const Product**’ to type ‘Product*’
   mAllProductArray.push_back(static_cast<CheeseProduct&>(const_cast<Product&>(product)));
                                                                                      ^
../src/Store.cpp:51:87: error: invalid const_cast from type ‘const Product**’ to type ‘Product*’
   mAllProductArray.push_back(static_cast<PackageProduct&>(const_cast<Product&>(product)));
                                                                                       ^
../src/Store.cpp: In member function ‘int Store::calculateStoreValue() const’:
../src/Store.cpp:64:34: error: request for member ‘calculatePrice’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   summery += mAllProductArray[i].calculatePrice();
                                  ^
../src/Store.cpp: In member function ‘void Store::printStoreDetails() const’:
../src/Store.cpp:75:23: error: request for member ‘print’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   mAllProductArray[i].print();
                       ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
02:22:10 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
../src/Store.cpp: In member function ‘void Store::addProductToStore(const Product*)’:
../src/Store.cpp:43:89: error: invalid const_cast from type ‘const Product**’ to type ‘Product*’
   mAllProductArray.push_back(static_cast<OtherMilkProduct&>(const_cast<Product&>(product)));
                                                                                         ^
../src/Store.cpp:47:86: error: invalid const_cast from type ‘const Product**’ to type ‘Product*’
   mAllProductArray.push_back(static_cast<CheeseProduct&>(const_cast<Product&>(product)));
                                                                                      ^
../src/Store.cpp:51:87: error: invalid const_cast from type ‘const Product**’ to type ‘Product*’
   mAllProductArray.push_back(static_cast<PackageProduct&>(const_cast<Product&>(product)));
                                                                                       ^
../src/Store.cpp: In member function ‘int Store::calculateStoreValue() const’:
../src/Store.cpp:64:34: error: request for member ‘calculatePrice’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   summery += mAllProductArray[i].calculatePrice();
                                  ^
../src/Store.cpp: In member function ‘void Store::printStoreDetails() const’:
../src/Store.cpp:75:23: error: request for member ‘print’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   mAllProductArray[i].print();
                       ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
02:22:25 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
../src/Store.cpp: In member function ‘int Store::calculateStoreValue() const’:
../src/Store.cpp:64:34: error: request for member ‘calculatePrice’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   summery += mAllProductArray[i].calculatePrice();
                                  ^
../src/Store.cpp: In member function ‘void Store::printStoreDetails() const’:
../src/Store.cpp:75:23: error: request for member ‘print’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   mAllProductArray[i].print();
                       ^
make: *** [src/Store.o] Error 1
src/subdir.mk:45: recipe for target 'src/Store.o' failed
02:22:59 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
Finished building: ../src/Store.cpp
 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
../src/Task4New.cpp: In function ‘int main()’:
../src/Task4New.cpp:39:14: error: redeclaration of ‘std::string str [2]’
  string str[2];
              ^
../src/Task4New.cpp:32:9: note: ‘std::string str [2]’ previously declared here
  string str[2];
         ^
../src/Task4New.cpp:46:33: error: no matching function for call to ‘Store::addProductToStore(FruitProduct&)’
  myStore.addProductToStore(fruit);
                                 ^
../src/Task4New.cpp:46:33: note: candidate is:
In file included from ../src/Task4New.cpp:13:0:
../src/Store.h:23:7: note: void Store::addProductToStore(const Product*)
  void addProductToStore(const Product* product);
       ^
../src/Store.h:23:7: note:   no known conversion for argument 1 from ‘FruitProduct’ to ‘const Product*’
../src/Task4New.cpp:47:31: error: no matching function for call to ‘Store::addProductToStore(VegtableProduct&)’
  myStore.addProductToStore(veg);
                               ^
../src/Task4New.cpp:47:31: note: candidate is:
In file included from ../src/Task4New.cpp:13:0:
../src/Store.h:23:7: note: void Store::addProductToStore(const Product*)
  void addProductToStore(const Product* product);
       ^
../src/Store.h:23:7: note:   no known conversion for argument 1 from ‘VegtableProduct’ to ‘const Product*’
../src/Task4New.cpp:48:34: error: no matching function for call to ‘Store::addProductToStore(CheeseProduct&)’
  myStore.addProductToStore(cheese);
                                  ^
../src/Task4New.cpp:48:34: note: candidate is:
In file included from ../src/Task4New.cpp:13:0:
../src/Store.h:23:7: note: void Store::addProductToStore(const Product*)
  void addProductToStore(const Product* product);
       ^
../src/Store.h:23:7: note:   no known conversion for argument 1 from ‘CheeseProduct’ to ‘const Product*’
../src/Task4New.cpp:49:33: error: no matching function for call to ‘Store::addProductToStore(OtherMilkProduct&)’
  myStore.addProductToStore(other);
                                 ^
../src/Task4New.cpp:49:33: note: candidate is:
In file included from ../src/Task4New.cpp:13:0:
../src/Store.h:23:7: note: void Store::addProductToStore(const Product*)
  void addProductToStore(const Product* product);
       ^
../src/Store.h:23:7: note:   no known conversion for argument 1 from ‘OtherMilkProduct’ to ‘const Product*’
../src/Task4New.cpp:50:31: error: no matching function for call to ‘Store::addProductToStore(PackageProduct&)’
src/subdir.mk:45: recipe for target 'src/Task4New.o' failed
  myStore.addProductToStore(pkg);
                               ^
../src/Task4New.cpp:50:31: note: candidate is:
In file included from ../src/Task4New.cpp:13:0:
../src/Store.h:23:7: note: void Store::addProductToStore(const Product*)
  void addProductToStore(const Product* product);
       ^
../src/Store.h:23:7: note:   no known conversion for argument 1 from ‘PackageProduct’ to ‘const Product*’
make: *** [src/Task4New.o] Error 1
02:23:20 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
../src/Task4New.cpp: In function ‘int main()’:
../src/Task4New.cpp:39:14: error: redeclaration of ‘std::string str [2]’
  string str[2];
              ^
../src/Task4New.cpp:32:9: note: ‘std::string str [2]’ previously declared here
  string str[2];
         ^
../src/Task4New.cpp:47:31: error: no matching function for call to ‘Store::addProductToStore(VegtableProduct&)’
  myStore.addProductToStore(veg);
                               ^
../src/Task4New.cpp:47:31: note: candidate is:
In file included from ../src/Task4New.cpp:13:0:
../src/Store.h:23:7: note: void Store::addProductToStore(const Product*)
  void addProductToStore(const Product* product);
       ^
../src/Store.h:23:7: note:   no known conversion for argument 1 from ‘VegtableProduct’ to ‘const Product*’
../src/Task4New.cpp:48:34: error: no matching function for call to ‘Store::addProductToStore(CheeseProduct&)’
  myStore.addProductToStore(cheese);
                                  ^
../src/Task4New.cpp:48:34: note: candidate is:
In file included from ../src/Task4New.cpp:13:0:
../src/Store.h:23:7: note: void Store::addProductToStore(const Product*)
  void addProductToStore(const Product* product);
       ^
../src/Store.h:23:7: note:   no known conversion for argument 1 from ‘CheeseProduct’ to ‘const Product*’
../src/Task4New.cpp:49:33: error: no matching function for call to ‘Store::addProductToStore(OtherMilkProduct&)’
  myStore.addProductToStore(other);
                                 ^
../src/Task4New.cpp:49:33: note: candidate is:
In file included from ../src/Task4New.cpp:13:0:
../src/Store.h:23:7: note: void Store::addProductToStore(const Product*)
  void addProductToStore(const Product* product);
       ^
../src/Store.h:23:7: note:   no known conversion for argument 1 from ‘OtherMilkProduct’ to ‘const Product*’
src/subdir.mk:45: recipe for target 'src/Task4New.o' failed
../src/Task4New.cpp:50:31: error: no matching function for call to ‘Store::addProductToStore(PackageProduct&)’
  myStore.addProductToStore(pkg);
                               ^
../src/Task4New.cpp:50:31: note: candidate is:
In file included from ../src/Task4New.cpp:13:0:
../src/Store.h:23:7: note: void Store::addProductToStore(const Product*)
  void addProductToStore(const Product* product);
       ^
../src/Store.h:23:7: note:   no known conversion for argument 1 from ‘PackageProduct’ to ‘const Product*’
make: *** [src/Task4New.o] Error 1
02:23:29 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
../src/Task4New.cpp: In function ‘int main()’:
../src/Task4New.cpp:39:14: error: redeclaration of ‘std::string str [2]’
  string str[2];
              ^
../src/Task4New.cpp:32:9: note: ‘std::string str [2]’ previously declared here
  string str[2];
         ^
src/subdir.mk:45: recipe for target 'src/Task4New.o' failed
make: *** [src/Task4New.o] Error 1
02:23:50 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
../src/Task4New.cpp: In function ‘int main()’:
../src/Task4New.cpp:41:14: error: redeclaration of ‘std::string str [2]’
  string str[2];
              ^
../src/Task4New.cpp:34:9: note: ‘std::string str [2]’ previously declared here
  string str[2];
         ^
src/subdir.mk:45: recipe for target 'src/Task4New.o' failed
make: *** [src/Task4New.o] Error 1
02:24:01 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
Finished building: ../src/Task4New.cpp
 
Building file: ../src/VegtableProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/VegtableProduct.d" -MT"src/VegtableProduct.d" -o "src/VegtableProduct.o" "../src/VegtableProduct.cpp"
Finished building: ../src/VegtableProduct.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
02:24:13 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
Finished building: ../src/Task4New.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
02:24:46 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
../src/Store.cpp: In member function ‘void Store::printStoreDetails() const’:
../src/Store.cpp:75:24: error: request for member ‘print’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   &mAllProductArray[i].print();
                        ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
02:24:57 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
../src/Store.cpp: In member function ‘void Store::printStoreDetails() const’:
../src/Store.cpp:75:23: error: request for member ‘print’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   mAllProductArray[i].print();
                       ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
02:25:03 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
../src/Store.cpp: In member function ‘void Store::printStoreDetails() const’:
../src/Store.cpp:75:24: error: request for member ‘print’ in ‘((const Store*)this)->Store::mAllProductArray.std::vector<_Tp, _Alloc>::operator[]<Product*, std::allocator<Product*> >(((std::vector<Product*>::size_type)i))’, which is of pointer type ‘Product* const’ (maybe you meant to use ‘->’ ?)
   *mAllProductArray[i].print();
                        ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
02:25:20 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
Finished building: ../src/Store.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
02:26:08 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
Finished building: ../src/Store.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
02:26:28 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
Finished building: ../src/Task4New.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
02:26:31 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
02:27:42 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/MilkProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/MilkProduct.d" -MT"src/MilkProduct.d" -o "src/MilkProduct.o" "../src/MilkProduct.cpp"
Finished building: ../src/MilkProduct.cpp
 
Building file: ../src/Product.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Product.d" -MT"src/Product.d" -o "src/Product.o" "../src/Product.cpp"
Finished building: ../src/Product.cpp
 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
Finished building: ../src/Task4New.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
02:27:46 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
02:29:04 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
Finished building: ../src/Task4New.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
02:29:09 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
02:29:58 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
Finished building: ../src/Task4New.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
02:30:02 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
02:30:13 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
02:30:51 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
02:31:09 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
02:31:41 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
Finished building: ../src/Task4New.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
02:32:05 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
02:32:39 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
Finished building: ../src/Task4New.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
02:32:42 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
02:32:51 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
02:34:39 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
Finished building: ../src/Task4New.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
02:36:28 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
02:36:34 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
02:36:51 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
Finished building: ../src/Task4New.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
02:36:54 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
02:37:34 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
../src/Task4New.cpp: In function ‘int main()’:
../src/Task4New.cpp:49:29: error: no match for ‘operator*’ (operand type is ‘FruitProduct’)
   myStore.addProductToStore(*fruit);
                             ^
src/subdir.mk:45: recipe for target 'src/Task4New.o' failed
make: *** [src/Task4New.o] Error 1
02:37:46 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
../src/Task4New.cpp: In function ‘int main()’:
../src/Task4New.cpp:49:34: error: no matching function for call to ‘Store::addProductToStore(FruitProduct&)’
   myStore.addProductToStore(fruit);
                                  ^
../src/Task4New.cpp:49:34: note: candidate is:
In file included from ../src/Task4New.cpp:13:0:
../src/Store.h:23:7: note: void Store::addProductToStore(const Product*)
  void addProductToStore(const Product* product);
       ^
../src/Store.h:23:7: note:   no known conversion for argument 1 from ‘FruitProduct’ to ‘const Product*’
src/subdir.mk:45: recipe for target 'src/Task4New.o' failed
make: *** [src/Task4New.o] Error 1
02:38:04 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
Finished building: ../src/Task4New.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
02:39:20 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
../src/Task4New.cpp: In function ‘int main()’:
../src/Task4New.cpp:49:19: error: must #include <typeinfo> before using typeid
   cout << typeid(&fruit) << endl;
                   ^
src/subdir.mk:45: recipe for target 'src/Task4New.o' failed
make: *** [src/Task4New.o] Error 1
02:39:40 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
../src/Task4New.cpp: In function ‘int main()’:
../src/Task4New.cpp:50:8: error: no match for ‘operator<<’ (operand types are ‘std::ostream {aka std::basic_ostream<char>}’ and ‘const std::type_info’)
   cout << typeid(&fruit) << endl;
        ^
../src/Task4New.cpp:50:8: note: candidates are:
In file included from /usr/include/c++/4.9/iostream:39:0,
                 from ../src/Product.h:9,
                 from ../src/FruitProduct.h:8,
                 from ../src/Task4New.cpp:8:
/usr/include/c++/4.9/ostream:108:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]
       operator<<(__ostream_type& (*__pf)(__ostream_type&))
       ^
/usr/include/c++/4.9/ostream:108:7: note:   no known conversion for argument 1 from ‘const std::type_info’ to ‘std::basic_ostream<char>::__ostream_type& (*)(std::basic_ostream<char>::__ostream_type&) {aka std::basic_ostream<char>& (*)(std::basic_ostream<char>&)}’
/usr/include/c++/4.9/ostream:117:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ios_type& (*)(std::basic_ostream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>; std::basic_ostream<_CharT, _Traits>::__ios_type = std::basic_ios<char>]
       operator<<(__ios_type& (*__pf)(__ios_type&))
       ^
/usr/include/c++/4.9/ostream:117:7: note:   no known conversion for argument 1 from ‘const std::type_info’ to ‘std::basic_ostream<char>::__ios_type& (*)(std::basic_ostream<char>::__ios_type&) {aka std::basic_ios<char>& (*)(std::basic_ios<char>&)}’
src/subdir.mk:45: recipe for target 'src/Task4New.o' failed
/usr/include/c++/4.9/ostream:127:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::ios_base& (*)(std::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]
       operator<<(ios_base& (*__pf) (ios_base&))
       ^
/usr/include/c++/4.9/ostream:127:7: note:   no known conversion for argument 1 from ‘const std::type_info’ to ‘std::ios_base& (*)(std::ios_base&)’
/usr/include/c++/4.9/ostream:166:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]
       operator<<(long __n)
       ^
/usr/include/c++/4.9/ostream:166:7: note:   no known conversion for argument 1 from ‘const std::type_info’ to ‘long int’
/usr/include/c++/4.9/ostream:170:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]
       operator<<(unsigned long __n)
       ^
/usr/include/c++/4.9/ostream:170:7: note:   no known conversion for argument 1 from ‘const std::type_info’ to ‘long unsigned int’
/usr/include/c++/4.9/ostream:174:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(bool) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]
       operator<<(bool __n)
       ^
/usr/include/c++/4.9/ostream:174:7: note:   no known conversion for argument 1 from ‘const std::type_info’ to ‘bool’
In file included from /usr/include/c++/4.9/ostream:612:0,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/FruitProduct.h:8,
                 from ../src/Task4New.cpp:8:
/usr/include/c++/4.9/bits/ostream.tcc:91:5: note: std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(short int) [with _CharT = char; _Traits = std::char_traits<char>]
     basic_ostream<_CharT, _Traits>::
     ^
/usr/include/c++/4.9/bits/ostream.tcc:91:5: note:   no known conversion for argument 1 from ‘const std::type_info’ to ‘short int’
In file included from /usr/include/c++/4.9/iostream:39:0,
                 from ../src/Product.h:9,
                 from ../src/FruitProduct.h:8,
                 from ../src/Task4New.cpp:8:
/usr/include/c++/4.9/ostream:181:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(short unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]
       operator<<(unsigned short __n)
       ^
/usr/include/c++/4.9/ostream:181:7: note:   no known conversion for argument 1 from ‘const std::type_info’ to ‘short unsigned int’
In file included from /usr/include/c++/4.9/ostream:612:0,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/FruitProduct.h:8,
                 from ../src/Task4New.cpp:8:
/usr/include/c++/4.9/bits/ostream.tcc:105:5: note: std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char; _Traits = std::char_traits<char>]
     basic_ostream<_CharT, _Traits>::
     ^
/usr/include/c++/4.9/bits/ostream.tcc:105:5: note:   no known conversion for argument 1 from ‘const std::type_info’ to ‘int’
In file included from /usr/include/c++/4.9/iostream:39:0,
                 from ../src/Product.h:9,
                 from ../src/FruitProduct.h:8,
                 from ../src/Task4New.cpp:8:
/usr/include/c++/4.9/ostream:192:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]
       operator<<(unsigned int __n)
       ^
/usr/include/c++/4.9/ostream:192:7: note:   no known conversion for argument 1 from ‘const std::type_info’ to ‘unsigned int’
/usr/include/c++/4.9/ostream:201:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]
       operator<<(long long __n)
       ^
/usr/include/c++/4.9/ostream:201:7: note:   no known conversion for argument 1 from ‘const std::type_info’ to ‘long long int’
/usr/include/c++/4.9/ostream:205:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]
       operator<<(unsigned long long __n)
       ^
/usr/include/c++/4.9/ostream:205:7: note:   no known conversion for argument 1 from ‘const std::type_info’ to ‘long long unsigned int’
/usr/include/c++/4.9/ostream:220:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]
       operator<<(double __f)
       ^
/usr/include/c++/4.9/ostream:220:7: note:   no known conversion for argument 1 from ‘const std::type_info’ to ‘double’
/usr/include/c++/4.9/ostream:224:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(float) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]
       operator<<(float __f)
       ^
/usr/include/c++/4.9/ostream:224:7: note:   no known conversion for argument 1 from ‘const std::type_info’ to ‘float’
/usr/include/c++/4.9/ostream:232:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]
       operator<<(long double __f)
       ^
/usr/include/c++/4.9/ostream:232:7: note:   no known conversion for argument 1 from ‘const std::type_info’ to ‘long double’
/usr/include/c++/4.9/ostream:245:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(const void*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]
       operator<<(const void* __p)
       ^
/usr/include/c++/4.9/ostream:245:7: note:   no known conversion for argument 1 from ‘const std::type_info’ to ‘const void*’
In file included from /usr/include/c++/4.9/ostream:612:0,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/FruitProduct.h:8,
                 from ../src/Task4New.cpp:8:
/usr/include/c++/4.9/bits/ostream.tcc:119:5: note: std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>]
     basic_ostream<_CharT, _Traits>::
     ^
/usr/include/c++/4.9/bits/ostream.tcc:119:5: note:   no known conversion for argument 1 from ‘const std::type_info’ to ‘std::basic_ostream<char>::__streambuf_type* {aka std::basic_streambuf<char>*}’
In file included from /usr/include/c++/4.9/string:52:0,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/FruitProduct.h:8,
                 from ../src/Task4New.cpp:8:
/usr/include/c++/4.9/bits/basic_string.h:2772:5: note: template<class _CharT, class _Traits, class _Alloc> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&)
     operator<<(basic_ostream<_CharT, _Traits>& __os,
     ^
/usr/include/c++/4.9/bits/basic_string.h:2772:5: note:   template argument deduction/substitution failed:
../src/Task4New.cpp:50:24: note:   ‘const std::type_info’ is not derived from ‘const std::basic_string<_CharT, _Traits, _Alloc>’
   cout << typeid(&fruit) << endl;
                        ^
In file included from /usr/include/c++/4.9/iostream:39:0,
                 from ../src/Product.h:9,
                 from ../src/FruitProduct.h:8,
                 from ../src/Task4New.cpp:8:
/usr/include/c++/4.9/ostream:471:5: note: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, _CharT)
     operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
     ^
/usr/include/c++/4.9/ostream:471:5: note:   template argument deduction/substitution failed:
../src/Task4New.cpp:50:24: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘std::type_info’)
   cout << typeid(&fruit) << endl;
                        ^
In file included from /usr/include/c++/4.9/iostream:39:0,
                 from ../src/Product.h:9,
                 from ../src/FruitProduct.h:8,
                 from ../src/Task4New.cpp:8:
/usr/include/c++/4.9/ostream:476:5: note: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, char)
     operator<<(basic_ostream<_CharT, _Traits>& __out, char __c)
     ^
/usr/include/c++/4.9/ostream:476:5: note:   template argument deduction/substitution failed:
../src/Task4New.cpp:50:24: note:   cannot convert ‘*(const std::type_info*)(& _ZTIP12FruitProduct)’ (type ‘const std::type_info’) to type ‘char’
   cout << typeid(&fruit) << endl;
                        ^
In file included from /usr/include/c++/4.9/iostream:39:0,
                 from ../src/Product.h:9,
                 from ../src/FruitProduct.h:8,
                 from ../src/Task4New.cpp:8:
/usr/include/c++/4.9/ostream:482:5: note: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char)
     operator<<(basic_ostream<char, _Traits>& __out, char __c)
     ^
/usr/include/c++/4.9/ostream:482:5: note:   template argument deduction/substitution failed:
../src/Task4New.cpp:50:24: note:   cannot convert ‘*(const std::type_info*)(& _ZTIP12FruitProduct)’ (type ‘const std::type_info’) to type ‘char’
   cout << typeid(&fruit) << endl;
                        ^
In file included from /usr/include/c++/4.9/iostream:39:0,
                 from ../src/Product.h:9,
                 from ../src/FruitProduct.h:8,
                 from ../src/Task4New.cpp:8:
/usr/include/c++/4.9/ostream:488:5: note: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, signed char)
     operator<<(basic_ostream<char, _Traits>& __out, signed char __c)
     ^
/usr/include/c++/4.9/ostream:488:5: note:   template argument deduction/substitution failed:
../src/Task4New.cpp:50:24: note:   cannot convert ‘*(const std::type_info*)(& _ZTIP12FruitProduct)’ (type ‘const std::type_info’) to type ‘signed char’
   cout << typeid(&fruit) << endl;
                        ^
In file included from /usr/include/c++/4.9/iostream:39:0,
                 from ../src/Product.h:9,
                 from ../src/FruitProduct.h:8,
                 from ../src/Task4New.cpp:8:
/usr/include/c++/4.9/ostream:493:5: note: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, unsigned char)
     operator<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
     ^
/usr/include/c++/4.9/ostream:493:5: note:   template argument deduction/substitution failed:
../src/Task4New.cpp:50:24: note:   cannot convert ‘*(const std::type_info*)(& _ZTIP12FruitProduct)’ (type ‘const std::type_info’) to type ‘unsigned char’
   cout << typeid(&fruit) << endl;
                        ^
In file included from /usr/include/c++/4.9/iostream:39:0,
                 from ../src/Product.h:9,
                 from ../src/FruitProduct.h:8,
                 from ../src/Task4New.cpp:8:
/usr/include/c++/4.9/ostream:513:5: note: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const _CharT*)
     operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
     ^
/usr/include/c++/4.9/ostream:513:5: note:   template argument deduction/substitution failed:
../src/Task4New.cpp:50:24: note:   mismatched types ‘const _CharT*’ and ‘std::type_info’
   cout << typeid(&fruit) << endl;
                        ^
In file included from /usr/include/c++/4.9/ostream:612:0,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/FruitProduct.h:8,
                 from ../src/Task4New.cpp:8:
/usr/include/c++/4.9/bits/ostream.tcc:321:5: note: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const char*)
     operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s)
     ^
/usr/include/c++/4.9/bits/ostream.tcc:321:5: note:   template argument deduction/substitution failed:
../src/Task4New.cpp:50:24: note:   cannot convert ‘*(const std::type_info*)(& _ZTIP12FruitProduct)’ (type ‘const std::type_info’) to type ‘const char*’
   cout << typeid(&fruit) << endl;
                        ^
In file included from /usr/include/c++/4.9/iostream:39:0,
                 from ../src/Product.h:9,
                 from ../src/FruitProduct.h:8,
                 from ../src/Task4New.cpp:8:
/usr/include/c++/4.9/ostream:530:5: note: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*)
     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
     ^
/usr/include/c++/4.9/ostream:530:5: note:   template argument deduction/substitution failed:
../src/Task4New.cpp:50:24: note:   cannot convert ‘*(const std::type_info*)(& _ZTIP12FruitProduct)’ (type ‘const std::type_info’) to type ‘const char*’
   cout << typeid(&fruit) << endl;
                        ^
In file included from /usr/include/c++/4.9/iostream:39:0,
                 from ../src/Product.h:9,
                 from ../src/FruitProduct.h:8,
                 from ../src/Task4New.cpp:8:
/usr/include/c++/4.9/ostream:543:5: note: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const signed char*)
     operator<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
     ^
/usr/include/c++/4.9/ostream:543:5: note:   template argument deduction/substitution failed:
../src/Task4New.cpp:50:24: note:   cannot convert ‘*(const std::type_info*)(& _ZTIP12FruitProduct)’ (type ‘const std::type_info’) to type ‘const signed char*’
   cout << typeid(&fruit) << endl;
                        ^
In file included from /usr/include/c++/4.9/iostream:39:0,
                 from ../src/Product.h:9,
                 from ../src/FruitProduct.h:8,
                 from ../src/Task4New.cpp:8:
/usr/include/c++/4.9/ostream:548:5: note: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const unsigned char*)
     operator<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
     ^
/usr/include/c++/4.9/ostream:548:5: note:   template argument deduction/substitution failed:
../src/Task4New.cpp:50:24: note:   cannot convert ‘*(const std::type_info*)(& _ZTIP12FruitProduct)’ (type ‘const std::type_info’) to type ‘const unsigned char*’
   cout << typeid(&fruit) << endl;
                        ^
make: *** [src/Task4New.o] Error 1
02:39:55 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
../src/Task4New.cpp: In function ‘int main()’:
../src/Task4New.cpp:50:32: error: no matching function for call to ‘std::basic_string<char>::basic_string(const std::type_info&)’
   cout << (string)typeid(&fruit) << endl;
                                ^
../src/Task4New.cpp:50:32: note: candidates are:
In file included from /usr/include/c++/4.9/string:52:0,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/FruitProduct.h:8,
                 from ../src/Task4New.cpp:8:
/usr/include/c++/4.9/bits/basic_string.h:540:9: note: template<class _InputIterator> std::basic_string<_CharT, _Traits, _Alloc>::basic_string(_InputIterator, _InputIterator, const _Alloc&)
         basic_string(_InputIterator __beg, _InputIterator __end,
         ^
/usr/include/c++/4.9/bits/basic_string.h:540:9: note:   template argument deduction/substitution failed:
../src/Task4New.cpp:50:32: note:   candidate expects 3 arguments, 1 provided
   cout << (string)typeid(&fruit) << endl;
                                ^
In file included from /usr/include/c++/4.9/string:53:0,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/FruitProduct.h:8,
                 from ../src/Task4New.cpp:8:
/usr/include/c++/4.9/bits/basic_string.tcc:219:5: note: std::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::basic_string<_CharT, _Traits, _Alloc>::size_type, _CharT, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]
src/subdir.mk:45: recipe for target 'src/Task4New.o' failed
     basic_string<_CharT, _Traits, _Alloc>::
     ^
/usr/include/c++/4.9/bits/basic_string.tcc:219:5: note:   candidate expects 3 arguments, 1 provided
/usr/include/c++/4.9/bits/basic_string.tcc:212:5: note: std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
     basic_string<_CharT, _Traits, _Alloc>::
     ^
/usr/include/c++/4.9/bits/basic_string.tcc:212:5: note:   no known conversion for argument 1 from ‘const std::type_info’ to ‘const char*’
/usr/include/c++/4.9/bits/basic_string.tcc:205:5: note: std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, std::basic_string<_CharT, _Traits, _Alloc>::size_type, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]
     basic_string<_CharT, _Traits, _Alloc>::
     ^
/usr/include/c++/4.9/bits/basic_string.tcc:205:5: note:   candidate expects 3 arguments, 1 provided
/usr/include/c++/4.9/bits/basic_string.tcc:193:5: note: std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&, std::basic_string<_CharT, _Traits, _Alloc>::size_type, std::basic_string<_CharT, _Traits, _Alloc>::size_type, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]
     basic_string<_CharT, _Traits, _Alloc>::
     ^
/usr/include/c++/4.9/bits/basic_string.tcc:193:5: note:   candidate expects 4 arguments, 1 provided
/usr/include/c++/4.9/bits/basic_string.tcc:183:5: note: std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&, std::basic_string<_CharT, _Traits, _Alloc>::size_type, std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]
     basic_string<_CharT, _Traits, _Alloc>::
     ^
/usr/include/c++/4.9/bits/basic_string.tcc:183:5: note:   candidate expects 3 arguments, 1 provided
/usr/include/c++/4.9/bits/basic_string.tcc:169:5: note: std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
     basic_string<_CharT, _Traits, _Alloc>::
     ^
/usr/include/c++/4.9/bits/basic_string.tcc:169:5: note:   no known conversion for argument 1 from ‘const std::type_info’ to ‘const std::basic_string<char>&’
/usr/include/c++/4.9/bits/basic_string.tcc:177:5: note: std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
     basic_string<_CharT, _Traits, _Alloc>::
     ^
/usr/include/c++/4.9/bits/basic_string.tcc:177:5: note:   no known conversion for argument 1 from ‘const std::type_info’ to ‘const std::allocator<char>&’
In file included from /usr/include/c++/4.9/string:52:0,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/FruitProduct.h:8,
                 from ../src/Task4New.cpp:8:
/usr/include/c++/4.9/bits/basic_string.h:442:7: note: std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       basic_string()
       ^
/usr/include/c++/4.9/bits/basic_string.h:442:7: note:   candidate expects 0 arguments, 1 provided
make: *** [src/Task4New.o] Error 1
02:40:57 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
Finished building: ../src/Task4New.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
02:41:00 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
02:42:43 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
Finished building: ../src/Store.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
02:42:46 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
02:43:34 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
Finished building: ../src/Store.cpp
 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
Finished building: ../src/Task4New.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
02:43:37 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
02:45:02 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
Finished building: ../src/Task4New.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
02:45:07 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
02:46:09 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
Finished building: ../src/Store.cpp
 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
Finished building: ../src/Task4New.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
02:48:11 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/PackageProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/PackageProduct.d" -MT"src/PackageProduct.d" -o "src/PackageProduct.o" "../src/PackageProduct.cpp"
Finished building: ../src/PackageProduct.cpp
 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
Finished building: ../src/Task4New.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
02:48:13 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
02:48:50 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/PackageProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/PackageProduct.d" -MT"src/PackageProduct.d" -o "src/PackageProduct.o" "../src/PackageProduct.cpp"
Finished building: ../src/PackageProduct.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
02:52:16 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
02:54:00 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
Finished building: ../src/Task4New.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
02:54:04 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
03:00:52 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/CheeseProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/CheeseProduct.d" -MT"src/CheeseProduct.d" -o "src/CheeseProduct.o" "../src/CheeseProduct.cpp"
Finished building: ../src/CheeseProduct.cpp
 
Building file: ../src/FarmProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/FarmProduct.d" -MT"src/FarmProduct.d" -o "src/FarmProduct.o" "../src/FarmProduct.cpp"
Finished building: ../src/FarmProduct.cpp
 
Building file: ../src/FruitProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/FruitProduct.d" -MT"src/FruitProduct.d" -o "src/FruitProduct.o" "../src/FruitProduct.cpp"
Finished building: ../src/FruitProduct.cpp
 
Building file: ../src/MilkProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/MilkProduct.d" -MT"src/MilkProduct.d" -o "src/MilkProduct.o" "../src/MilkProduct.cpp"
Finished building: ../src/MilkProduct.cpp
 
Building file: ../src/OtherMilkProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/OtherMilkProduct.d" -MT"src/OtherMilkProduct.d" -o "src/OtherMilkProduct.o" "../src/OtherMilkProduct.cpp"
Finished building: ../src/OtherMilkProduct.cpp
 
Building file: ../src/PackageProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/PackageProduct.d" -MT"src/PackageProduct.d" -o "src/PackageProduct.o" "../src/PackageProduct.cpp"
Finished building: ../src/PackageProduct.cpp
 
Building file: ../src/Product.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Product.d" -MT"src/Product.d" -o "src/Product.o" "../src/Product.cpp"
../src/Product.cpp: In member function ‘virtual void Product::write(std::ostream&) const’:
../src/Product.cpp:52:22: error: ‘mPlace’ was not declared in this scope
  out << "PLACE: " << mPlace.getRow() << "," << mPlace.getShelf() << endl;
                      ^
../src/Product.cpp: In member function ‘virtual void Product::save(std::ofstream&) const’:
../src/Product.cpp:61:9: error: ‘mPlace’ was not declared in this scope
  out << mPlace.getRow() << "," << mPlace.getShelf() << " ";
         ^
../src/Product.cpp: In member function ‘virtual void Product::load(std::ifstream&)’:
../src/Product.cpp:68:12: error: no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘ProductType’)
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
            ^
../src/Product.cpp:68:12: note: candidates are:
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:120:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__istream_type& (*)(std::basic_istream<_CharT, _Traits>::__istream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(__istream_type& (*__pf)(__istream_type&))
       ^
/usr/include/c++/4.9/istream:120:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::basic_istream<char>::__istream_type& (*)(std::basic_istream<char>::__istream_type&) {aka std::basic_istream<char>& (*)(std::basic_istream<char>&)}’
/usr/include/c++/4.9/istream:124:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__ios_type& (*)(std::basic_istream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>; std::basic_istream<_CharT, _Traits>::__ios_type = std::basic_ios<char>]
       operator>>(__ios_type& (*__pf)(__ios_type&))
src/subdir.mk:45: recipe for target 'src/Product.o' failed
       ^
/usr/include/c++/4.9/istream:124:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::basic_istream<char>::__ios_type& (*)(std::basic_istream<char>::__ios_type&) {aka std::basic_ios<char>& (*)(std::basic_ios<char>&)}’
/usr/include/c++/4.9/istream:131:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::ios_base& (*)(std::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(ios_base& (*__pf)(ios_base&))
       ^
/usr/include/c++/4.9/istream:131:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::ios_base& (*)(std::ios_base&)’
/usr/include/c++/4.9/istream:168:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(bool&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(bool& __n)
       ^
/usr/include/c++/4.9/istream:168:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘bool&’
/usr/include/c++/4.9/istream:172:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(short int&) [with _CharT = char; _Traits = std::char_traits<char>]
       operator>>(short& __n);
       ^
/usr/include/c++/4.9/istream:172:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘short int&’
/usr/include/c++/4.9/istream:175:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(short unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned short& __n)
       ^
/usr/include/c++/4.9/istream:175:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘short unsigned int&’
/usr/include/c++/4.9/istream:179:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(int&) [with _CharT = char; _Traits = std::char_traits<char>]
       operator>>(int& __n);
       ^
/usr/include/c++/4.9/istream:179:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘int&’
/usr/include/c++/4.9/istream:182:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned int& __n)
       ^
/usr/include/c++/4.9/istream:182:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘unsigned int&’
/usr/include/c++/4.9/istream:186:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(long& __n)
       ^
/usr/include/c++/4.9/istream:186:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long int&’
/usr/include/c++/4.9/istream:190:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned long& __n)
       ^
/usr/include/c++/4.9/istream:190:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long unsigned int&’
/usr/include/c++/4.9/istream:195:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long long int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(long long& __n)
       ^
/usr/include/c++/4.9/istream:195:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long long int&’
/usr/include/c++/4.9/istream:199:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long long unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned long long& __n)
       ^
/usr/include/c++/4.9/istream:199:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long long unsigned int&’
/usr/include/c++/4.9/istream:214:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(float&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(float& __f)
       ^
/usr/include/c++/4.9/istream:214:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘float&’
/usr/include/c++/4.9/istream:218:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(double&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(double& __f)
       ^
/usr/include/c++/4.9/istream:218:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘double&’
/usr/include/c++/4.9/istream:222:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long double&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(long double& __f)
       ^
/usr/include/c++/4.9/istream:222:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long double&’
/usr/include/c++/4.9/istream:235:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(void*&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(void*& __p)
       ^
/usr/include/c++/4.9/istream:235:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘void*&’
/usr/include/c++/4.9/istream:259:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>]
       operator>>(__streambuf_type* __sb);
       ^
/usr/include/c++/4.9/istream:259:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::basic_istream<char>::__streambuf_type* {aka std::basic_streambuf<char>*}’
In file included from /usr/include/c++/4.9/string:53:0,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/bits/basic_string.tcc:996:5: note: template<class _CharT, class _Traits, class _Alloc> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, std::basic_string<_CharT, _Traits, _Alloc>&)
     operator>>(basic_istream<_CharT, _Traits>& __in,
     ^
/usr/include/c++/4.9/bits/basic_string.tcc:996:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   mismatched types ‘std::basic_string<_CharT, _Traits, _Alloc>’ and ‘ProductType’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/istream:882:0,
                 from /usr/include/c++/4.9/iostream:40,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/bits/istream.tcc:955:5: note: template<class _CharT2, class _Traits2> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, _CharT2*)
     operator>>(basic_istream<_CharT, _Traits>& __in, _CharT* __s)
     ^
/usr/include/c++/4.9/bits/istream.tcc:955:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   mismatched types ‘_CharT2*’ and ‘ProductType’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/istream:882:0,
                 from /usr/include/c++/4.9/iostream:40,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/bits/istream.tcc:923:5: note: template<class _CharT, class _Traits> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, _CharT&)
     operator>>(basic_istream<_CharT, _Traits>& __in, _CharT& __c)
     ^
/usr/include/c++/4.9/bits/istream.tcc:923:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘ProductType’)
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:727:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, unsigned char&)
     operator>>(basic_istream<char, _Traits>& __in, unsigned char& __c)
     ^
/usr/include/c++/4.9/istream:727:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘unsigned char&’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:732:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, signed char&)
     operator>>(basic_istream<char, _Traits>& __in, signed char& __c)
     ^
/usr/include/c++/4.9/istream:732:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘signed char&’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:774:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, unsigned char*)
     operator>>(basic_istream<char, _Traits>& __in, unsigned char* __s)
     ^
/usr/include/c++/4.9/istream:774:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘unsigned char*’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:779:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, signed char*)
     operator>>(basic_istream<char, _Traits>& __in, signed char* __s)
     ^
/usr/include/c++/4.9/istream:779:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘signed char*’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
../src/Product.cpp:68:24: error: ‘mPlace’ was not declared in this scope
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
                        ^
../src/Product.cpp: In member function ‘virtual void Product::loadBin(std::ifstream&)’:
../src/Product.cpp:84:18: error: ‘mPlace’ was not declared in this scope
  in.read((char*)&mPlace, sizeof(mPlace));
                  ^
make: *** [src/Product.o] Error 1
03:00:59 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Product.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Product.d" -MT"src/Product.d" -o "src/Product.o" "../src/Product.cpp"
../src/Product.cpp: In member function ‘virtual void Product::write(std::ostream&) const’:
../src/Product.cpp:52:22: error: ‘mPlace’ was not declared in this scope
  out << "PLACE: " << mPlace.getRow() << "," << mPlace.getShelf() << endl;
                      ^
../src/Product.cpp: In member function ‘virtual void Product::save(std::ofstream&) const’:
../src/Product.cpp:61:9: error: ‘mPlace’ was not declared in this scope
  out << mPlace.getRow() << "," << mPlace.getShelf() << " ";
         ^
../src/Product.cpp: In member function ‘virtual void Product::load(std::ifstream&)’:
../src/Product.cpp:68:12: error: no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘ProductType’)
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
            ^
../src/Product.cpp:68:12: note: candidates are:
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:120:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__istream_type& (*)(std::basic_istream<_CharT, _Traits>::__istream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(__istream_type& (*__pf)(__istream_type&))
       ^
/usr/include/c++/4.9/istream:120:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::basic_istream<char>::__istream_type& (*)(std::basic_istream<char>::__istream_type&) {aka std::basic_istream<char>& (*)(std::basic_istream<char>&)}’
/usr/include/c++/4.9/istream:124:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__ios_type& (*)(std::basic_istream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>; std::basic_istream<_CharT, _Traits>::__ios_type = std::basic_ios<char>]
       operator>>(__ios_type& (*__pf)(__ios_type&))
       ^
/usr/include/c++/4.9/istream:124:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::basic_istream<char>::__ios_type& (*)(std::basic_istream<char>::__ios_type&) {aka std::basic_ios<char>& (*)(std::basic_ios<char>&)}’
/usr/include/c++/4.9/istream:131:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::ios_base& (*)(std::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(ios_base& (*__pf)(ios_base&))
       ^
/usr/include/c++/4.9/istream:131:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::ios_base& (*)(std::ios_base&)’
/usr/include/c++/4.9/istream:168:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(bool&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(bool& __n)
       ^
/usr/include/c++/4.9/istream:168:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘bool&’
/usr/include/c++/4.9/istream:172:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(short int&) [with _CharT = char; _Traits = std::char_traits<char>]
       operator>>(short& __n);
       ^
/usr/include/c++/4.9/istream:172:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘short int&’
/usr/include/c++/4.9/istream:175:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(short unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned short& __n)
       ^
/usr/include/c++/4.9/istream:175:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘short unsigned int&’
/usr/include/c++/4.9/istream:179:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(int&) [with _CharT = char; _Traits = std::char_traits<char>]
       operator>>(int& __n);
       ^
/usr/include/c++/4.9/istream:179:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘int&’
/usr/include/c++/4.9/istream:182:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned int& __n)
       ^
/usr/include/c++/4.9/istream:182:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘unsigned int&’
/usr/include/c++/4.9/istream:186:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(long& __n)
       ^
/usr/include/c++/4.9/istream:186:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long int&’
/usr/include/c++/4.9/istream:190:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
src/subdir.mk:45: recipe for target 'src/Product.o' failed
       operator>>(unsigned long& __n)
       ^
/usr/include/c++/4.9/istream:190:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long unsigned int&’
/usr/include/c++/4.9/istream:195:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long long int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(long long& __n)
       ^
/usr/include/c++/4.9/istream:195:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long long int&’
/usr/include/c++/4.9/istream:199:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long long unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned long long& __n)
       ^
/usr/include/c++/4.9/istream:199:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long long unsigned int&’
/usr/include/c++/4.9/istream:214:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(float&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(float& __f)
       ^
/usr/include/c++/4.9/istream:214:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘float&’
/usr/include/c++/4.9/istream:218:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(double&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(double& __f)
       ^
/usr/include/c++/4.9/istream:218:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘double&’
/usr/include/c++/4.9/istream:222:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long double&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(long double& __f)
       ^
/usr/include/c++/4.9/istream:222:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long double&’
/usr/include/c++/4.9/istream:235:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(void*&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(void*& __p)
       ^
/usr/include/c++/4.9/istream:235:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘void*&’
/usr/include/c++/4.9/istream:259:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>]
       operator>>(__streambuf_type* __sb);
       ^
/usr/include/c++/4.9/istream:259:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::basic_istream<char>::__streambuf_type* {aka std::basic_streambuf<char>*}’
In file included from /usr/include/c++/4.9/string:53:0,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/bits/basic_string.tcc:996:5: note: template<class _CharT, class _Traits, class _Alloc> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, std::basic_string<_CharT, _Traits, _Alloc>&)
     operator>>(basic_istream<_CharT, _Traits>& __in,
     ^
/usr/include/c++/4.9/bits/basic_string.tcc:996:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   mismatched types ‘std::basic_string<_CharT, _Traits, _Alloc>’ and ‘ProductType’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/istream:882:0,
                 from /usr/include/c++/4.9/iostream:40,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/bits/istream.tcc:955:5: note: template<class _CharT2, class _Traits2> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, _CharT2*)
     operator>>(basic_istream<_CharT, _Traits>& __in, _CharT* __s)
     ^
/usr/include/c++/4.9/bits/istream.tcc:955:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   mismatched types ‘_CharT2*’ and ‘ProductType’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/istream:882:0,
                 from /usr/include/c++/4.9/iostream:40,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/bits/istream.tcc:923:5: note: template<class _CharT, class _Traits> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, _CharT&)
     operator>>(basic_istream<_CharT, _Traits>& __in, _CharT& __c)
     ^
/usr/include/c++/4.9/bits/istream.tcc:923:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘ProductType’)
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:727:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, unsigned char&)
     operator>>(basic_istream<char, _Traits>& __in, unsigned char& __c)
     ^
/usr/include/c++/4.9/istream:727:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘unsigned char&’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:732:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, signed char&)
     operator>>(basic_istream<char, _Traits>& __in, signed char& __c)
     ^
/usr/include/c++/4.9/istream:732:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘signed char&’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:774:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, unsigned char*)
     operator>>(basic_istream<char, _Traits>& __in, unsigned char* __s)
     ^
/usr/include/c++/4.9/istream:774:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘unsigned char*’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:779:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, signed char*)
     operator>>(basic_istream<char, _Traits>& __in, signed char* __s)
     ^
/usr/include/c++/4.9/istream:779:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘signed char*’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
../src/Product.cpp:68:24: error: ‘mPlace’ was not declared in this scope
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
                        ^
../src/Product.cpp: In member function ‘virtual void Product::loadBin(std::ifstream&)’:
../src/Product.cpp:84:18: error: ‘mPlace’ was not declared in this scope
  in.read((char*)&mPlace, sizeof(mPlace));
                  ^
make: *** [src/Product.o] Error 1
03:01:12 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Product.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Product.d" -MT"src/Product.d" -o "src/Product.o" "../src/Product.cpp"
../src/Product.cpp: In member function ‘virtual void Product::write(std::ostream&) const’:
../src/Product.cpp:52:22: error: ‘mPlace’ was not declared in this scope
  out << "PLACE: " << mPlace.getRow() << "," << mPlace.getShelf() << endl;
                      ^
../src/Product.cpp: In member function ‘virtual void Product::save(std::ofstream&) const’:
../src/Product.cpp:61:9: error: ‘mPlace’ was not declared in this scope
  out << mPlace.getRow() << "," << mPlace.getShelf() << " ";
         ^
../src/Product.cpp: In member function ‘virtual void Product::load(std::ifstream&)’:
../src/Product.cpp:68:12: error: no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘ProductType’)
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
            ^
../src/Product.cpp:68:12: note: candidates are:
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:120:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__istream_type& (*)(std::basic_istream<_CharT, _Traits>::__istream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(__istream_type& (*__pf)(__istream_type&))
       ^
/usr/include/c++/4.9/istream:120:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::basic_istream<char>::__istream_type& (*)(std::basic_istream<char>::__istream_type&) {aka std::basic_istream<char>& (*)(std::basic_istream<char>&)}’
/usr/include/c++/4.9/istream:124:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__ios_type& (*)(std::basic_istream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>; std::basic_istream<_CharT, _Traits>::__ios_type = std::basic_ios<char>]
       operator>>(__ios_type& (*__pf)(__ios_type&))
       ^
/usr/include/c++/4.9/istream:124:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::basic_istream<char>::__ios_type& (*)(std::basic_istream<char>::__ios_type&) {aka std::basic_ios<char>& (*)(std::basic_ios<char>&)}’
/usr/include/c++/4.9/istream:131:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::ios_base& (*)(std::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(ios_base& (*__pf)(ios_base&))
       ^
/usr/include/c++/4.9/istream:131:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::ios_base& (*)(std::ios_base&)’
/usr/include/c++/4.9/istream:168:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(bool&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(bool& __n)
       ^
/usr/include/c++/4.9/istream:168:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘bool&’
/usr/include/c++/4.9/istream:172:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(short int&) [with _CharT = char; _Traits = std::char_traits<char>]
       operator>>(short& __n);
       ^
/usr/include/c++/4.9/istream:172:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘short int&’
/usr/include/c++/4.9/istream:175:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(short unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned short& __n)
       ^
/usr/include/c++/4.9/istream:175:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘short unsigned int&’
/usr/include/c++/4.9/istream:179:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(int&) [with _CharT = char; _Traits = std::char_traits<char>]
src/subdir.mk:45: recipe for target 'src/Product.o' failed
       operator>>(int& __n);
       ^
/usr/include/c++/4.9/istream:179:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘int&’
/usr/include/c++/4.9/istream:182:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned int& __n)
       ^
/usr/include/c++/4.9/istream:182:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘unsigned int&’
/usr/include/c++/4.9/istream:186:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(long& __n)
       ^
/usr/include/c++/4.9/istream:186:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long int&’
/usr/include/c++/4.9/istream:190:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned long& __n)
       ^
/usr/include/c++/4.9/istream:190:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long unsigned int&’
/usr/include/c++/4.9/istream:195:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long long int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(long long& __n)
       ^
/usr/include/c++/4.9/istream:195:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long long int&’
/usr/include/c++/4.9/istream:199:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long long unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned long long& __n)
       ^
/usr/include/c++/4.9/istream:199:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long long unsigned int&’
/usr/include/c++/4.9/istream:214:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(float&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(float& __f)
       ^
/usr/include/c++/4.9/istream:214:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘float&’
/usr/include/c++/4.9/istream:218:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(double&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(double& __f)
       ^
/usr/include/c++/4.9/istream:218:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘double&’
/usr/include/c++/4.9/istream:222:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long double&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(long double& __f)
       ^
/usr/include/c++/4.9/istream:222:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long double&’
/usr/include/c++/4.9/istream:235:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(void*&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(void*& __p)
       ^
/usr/include/c++/4.9/istream:235:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘void*&’
/usr/include/c++/4.9/istream:259:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>]
       operator>>(__streambuf_type* __sb);
       ^
/usr/include/c++/4.9/istream:259:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::basic_istream<char>::__streambuf_type* {aka std::basic_streambuf<char>*}’
In file included from /usr/include/c++/4.9/string:53:0,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/bits/basic_string.tcc:996:5: note: template<class _CharT, class _Traits, class _Alloc> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, std::basic_string<_CharT, _Traits, _Alloc>&)
     operator>>(basic_istream<_CharT, _Traits>& __in,
     ^
/usr/include/c++/4.9/bits/basic_string.tcc:996:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   mismatched types ‘std::basic_string<_CharT, _Traits, _Alloc>’ and ‘ProductType’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/istream:882:0,
                 from /usr/include/c++/4.9/iostream:40,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/bits/istream.tcc:955:5: note: template<class _CharT2, class _Traits2> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, _CharT2*)
     operator>>(basic_istream<_CharT, _Traits>& __in, _CharT* __s)
     ^
/usr/include/c++/4.9/bits/istream.tcc:955:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   mismatched types ‘_CharT2*’ and ‘ProductType’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/istream:882:0,
                 from /usr/include/c++/4.9/iostream:40,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/bits/istream.tcc:923:5: note: template<class _CharT, class _Traits> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, _CharT&)
     operator>>(basic_istream<_CharT, _Traits>& __in, _CharT& __c)
     ^
/usr/include/c++/4.9/bits/istream.tcc:923:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘ProductType’)
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:727:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, unsigned char&)
     operator>>(basic_istream<char, _Traits>& __in, unsigned char& __c)
     ^
/usr/include/c++/4.9/istream:727:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘unsigned char&’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:732:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, signed char&)
     operator>>(basic_istream<char, _Traits>& __in, signed char& __c)
     ^
/usr/include/c++/4.9/istream:732:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘signed char&’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:774:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, unsigned char*)
     operator>>(basic_istream<char, _Traits>& __in, unsigned char* __s)
     ^
/usr/include/c++/4.9/istream:774:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘unsigned char*’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:779:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, signed char*)
     operator>>(basic_istream<char, _Traits>& __in, signed char* __s)
     ^
/usr/include/c++/4.9/istream:779:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘signed char*’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
../src/Product.cpp:68:24: error: ‘mPlace’ was not declared in this scope
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
                        ^
../src/Product.cpp: In member function ‘virtual void Product::loadBin(std::ifstream&)’:
../src/Product.cpp:84:18: error: ‘mPlace’ was not declared in this scope
  in.read((char*)&mPlace, sizeof(mPlace));
                  ^
make: *** [src/Product.o] Error 1
03:01:22 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Product.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Product.d" -MT"src/Product.d" -o "src/Product.o" "../src/Product.cpp"
../src/Product.cpp: In member function ‘virtual void Product::write(std::ostream&) const’:
../src/Product.cpp:52:22: error: ‘mPlace’ was not declared in this scope
  out << "PLACE: " << mPlace.getRow() << "," << mPlace.getShelf() << endl;
                      ^
../src/Product.cpp: In member function ‘virtual void Product::save(std::ofstream&) const’:
../src/Product.cpp:61:9: error: ‘mPlace’ was not declared in this scope
  out << mPlace.getRow() << "," << mPlace.getShelf() << " ";
         ^
../src/Product.cpp: In member function ‘virtual void Product::load(std::ifstream&)’:
../src/Product.cpp:68:12: error: no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘ProductType’)
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
            ^
../src/Product.cpp:68:12: note: candidates are:
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:120:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__istream_type& (*)(std::basic_istream<_CharT, _Traits>::__istream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(__istream_type& (*__pf)(__istream_type&))
       ^
/usr/include/c++/4.9/istream:120:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::basic_istream<char>::__istream_type& (*)(std::basic_istream<char>::__istream_type&) {aka std::basic_istream<char>& (*)(std::basic_istream<char>&)}’
/usr/include/c++/4.9/istream:124:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__ios_type& (*)(std::basic_istream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>; std::basic_istream<_CharT, _Traits>::__ios_type = std::basic_ios<char>]
       operator>>(__ios_type& (*__pf)(__ios_type&))
       ^
/usr/include/c++/4.9/istream:124:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::basic_istream<char>::__ios_type& (*)(std::basic_istream<char>::__ios_type&) {aka std::basic_ios<char>& (*)(std::basic_ios<char>&)}’
/usr/include/c++/4.9/istream:131:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::ios_base& (*)(std::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(ios_base& (*__pf)(ios_base&))
       ^
/usr/include/c++/4.9/istream:131:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::ios_base& (*)(std::ios_base&)’
/usr/include/c++/4.9/istream:168:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(bool&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
src/subdir.mk:45: recipe for target 'src/Product.o' failed
       operator>>(bool& __n)
       ^
/usr/include/c++/4.9/istream:168:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘bool&’
/usr/include/c++/4.9/istream:172:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(short int&) [with _CharT = char; _Traits = std::char_traits<char>]
       operator>>(short& __n);
       ^
/usr/include/c++/4.9/istream:172:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘short int&’
/usr/include/c++/4.9/istream:175:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(short unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned short& __n)
       ^
/usr/include/c++/4.9/istream:175:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘short unsigned int&’
/usr/include/c++/4.9/istream:179:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(int&) [with _CharT = char; _Traits = std::char_traits<char>]
       operator>>(int& __n);
       ^
/usr/include/c++/4.9/istream:179:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘int&’
/usr/include/c++/4.9/istream:182:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned int& __n)
       ^
/usr/include/c++/4.9/istream:182:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘unsigned int&’
/usr/include/c++/4.9/istream:186:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(long& __n)
       ^
/usr/include/c++/4.9/istream:186:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long int&’
/usr/include/c++/4.9/istream:190:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned long& __n)
       ^
/usr/include/c++/4.9/istream:190:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long unsigned int&’
/usr/include/c++/4.9/istream:195:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long long int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(long long& __n)
       ^
/usr/include/c++/4.9/istream:195:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long long int&’
/usr/include/c++/4.9/istream:199:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long long unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned long long& __n)
       ^
/usr/include/c++/4.9/istream:199:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long long unsigned int&’
/usr/include/c++/4.9/istream:214:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(float&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(float& __f)
       ^
/usr/include/c++/4.9/istream:214:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘float&’
/usr/include/c++/4.9/istream:218:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(double&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(double& __f)
       ^
/usr/include/c++/4.9/istream:218:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘double&’
/usr/include/c++/4.9/istream:222:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long double&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(long double& __f)
       ^
/usr/include/c++/4.9/istream:222:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long double&’
/usr/include/c++/4.9/istream:235:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(void*&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(void*& __p)
       ^
/usr/include/c++/4.9/istream:235:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘void*&’
/usr/include/c++/4.9/istream:259:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>]
       operator>>(__streambuf_type* __sb);
       ^
/usr/include/c++/4.9/istream:259:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::basic_istream<char>::__streambuf_type* {aka std::basic_streambuf<char>*}’
In file included from /usr/include/c++/4.9/string:53:0,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/bits/basic_string.tcc:996:5: note: template<class _CharT, class _Traits, class _Alloc> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, std::basic_string<_CharT, _Traits, _Alloc>&)
     operator>>(basic_istream<_CharT, _Traits>& __in,
     ^
/usr/include/c++/4.9/bits/basic_string.tcc:996:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   mismatched types ‘std::basic_string<_CharT, _Traits, _Alloc>’ and ‘ProductType’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/istream:882:0,
                 from /usr/include/c++/4.9/iostream:40,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/bits/istream.tcc:955:5: note: template<class _CharT2, class _Traits2> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, _CharT2*)
     operator>>(basic_istream<_CharT, _Traits>& __in, _CharT* __s)
     ^
/usr/include/c++/4.9/bits/istream.tcc:955:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   mismatched types ‘_CharT2*’ and ‘ProductType’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/istream:882:0,
                 from /usr/include/c++/4.9/iostream:40,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/bits/istream.tcc:923:5: note: template<class _CharT, class _Traits> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, _CharT&)
     operator>>(basic_istream<_CharT, _Traits>& __in, _CharT& __c)
     ^
/usr/include/c++/4.9/bits/istream.tcc:923:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘ProductType’)
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:727:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, unsigned char&)
     operator>>(basic_istream<char, _Traits>& __in, unsigned char& __c)
     ^
/usr/include/c++/4.9/istream:727:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘unsigned char&’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:732:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, signed char&)
     operator>>(basic_istream<char, _Traits>& __in, signed char& __c)
     ^
/usr/include/c++/4.9/istream:732:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘signed char&’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:774:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, unsigned char*)
     operator>>(basic_istream<char, _Traits>& __in, unsigned char* __s)
     ^
/usr/include/c++/4.9/istream:774:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘unsigned char*’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:779:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, signed char*)
     operator>>(basic_istream<char, _Traits>& __in, signed char* __s)
     ^
/usr/include/c++/4.9/istream:779:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘signed char*’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
../src/Product.cpp:68:24: error: ‘mPlace’ was not declared in this scope
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
                        ^
../src/Product.cpp: In member function ‘virtual void Product::loadBin(std::ifstream&)’:
../src/Product.cpp:84:18: error: ‘mPlace’ was not declared in this scope
  in.read((char*)&mPlace, sizeof(mPlace));
                  ^
make: *** [src/Product.o] Error 1
03:02:01 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Product.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Product.d" -MT"src/Product.d" -o "src/Product.o" "../src/Product.cpp"
../src/Product.cpp: In member function ‘virtual void Product::write(std::ostream&) const’:
../src/Product.cpp:52:22: error: ‘mPlace’ was not declared in this scope
  out << "PLACE: " << mPlace.getRow() << "," << mPlace.getShelf() << endl;
                      ^
../src/Product.cpp: In member function ‘virtual void Product::save(std::ofstream&) const’:
../src/Product.cpp:61:9: error: ‘mPlace’ was not declared in this scope
  out << mPlace.getRow() << "," << mPlace.getShelf() << " ";
         ^
../src/Product.cpp: In member function ‘virtual void Product::load(std::ifstream&)’:
../src/Product.cpp:68:12: error: no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘ProductType’)
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
            ^
../src/Product.cpp:68:12: note: candidates are:
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:120:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__istream_type& (*)(std::basic_istream<_CharT, _Traits>::__istream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(__istream_type& (*__pf)(__istream_type&))
       ^
/usr/include/c++/4.9/istream:120:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::basic_istream<char>::__istream_type& (*)(std::basic_istream<char>::__istream_type&) {aka std::basic_istream<char>& (*)(std::basic_istream<char>&)}’
/usr/include/c++/4.9/istream:124:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__ios_type& (*)(std::basic_istream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>; std::basic_istream<_CharT, _Traits>::__ios_type = std::basic_ios<char>]
       operator>>(__ios_type& (*__pf)(__ios_type&))
       ^
/usr/include/c++/4.9/istream:124:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::basic_istream<char>::__ios_type& (*)(std::basic_istream<char>::__ios_type&) {aka std::basic_ios<char>& (*)(std::basic_ios<char>&)}’
/usr/include/c++/4.9/istream:131:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::ios_base& (*)(std::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(ios_base& (*__pf)(ios_base&))
       ^
/usr/include/c++/4.9/istream:131:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::ios_base& (*)(std::ios_base&)’
/usr/include/c++/4.9/istream:168:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(bool&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(bool& __n)
       ^
/usr/include/c++/4.9/istream:168:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘bool&’
/usr/include/c++/4.9/istream:172:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(short int&) [with _CharT = char; _Traits = std::char_traits<char>]
       operator>>(short& __n);
       ^
/usr/include/c++/4.9/istream:172:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘short int&’
/usr/include/c++/4.9/istream:175:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(short unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned short& __n)
       ^
/usr/include/c++/4.9/istream:175:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘short unsigned int&’
/usr/include/c++/4.9/istream:179:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(int&) [with _CharT = char; _Traits = std::char_traits<char>]
       operator>>(int& __n);
       ^
/usr/include/c++/4.9/istream:179:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘int&’
/usr/include/c++/4.9/istream:182:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned int& __n)
src/subdir.mk:45: recipe for target 'src/Product.o' failed
       ^
/usr/include/c++/4.9/istream:182:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘unsigned int&’
/usr/include/c++/4.9/istream:186:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(long& __n)
       ^
/usr/include/c++/4.9/istream:186:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long int&’
/usr/include/c++/4.9/istream:190:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned long& __n)
       ^
/usr/include/c++/4.9/istream:190:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long unsigned int&’
/usr/include/c++/4.9/istream:195:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long long int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(long long& __n)
       ^
/usr/include/c++/4.9/istream:195:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long long int&’
/usr/include/c++/4.9/istream:199:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long long unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned long long& __n)
       ^
/usr/include/c++/4.9/istream:199:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long long unsigned int&’
/usr/include/c++/4.9/istream:214:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(float&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(float& __f)
       ^
/usr/include/c++/4.9/istream:214:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘float&’
/usr/include/c++/4.9/istream:218:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(double&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(double& __f)
       ^
/usr/include/c++/4.9/istream:218:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘double&’
/usr/include/c++/4.9/istream:222:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long double&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(long double& __f)
       ^
/usr/include/c++/4.9/istream:222:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long double&’
/usr/include/c++/4.9/istream:235:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(void*&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(void*& __p)
       ^
/usr/include/c++/4.9/istream:235:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘void*&’
/usr/include/c++/4.9/istream:259:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>]
       operator>>(__streambuf_type* __sb);
       ^
/usr/include/c++/4.9/istream:259:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::basic_istream<char>::__streambuf_type* {aka std::basic_streambuf<char>*}’
In file included from /usr/include/c++/4.9/string:53:0,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/bits/basic_string.tcc:996:5: note: template<class _CharT, class _Traits, class _Alloc> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, std::basic_string<_CharT, _Traits, _Alloc>&)
     operator>>(basic_istream<_CharT, _Traits>& __in,
     ^
/usr/include/c++/4.9/bits/basic_string.tcc:996:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   mismatched types ‘std::basic_string<_CharT, _Traits, _Alloc>’ and ‘ProductType’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/istream:882:0,
                 from /usr/include/c++/4.9/iostream:40,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/bits/istream.tcc:955:5: note: template<class _CharT2, class _Traits2> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, _CharT2*)
     operator>>(basic_istream<_CharT, _Traits>& __in, _CharT* __s)
     ^
/usr/include/c++/4.9/bits/istream.tcc:955:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   mismatched types ‘_CharT2*’ and ‘ProductType’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/istream:882:0,
                 from /usr/include/c++/4.9/iostream:40,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/bits/istream.tcc:923:5: note: template<class _CharT, class _Traits> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, _CharT&)
     operator>>(basic_istream<_CharT, _Traits>& __in, _CharT& __c)
     ^
/usr/include/c++/4.9/bits/istream.tcc:923:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘ProductType’)
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:727:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, unsigned char&)
     operator>>(basic_istream<char, _Traits>& __in, unsigned char& __c)
     ^
/usr/include/c++/4.9/istream:727:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘unsigned char&’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:732:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, signed char&)
     operator>>(basic_istream<char, _Traits>& __in, signed char& __c)
     ^
/usr/include/c++/4.9/istream:732:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘signed char&’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:774:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, unsigned char*)
     operator>>(basic_istream<char, _Traits>& __in, unsigned char* __s)
     ^
/usr/include/c++/4.9/istream:774:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘unsigned char*’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:779:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, signed char*)
     operator>>(basic_istream<char, _Traits>& __in, signed char* __s)
     ^
/usr/include/c++/4.9/istream:779:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘signed char*’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
../src/Product.cpp:68:24: error: ‘mPlace’ was not declared in this scope
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
                        ^
../src/Product.cpp: In member function ‘virtual void Product::loadBin(std::ifstream&)’:
../src/Product.cpp:84:18: error: ‘mPlace’ was not declared in this scope
  in.read((char*)&mPlace, sizeof(mPlace));
                  ^
make: *** [src/Product.o] Error 1
03:04:29 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Product.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Product.d" -MT"src/Product.d" -o "src/Product.o" "../src/Product.cpp"
../src/Product.cpp: In member function ‘virtual void Product::write(std::ostream&) const’:
../src/Product.cpp:52:22: error: ‘mPlace’ was not declared in this scope
  out << "PLACE: " << mPlace.getRow() << "," << mPlace.getShelf() << endl;
                      ^
../src/Product.cpp: In member function ‘virtual void Product::save(std::ofstream&) const’:
../src/Product.cpp:61:9: error: ‘mPlace’ was not declared in this scope
  out << mPlace.getRow() << "," << mPlace.getShelf() << " ";
         ^
../src/Product.cpp: In member function ‘virtual void Product::load(std::ifstream&)’:
../src/Product.cpp:68:12: error: no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘ProductType’)
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
            ^
../src/Product.cpp:68:12: note: candidates are:
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:120:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__istream_type& (*)(std::basic_istream<_CharT, _Traits>::__istream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(__istream_type& (*__pf)(__istream_type&))
       ^
/usr/include/c++/4.9/istream:120:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::basic_istream<char>::__istream_type& (*)(std::basic_istream<char>::__istream_type&) {aka std::basic_istream<char>& (*)(std::basic_istream<char>&)}’
/usr/include/c++/4.9/istream:124:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__ios_type& (*)(std::basic_istream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>; std::basic_istream<_CharT, _Traits>::__ios_type = std::basic_ios<char>]
       operator>>(__ios_type& (*__pf)(__ios_type&))
       ^
/usr/include/c++/4.9/istream:124:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::basic_istream<char>::__ios_type& (*)(std::basic_istream<char>::__ios_type&) {aka std::basic_ios<char>& (*)(std::basic_ios<char>&)}’
/usr/include/c++/4.9/istream:131:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::ios_base& (*)(std::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(ios_base& (*__pf)(ios_base&))
       ^
/usr/include/c++/4.9/istream:131:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::ios_base& (*)(std::ios_base&)’
/usr/include/c++/4.9/istream:168:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(bool&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(bool& __n)
       ^
/usr/include/c++/4.9/istream:168:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘bool&’
/usr/include/c++/4.9/istream:172:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(short int&) [with _CharT = char; _Traits = std::char_traits<char>]
       operator>>(short& __n);
       ^
/usr/include/c++/4.9/istream:172:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘short int&’
/usr/include/c++/4.9/istream:175:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(short unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned short& __n)
       ^
/usr/include/c++/4.9/istream:175:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘short unsigned int&’
src/subdir.mk:45: recipe for target 'src/Product.o' failed
/usr/include/c++/4.9/istream:179:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(int&) [with _CharT = char; _Traits = std::char_traits<char>]
       operator>>(int& __n);
       ^
/usr/include/c++/4.9/istream:179:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘int&’
/usr/include/c++/4.9/istream:182:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned int& __n)
       ^
/usr/include/c++/4.9/istream:182:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘unsigned int&’
/usr/include/c++/4.9/istream:186:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(long& __n)
       ^
/usr/include/c++/4.9/istream:186:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long int&’
/usr/include/c++/4.9/istream:190:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned long& __n)
       ^
/usr/include/c++/4.9/istream:190:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long unsigned int&’
/usr/include/c++/4.9/istream:195:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long long int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(long long& __n)
       ^
/usr/include/c++/4.9/istream:195:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long long int&’
/usr/include/c++/4.9/istream:199:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long long unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned long long& __n)
       ^
/usr/include/c++/4.9/istream:199:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long long unsigned int&’
/usr/include/c++/4.9/istream:214:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(float&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(float& __f)
       ^
/usr/include/c++/4.9/istream:214:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘float&’
/usr/include/c++/4.9/istream:218:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(double&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(double& __f)
       ^
/usr/include/c++/4.9/istream:218:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘double&’
/usr/include/c++/4.9/istream:222:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long double&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(long double& __f)
       ^
/usr/include/c++/4.9/istream:222:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long double&’
/usr/include/c++/4.9/istream:235:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(void*&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(void*& __p)
       ^
/usr/include/c++/4.9/istream:235:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘void*&’
/usr/include/c++/4.9/istream:259:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>]
       operator>>(__streambuf_type* __sb);
       ^
/usr/include/c++/4.9/istream:259:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::basic_istream<char>::__streambuf_type* {aka std::basic_streambuf<char>*}’
In file included from /usr/include/c++/4.9/string:53:0,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/bits/basic_string.tcc:996:5: note: template<class _CharT, class _Traits, class _Alloc> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, std::basic_string<_CharT, _Traits, _Alloc>&)
     operator>>(basic_istream<_CharT, _Traits>& __in,
     ^
/usr/include/c++/4.9/bits/basic_string.tcc:996:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   mismatched types ‘std::basic_string<_CharT, _Traits, _Alloc>’ and ‘ProductType’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/istream:882:0,
                 from /usr/include/c++/4.9/iostream:40,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/bits/istream.tcc:955:5: note: template<class _CharT2, class _Traits2> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, _CharT2*)
     operator>>(basic_istream<_CharT, _Traits>& __in, _CharT* __s)
     ^
/usr/include/c++/4.9/bits/istream.tcc:955:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   mismatched types ‘_CharT2*’ and ‘ProductType’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/istream:882:0,
                 from /usr/include/c++/4.9/iostream:40,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/bits/istream.tcc:923:5: note: template<class _CharT, class _Traits> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, _CharT&)
     operator>>(basic_istream<_CharT, _Traits>& __in, _CharT& __c)
     ^
/usr/include/c++/4.9/bits/istream.tcc:923:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘ProductType’)
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:727:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, unsigned char&)
     operator>>(basic_istream<char, _Traits>& __in, unsigned char& __c)
     ^
/usr/include/c++/4.9/istream:727:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘unsigned char&’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:732:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, signed char&)
     operator>>(basic_istream<char, _Traits>& __in, signed char& __c)
     ^
/usr/include/c++/4.9/istream:732:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘signed char&’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:774:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, unsigned char*)
     operator>>(basic_istream<char, _Traits>& __in, unsigned char* __s)
     ^
/usr/include/c++/4.9/istream:774:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘unsigned char*’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:779:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, signed char*)
     operator>>(basic_istream<char, _Traits>& __in, signed char* __s)
     ^
/usr/include/c++/4.9/istream:779:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:68:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘signed char*’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
../src/Product.cpp:68:24: error: ‘mPlace’ was not declared in this scope
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
                        ^
../src/Product.cpp: In member function ‘virtual void Product::loadBin(std::ifstream&)’:
../src/Product.cpp:84:18: error: ‘mPlace’ was not declared in this scope
  in.read((char*)&mPlace, sizeof(mPlace));
                  ^
make: *** [src/Product.o] Error 1
03:05:23 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Product.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Product.d" -MT"src/Product.d" -o "src/Product.o" "../src/Product.cpp"
../src/Product.cpp: In member function ‘virtual void Product::write(std::ostream&) const’:
../src/Product.cpp:52:22: error: ‘mPlace’ was not declared in this scope
  out << "PLACE: " << mPlace.getRow() << "," << mPlace.getShelf() << endl;
                      ^
../src/Product.cpp: In member function ‘virtual void Product::load(std::ifstream&)’:
../src/Product.cpp:69:12: error: no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘ProductType’)
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
            ^
../src/Product.cpp:69:12: note: candidates are:
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:120:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__istream_type& (*)(std::basic_istream<_CharT, _Traits>::__istream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(__istream_type& (*__pf)(__istream_type&))
       ^
/usr/include/c++/4.9/istream:120:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::basic_istream<char>::__istream_type& (*)(std::basic_istream<char>::__istream_type&) {aka std::basic_istream<char>& (*)(std::basic_istream<char>&)}’
/usr/include/c++/4.9/istream:124:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__ios_type& (*)(std::basic_istream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>; std::basic_istream<_CharT, _Traits>::__ios_type = std::basic_ios<char>]
       operator>>(__ios_type& (*__pf)(__ios_type&))
       ^
/usr/include/c++/4.9/istream:124:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::basic_istream<char>::__ios_type& (*)(std::basic_istream<char>::__ios_type&) {aka std::basic_ios<char>& (*)(std::basic_ios<char>&)}’
/usr/include/c++/4.9/istream:131:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::ios_base& (*)(std::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(ios_base& (*__pf)(ios_base&))
       ^
/usr/include/c++/4.9/istream:131:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::ios_base& (*)(std::ios_base&)’
/usr/include/c++/4.9/istream:168:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(bool&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(bool& __n)
       ^
/usr/include/c++/4.9/istream:168:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘bool&’
src/subdir.mk:45: recipe for target 'src/Product.o' failed
/usr/include/c++/4.9/istream:172:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(short int&) [with _CharT = char; _Traits = std::char_traits<char>]
       operator>>(short& __n);
       ^
/usr/include/c++/4.9/istream:172:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘short int&’
/usr/include/c++/4.9/istream:175:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(short unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned short& __n)
       ^
/usr/include/c++/4.9/istream:175:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘short unsigned int&’
/usr/include/c++/4.9/istream:179:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(int&) [with _CharT = char; _Traits = std::char_traits<char>]
       operator>>(int& __n);
       ^
/usr/include/c++/4.9/istream:179:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘int&’
/usr/include/c++/4.9/istream:182:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned int& __n)
       ^
/usr/include/c++/4.9/istream:182:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘unsigned int&’
/usr/include/c++/4.9/istream:186:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(long& __n)
       ^
/usr/include/c++/4.9/istream:186:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long int&’
/usr/include/c++/4.9/istream:190:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned long& __n)
       ^
/usr/include/c++/4.9/istream:190:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long unsigned int&’
/usr/include/c++/4.9/istream:195:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long long int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(long long& __n)
       ^
/usr/include/c++/4.9/istream:195:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long long int&’
/usr/include/c++/4.9/istream:199:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long long unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned long long& __n)
       ^
/usr/include/c++/4.9/istream:199:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long long unsigned int&’
/usr/include/c++/4.9/istream:214:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(float&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(float& __f)
       ^
/usr/include/c++/4.9/istream:214:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘float&’
/usr/include/c++/4.9/istream:218:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(double&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(double& __f)
       ^
/usr/include/c++/4.9/istream:218:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘double&’
/usr/include/c++/4.9/istream:222:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long double&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(long double& __f)
       ^
/usr/include/c++/4.9/istream:222:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long double&’
/usr/include/c++/4.9/istream:235:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(void*&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(void*& __p)
       ^
/usr/include/c++/4.9/istream:235:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘void*&’
/usr/include/c++/4.9/istream:259:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>]
       operator>>(__streambuf_type* __sb);
       ^
/usr/include/c++/4.9/istream:259:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::basic_istream<char>::__streambuf_type* {aka std::basic_streambuf<char>*}’
In file included from /usr/include/c++/4.9/string:53:0,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/bits/basic_string.tcc:996:5: note: template<class _CharT, class _Traits, class _Alloc> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, std::basic_string<_CharT, _Traits, _Alloc>&)
     operator>>(basic_istream<_CharT, _Traits>& __in,
     ^
/usr/include/c++/4.9/bits/basic_string.tcc:996:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:69:15: note:   mismatched types ‘std::basic_string<_CharT, _Traits, _Alloc>’ and ‘ProductType’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/istream:882:0,
                 from /usr/include/c++/4.9/iostream:40,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/bits/istream.tcc:955:5: note: template<class _CharT2, class _Traits2> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, _CharT2*)
     operator>>(basic_istream<_CharT, _Traits>& __in, _CharT* __s)
     ^
/usr/include/c++/4.9/bits/istream.tcc:955:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:69:15: note:   mismatched types ‘_CharT2*’ and ‘ProductType’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/istream:882:0,
                 from /usr/include/c++/4.9/iostream:40,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/bits/istream.tcc:923:5: note: template<class _CharT, class _Traits> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, _CharT&)
     operator>>(basic_istream<_CharT, _Traits>& __in, _CharT& __c)
     ^
/usr/include/c++/4.9/bits/istream.tcc:923:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:69:15: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘ProductType’)
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:727:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, unsigned char&)
     operator>>(basic_istream<char, _Traits>& __in, unsigned char& __c)
     ^
/usr/include/c++/4.9/istream:727:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:69:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘unsigned char&’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:732:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, signed char&)
     operator>>(basic_istream<char, _Traits>& __in, signed char& __c)
     ^
/usr/include/c++/4.9/istream:732:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:69:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘signed char&’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:774:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, unsigned char*)
     operator>>(basic_istream<char, _Traits>& __in, unsigned char* __s)
     ^
/usr/include/c++/4.9/istream:774:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:69:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘unsigned char*’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:779:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, signed char*)
     operator>>(basic_istream<char, _Traits>& __in, signed char* __s)
     ^
/usr/include/c++/4.9/istream:779:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:69:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘signed char*’
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
               ^
../src/Product.cpp:69:24: error: ‘mPlace’ was not declared in this scope
  in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
                        ^
../src/Product.cpp: In member function ‘virtual void Product::loadBin(std::ifstream&)’:
../src/Product.cpp:85:18: error: ‘mPlace’ was not declared in this scope
  in.read((char*)&mPlace, sizeof(mPlace));
                  ^
make: *** [src/Product.o] Error 1
03:05:48 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Product.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Product.d" -MT"src/Product.d" -o "src/Product.o" "../src/Product.cpp"
../src/Product.cpp: In member function ‘virtual void Product::write(std::ostream&) const’:
../src/Product.cpp:52:22: error: ‘mPlace’ was not declared in this scope
  out << "PLACE: " << mPlace.getRow() << "," << mPlace.getShelf() << endl;
                      ^
../src/Product.cpp: In member function ‘virtual void Product::load(std::ifstream&)’:
../src/Product.cpp:69:12: error: no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘ProductType’)
  in >> mId >> mType >> mRow >> mShelf >> mWeight >> mExposure;
            ^
../src/Product.cpp:69:12: note: candidates are:
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:120:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__istream_type& (*)(std::basic_istream<_CharT, _Traits>::__istream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(__istream_type& (*__pf)(__istream_type&))
       ^
/usr/include/c++/4.9/istream:120:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::basic_istream<char>::__istream_type& (*)(std::basic_istream<char>::__istream_type&) {aka std::basic_istream<char>& (*)(std::basic_istream<char>&)}’
/usr/include/c++/4.9/istream:124:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__ios_type& (*)(std::basic_istream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>; std::basic_istream<_CharT, _Traits>::__ios_type = std::basic_ios<char>]
       operator>>(__ios_type& (*__pf)(__ios_type&))
       ^
/usr/include/c++/4.9/istream:124:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::basic_istream<char>::__ios_type& (*)(std::basic_istream<char>::__ios_type&) {aka std::basic_ios<char>& (*)(std::basic_ios<char>&)}’
src/subdir.mk:45: recipe for target 'src/Product.o' failed
/usr/include/c++/4.9/istream:131:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::ios_base& (*)(std::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(ios_base& (*__pf)(ios_base&))
       ^
/usr/include/c++/4.9/istream:131:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::ios_base& (*)(std::ios_base&)’
/usr/include/c++/4.9/istream:168:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(bool&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(bool& __n)
       ^
/usr/include/c++/4.9/istream:168:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘bool&’
/usr/include/c++/4.9/istream:172:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(short int&) [with _CharT = char; _Traits = std::char_traits<char>]
       operator>>(short& __n);
       ^
/usr/include/c++/4.9/istream:172:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘short int&’
/usr/include/c++/4.9/istream:175:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(short unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned short& __n)
       ^
/usr/include/c++/4.9/istream:175:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘short unsigned int&’
/usr/include/c++/4.9/istream:179:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(int&) [with _CharT = char; _Traits = std::char_traits<char>]
       operator>>(int& __n);
       ^
/usr/include/c++/4.9/istream:179:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘int&’
/usr/include/c++/4.9/istream:182:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned int& __n)
       ^
/usr/include/c++/4.9/istream:182:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘unsigned int&’
/usr/include/c++/4.9/istream:186:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(long& __n)
       ^
/usr/include/c++/4.9/istream:186:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long int&’
/usr/include/c++/4.9/istream:190:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned long& __n)
       ^
/usr/include/c++/4.9/istream:190:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long unsigned int&’
/usr/include/c++/4.9/istream:195:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long long int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(long long& __n)
       ^
/usr/include/c++/4.9/istream:195:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long long int&’
/usr/include/c++/4.9/istream:199:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long long unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(unsigned long long& __n)
       ^
/usr/include/c++/4.9/istream:199:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long long unsigned int&’
/usr/include/c++/4.9/istream:214:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(float&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(float& __f)
       ^
/usr/include/c++/4.9/istream:214:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘float&’
/usr/include/c++/4.9/istream:218:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(double&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(double& __f)
       ^
/usr/include/c++/4.9/istream:218:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘double&’
/usr/include/c++/4.9/istream:222:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long double&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(long double& __f)
       ^
/usr/include/c++/4.9/istream:222:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘long double&’
/usr/include/c++/4.9/istream:235:7: note: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(void*&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]
       operator>>(void*& __p)
       ^
/usr/include/c++/4.9/istream:235:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘void*&’
/usr/include/c++/4.9/istream:259:7: note: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>]
       operator>>(__streambuf_type* __sb);
       ^
/usr/include/c++/4.9/istream:259:7: note:   no known conversion for argument 1 from ‘ProductType’ to ‘std::basic_istream<char>::__streambuf_type* {aka std::basic_streambuf<char>*}’
In file included from /usr/include/c++/4.9/string:53:0,
                 from /usr/include/c++/4.9/bits/locale_classes.h:40,
                 from /usr/include/c++/4.9/bits/ios_base.h:41,
                 from /usr/include/c++/4.9/ios:42,
                 from /usr/include/c++/4.9/ostream:38,
                 from /usr/include/c++/4.9/iostream:39,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/bits/basic_string.tcc:996:5: note: template<class _CharT, class _Traits, class _Alloc> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, std::basic_string<_CharT, _Traits, _Alloc>&)
     operator>>(basic_istream<_CharT, _Traits>& __in,
     ^
/usr/include/c++/4.9/bits/basic_string.tcc:996:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:69:15: note:   mismatched types ‘std::basic_string<_CharT, _Traits, _Alloc>’ and ‘ProductType’
  in >> mId >> mType >> mRow >> mShelf >> mWeight >> mExposure;
               ^
In file included from /usr/include/c++/4.9/istream:882:0,
                 from /usr/include/c++/4.9/iostream:40,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/bits/istream.tcc:955:5: note: template<class _CharT2, class _Traits2> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, _CharT2*)
     operator>>(basic_istream<_CharT, _Traits>& __in, _CharT* __s)
     ^
/usr/include/c++/4.9/bits/istream.tcc:955:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:69:15: note:   mismatched types ‘_CharT2*’ and ‘ProductType’
  in >> mId >> mType >> mRow >> mShelf >> mWeight >> mExposure;
               ^
In file included from /usr/include/c++/4.9/istream:882:0,
                 from /usr/include/c++/4.9/iostream:40,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/bits/istream.tcc:923:5: note: template<class _CharT, class _Traits> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, _CharT&)
     operator>>(basic_istream<_CharT, _Traits>& __in, _CharT& __c)
     ^
/usr/include/c++/4.9/bits/istream.tcc:923:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:69:15: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘ProductType’)
  in >> mId >> mType >> mRow >> mShelf >> mWeight >> mExposure;
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:727:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, unsigned char&)
     operator>>(basic_istream<char, _Traits>& __in, unsigned char& __c)
     ^
/usr/include/c++/4.9/istream:727:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:69:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘unsigned char&’
  in >> mId >> mType >> mRow >> mShelf >> mWeight >> mExposure;
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:732:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, signed char&)
     operator>>(basic_istream<char, _Traits>& __in, signed char& __c)
     ^
/usr/include/c++/4.9/istream:732:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:69:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘signed char&’
  in >> mId >> mType >> mRow >> mShelf >> mWeight >> mExposure;
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:774:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, unsigned char*)
     operator>>(basic_istream<char, _Traits>& __in, unsigned char* __s)
     ^
/usr/include/c++/4.9/istream:774:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:69:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘unsigned char*’
  in >> mId >> mType >> mRow >> mShelf >> mWeight >> mExposure;
               ^
In file included from /usr/include/c++/4.9/iostream:40:0,
                 from ../src/Product.h:9,
                 from ../src/Product.cpp:7:
/usr/include/c++/4.9/istream:779:5: note: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, signed char*)
     operator>>(basic_istream<char, _Traits>& __in, signed char* __s)
     ^
/usr/include/c++/4.9/istream:779:5: note:   template argument deduction/substitution failed:
../src/Product.cpp:69:15: note:   cannot convert ‘((Product*)this)->Product::mType’ (type ‘ProductType’) to type ‘signed char*’
  in >> mId >> mType >> mRow >> mShelf >> mWeight >> mExposure;
               ^
../src/Product.cpp: In member function ‘virtual void Product::loadBin(std::ifstream&)’:
../src/Product.cpp:84:18: error: ‘mPlace’ was not declared in this scope
  in.read((char*)&mPlace, sizeof(mPlace));
                  ^
make: *** [src/Product.o] Error 1
03:09:30 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/CheeseProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/CheeseProduct.d" -MT"src/CheeseProduct.d" -o "src/CheeseProduct.o" "../src/CheeseProduct.cpp"
Finished building: ../src/CheeseProduct.cpp
 
Building file: ../src/FarmProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/FarmProduct.d" -MT"src/FarmProduct.d" -o "src/FarmProduct.o" "../src/FarmProduct.cpp"
Finished building: ../src/FarmProduct.cpp
 
Building file: ../src/FruitProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/FruitProduct.d" -MT"src/FruitProduct.d" -o "src/FruitProduct.o" "../src/FruitProduct.cpp"
Finished building: ../src/FruitProduct.cpp
 
Building file: ../src/MilkProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/MilkProduct.d" -MT"src/MilkProduct.d" -o "src/MilkProduct.o" "../src/MilkProduct.cpp"
Finished building: ../src/MilkProduct.cpp
 
Building file: ../src/OtherMilkProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/OtherMilkProduct.d" -MT"src/OtherMilkProduct.d" -o "src/OtherMilkProduct.o" "../src/OtherMilkProduct.cpp"
Finished building: ../src/OtherMilkProduct.cpp
 
Building file: ../src/PackageProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/PackageProduct.d" -MT"src/PackageProduct.d" -o "src/PackageProduct.o" "../src/PackageProduct.cpp"
Finished building: ../src/PackageProduct.cpp
 
Building file: ../src/Product.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Product.d" -MT"src/Product.d" -o "src/Product.o" "../src/Product.cpp"
Finished building: ../src/Product.cpp
 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
../src/Store.cpp: In constructor ‘Store::Store(const string&, int, int, const Product*)’:
../src/Store.cpp:27:38: error: lvalue required as unary ‘&’ operand
   int id = &allProductArray[i].getId();
                                      ^
make: *** [src/Store.o] Error 1
src/subdir.mk:45: recipe for target 'src/Store.o' failed
03:09:58 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
../src/Store.cpp: In constructor ‘Store::Store(const string&, int, int, const Product*)’:
../src/Store.cpp:27:43: error: lvalue required as unary ‘&’ operand
   int id = (int)&allProductArray[i].getId();
                                           ^
src/subdir.mk:45: recipe for target 'src/Store.o' failed
make: *** [src/Store.o] Error 1
03:10:21 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
Finished building: ../src/Store.cpp
 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
Finished building: ../src/Task4New.cpp
 
Building file: ../src/VegtableProduct.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/VegtableProduct.d" -MT"src/VegtableProduct.d" -o "src/VegtableProduct.o" "../src/VegtableProduct.cpp"
Finished building: ../src/VegtableProduct.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
03:10:42 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
03:11:51 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Task4New.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Task4New.d" -MT"src/Task4New.d" -o "src/Task4New.o" "../src/Task4New.cpp"
Finished building: ../src/Task4New.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
03:13:00 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
03:14:06 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
Finished building: ../src/Store.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
03:14:11 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
03:14:23 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
03:15:30 **** Incremental Build of configuration Debug for project Task4New ****
make all 
Building file: ../src/Store.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Store.d" -MT"src/Store.d" -o "src/Store.o" "../src/Store.cpp"
Finished building: ../src/Store.cpp
 
Building target: Task4New
Invoking: GCC C++ Linker
g++  -o "Task4New"  ./src/CheeseProduct.o ./src/FarmProduct.o ./src/FruitProduct.o ./src/MilkProduct.o ./src/OtherMilkProduct.o ./src/PackageProduct.o ./src/Product.o ./src/Store.o ./src/Task4New.o ./src/VegtableProduct.o   
Finished building target: Task4New
 
03:15:32 **** Incremental Build of configuration Debug for project Task4New ****
make all 
make: Nothing to be done for 'all'.
