/*
 * Store.cpp
 *
 *  Created on: Apr 21, 2016
 *      Author: orenk
 */
#pragma once

using namespace std;

Store::Store()
{
	mFactor = 0;
	mProductsAmount = 0;
	mAllProductArray = 0; //NULL
	mStoreName = new char[7];
	strcpy(mStoreName, "Default");
}

Store::~Store() {
}

Store::Store(char* storeName, int factor, int productsAmount,
		Product* allProductArray[])
{
	mFactor = factor;
	for(int i = 0;i < mProductsAmount; ++i)
	{
		addProductToStore(&mAllProductArray[i]);
	}

	mProductsAmount = productsAmount;
}

void Store::addProductToStore(Product &product) {

	if(typeid(*product) == typeid(FruitProduct))
	{
		mAllProductArray[i] = dynamic_cast<FruitProduct>(product);
	}
	else if(typeid(*product) == typeid(VegtableProduct))
	{
		addProductToStore((VegtableProduct)mAllProductArray[i]&);
	}
	else if(typeid(*product) == typeid(NonMilkyProduct))
	{
		addProductToStore((NonMilkyProduct)mAllProductArray[i]&);
	}
	else if(typeid(*product) == typeid(MilkyCheeseProduct))
	{
		addProductToStore((MilkyCheeseProduct)mAllProductArray[i]&);
	}
	else
	{
		throw "Wrong type";
	}

	mProductsAmount++;
}

int Store::calculateStoreValue() {

	int summery = 0;
	for(int i = 0;i < mProductsAmount; ++i)
	{
		if(typeid(mAllProductArray[i]) == typeid(FruitProduct))
		{
			summery += (FruitProduct)mAllProductArray[i]->calculatePrice();
		}
		else if(typeid(mAllProductArray[i]) == typeid(VegtableProduct))
		{
			summery += (VegtableProduct)mAllProductArray[i]->calculatePrice();
		}
		else if(typeid(mAllProductArray[i]) == typeid(NonMilkyProduct))
		{
			summery += (NonMilkyProduct)mAllProductArray[i]->calculatePrice();
		}
		else if(typeid(mAllProductArray[i]) == typeid(MilkyCheeseProduct))
		{
			summery += (MilkyCheeseProduct)mAllProductArray[i]->calculatePrice();
		}
		else
		{
			summery += (MilkProduct)mAllProductArray[i]->calculatePrice();
		}
	}
}

void Store::printStoreDetails() {

	cout << "Store Details Are:" << endl;
	//cout <<
}
