/*
 * NonMilkyProduct.cpp
 *
 *  Created on: Apr 21, 2016
 *      Author: orenk
 */
#include "NonMilkyProduct.h"
#include "iostream"

using namespace std;

NonMilkyProduct::NonMilkyProduct(): MilkProduct() {

	mAmountOfNonMilkAdditions = 1;
	mNonMilkNames[1] = {"Default"};
}

NonMilkyProduct::NonMilkyProduct(char* name, int id, ShelfRow place, int weight,
		ProductType type, ExposureValue exposure, int fat, MilkType milktype,
		int colorcount, int amountOfNonMilkAdditions, char* nonMilkNames[]):
					MilkProduct(name, id, place, weight, type, exposure, fat, milktype,
							colorcount)
{
	mAmountOfNonMilkAdditions = amountOfNonMilkAdditions;
}

NonMilkyProduct::~NonMilkyProduct() {
	// TODO Auto-generated destructor stub
}

int NonMilkyProduct::calculatePrice() {
	return MilkProduct::calculatePrice() + (mAmountOfNonMilkAdditions * 5);
}

void NonMilkyProduct::print() {

	MilkProduct::print();
	cout << "(" << endl;
	for(int i=0; i<mAmountOfNonMilkAdditions; ++i)
	{
		cout << mNonMilkNames[i] << "," << endl;
	}

	cout << "(" << mAmountOfNonMilkAdditions << ")" << endl;
}

void NonMilkyProduct::write(ostream& out) const
{
	MilkProduct::write(out);
	out << "AMOUNT OF NON MILK ADDITIONS: " << mAmountOfNonMilkAdditions << endl;
}

void NonMilkyProduct::save(ofstream & out) const
{
	MilkProduct::save(out);
	out << mAmountOfNonMilkAdditions << " ";
}

void NonMilkyProduct::load(ifstream & in)
{
	MilkProduct::load(in);
	in >> mAmountOfNonMilkAdditions;
}

void NonMilkyProduct::saveBin(ofstream & out) const
{
	MilkProduct::saveBin(out);
	out.write((char*)&mAmountOfNonMilkAdditions, sizeof(mAmountOfNonMilkAdditions));
}

void NonMilkyProduct::loadBin(ifstream & in)
{
	MilkProduct::loadBin(in);
	in.read((char*)&mAmountOfNonMilkAdditions, sizeof(mAmountOfNonMilkAdditions));
}
