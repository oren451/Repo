/*
 * Store.cpp
 *
 *  Created on: Apr 21, 2016
 *      Author: orenk
 */
#include "Store.h"
#include "FruitProduct.h"
#include "VegtableProduct.h"
#include "CheeseProduct.h"
#include "OtherMilkProduct.h"

using namespace std;

Store::~Store() {
}

Store::Store(const string& storeName, int factor, int productsAmount, const Product* allProductArray):
	mStoreName(storeName),
	mFactor(factor),
	mProductsAmount(productsAmount),
	mAllProductArray()
{
	for(int i = 0;i < mProductsAmount; ++i)
	{
		addProductToStore(allProductArray[i]);
	}
}

void Store::addProductToStore(const Product &product) {

	if(typeid(product) == typeid(FruitProduct))
	{
		mAllProductArray.push_back(static_cast<FruitProduct>(product));
	}
	else if(typeid(*product) == typeid(VegtableProduct))
	{
		mAllProductArray.push_back(static_cast<VegtableProduct>(product));
	}
	else if(typeid(*product) == typeid(OtherMilkProduct))
	{
		mAllProductArray.push_back(static_cast<OtherMilkProduct>(product));
	}
	else if(typeid(*product) == typeid(CheeseProduct))
	{
		mAllProductArray[currentLength] = dynamic_cast<MilkyCheeseProduct>(product);
	}
	else
	{
		throw "Wrong type";
	}

	mProductsAmount++;
}

int Store::calculateStoreValue() {

	int summery = 0;
	for(int i = 0;i < mAllProductArray.size(); ++i)
	{
		summery += mAllProductArray[i].calculatePrice();
	}

	return summery;
}

void Store::printStoreDetails() {

	cout << "Store Details Are:" << endl;
	//cout <<
}

