/*
 * Product.cpp
 *
 *  Created on: Apr 21, 2016
 *      Author: orenk
 */
#include "Product.h"
#include "iostream"

using namespace std;

Product::Product()
{
	mId = 0;
	mPlace();
	mExposure = Low;
	mType = NULL;
	mWeight = 0;
}

Product::Product(int id,
		ShelfRow place, int weight, ProductType type, ExposureValue exposure)
{
	mId = id;
	mPlace = place;
	mType = type;
	mExposure = exposure;
	mWeight = weight;
}

void Product::print()
{
	cout << mPlace.print() << " (" << mType << "," << mWeight << "," << mExposure << ") "
			<< mId << endl;
}

Product::~Product() {
}

void Product::write(ostream& out) const
{
	out << "ID: " << mId << endl;
	out << "TYPE: " << mType << endl;
	out << "PLACE: " << mPlace.getRow() << "," << mPlace.getShelf() << endl;
	out << "WEIGHT: " << mWeight << endl;
	out << "EXPOSURE: " << mExposure << endl;
}

void Product::save(ofstream & out) const
{
	out << mId << " ";
	out << mType << " ";
	out << mPlace.getRow() << "," << mPlace.getShelf() << " ";
	out << mWeight << " ";
	out << mExposure << " ";
}

void Product::load(ifstream & in)
{
	in >> mId >> mType >> mPlace.getRow() >> mPlace.getShelf()
			>> mWeight >> mExposure;
}

void Product::saveBin(ofstream & out) const
{
	out.write((char*)&mId, sizeof(mId));
	out.write((char*)&mPlace, sizeof(mPlace));
	out.write((char*)&mWeight, sizeof(mWeight));
	out.write((char*)&mExposure, sizeof(mExposure));
}

void Product::loadBin(ifstream & in)
{
	in.read((char*)&mId, sizeof(mId));
	in.read((char*)&mPlace, sizeof(mPlace));
}

